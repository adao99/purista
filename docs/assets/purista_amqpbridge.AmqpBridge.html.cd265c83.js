import{_ as o}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as l,c,b as e,e as n,w as i,d as t,a as s,r}from"./app.520110ff.js";const h={},u=e("h1",{id:"class-amqpbridge",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#class-amqpbridge","aria-hidden":"true"},"#"),t(" Class: AmqpBridge")],-1),p=e("p",null,"A adapter to use rabbitMQ as event bridge.",-1),_=e("h2",{id:"hierarchy",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#hierarchy","aria-hidden":"true"},"#"),t(" Hierarchy")],-1),m=e("code",null,"EventBridge",-1),g=e("p",null,[t("\u21B3 "),e("strong",null,[e("code",null,"AmqpBridge")])],-1),f=e("h2",{id:"table-of-contents",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#table-of-contents","aria-hidden":"true"},"#"),t(" Table of contents")],-1),b=e("h3",{id:"constructors",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#constructors","aria-hidden":"true"},"#"),t(" Constructors")],-1),x=e("h3",{id:"properties",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#properties","aria-hidden":"true"},"#"),t(" Properties")],-1),q=e("h3",{id:"accessors",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#accessors","aria-hidden":"true"},"#"),t(" Accessors")],-1),y=e("h3",{id:"methods",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#methods","aria-hidden":"true"},"#"),t(" Methods")],-1),v=s('<h2 id="constructors-1" tabindex="-1"><a class="header-anchor" href="#constructors-1" aria-hidden="true">#</a> Constructors</h2><h3 id="constructor" tabindex="-1"><a class="header-anchor" href="#constructor" aria-hidden="true">#</a> constructor</h3><p>\u2022 <strong>new AmqpBridge</strong>(<code>baseLogger</code>, <code>conf?</code>)</p><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h4>',4),B=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),A=e("td",{style:{"text-align":"left"}},[e("code",null,"baseLogger")],-1),E={style:{"text-align":"left"}},k=e("code",null,"Logger",-1),T=e("td",{style:{"text-align":"left"}},[e("code",null,"conf")],-1),P={style:{"text-align":"left"}},w=e("code",null,"AmqpBridgeConfig",-1),L=e("h4",{id:"overrides",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#overrides","aria-hidden":"true"},"#"),t(" Overrides")],-1),N=e("h4",{id:"defined-in",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in","aria-hidden":"true"},"#"),t(" Defined in")],-1),C={href:"https://github.com/sebastianwessel/purista/blob/dc1cd23/packages/amqpbridge/src/AmqpBridge.impl.ts#L73",target:"_blank",rel:"noopener noreferrer"},D=s('<h2 id="properties-1" tabindex="-1"><a class="header-anchor" href="#properties-1" aria-hidden="true">#</a> Properties</h2><h3 id="channel" tabindex="-1"><a class="header-anchor" href="#channel" aria-hidden="true">#</a> channel</h3><p>\u2022 <code>Protected</code> <code>Optional</code> <strong>channel</strong>: <code>Channel</code></p><h4 id="defined-in-1" tabindex="-1"><a class="header-anchor" href="#defined-in-1" aria-hidden="true">#</a> Defined in</h4>',4),R={href:"https://github.com/sebastianwessel/purista/blob/dc1cd23/packages/amqpbridge/src/AmqpBridge.impl.ts#L44",target:"_blank",rel:"noopener noreferrer"},S=e("hr",null,null,-1),I=e("h3",{id:"config",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#config","aria-hidden":"true"},"#"),t(" config")],-1),M=e("code",null,"Protected",-1),K=e("strong",null,"config",-1),O=e("code",null,"AmqpBridgeConfig",-1),F=e("h4",{id:"defined-in-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-2","aria-hidden":"true"},"#"),t(" Defined in")],-1),G={href:"https://github.com/sebastianwessel/purista/blob/dc1cd23/packages/amqpbridge/src/AmqpBridge.impl.ts#L42",target:"_blank",rel:"noopener noreferrer"},Q=s('<hr><h3 id="connection" tabindex="-1"><a class="header-anchor" href="#connection" aria-hidden="true">#</a> connection</h3><p>\u2022 <code>Protected</code> <code>Optional</code> <strong>connection</strong>: <code>Connection</code></p><h4 id="defined-in-3" tabindex="-1"><a class="header-anchor" href="#defined-in-3" aria-hidden="true">#</a> Defined in</h4>',4),V={href:"https://github.com/sebastianwessel/purista/blob/dc1cd23/packages/amqpbridge/src/AmqpBridge.impl.ts#L43",target:"_blank",rel:"noopener noreferrer"},j=e("hr",null,null,-1),H=e("h3",{id:"encoder",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#encoder","aria-hidden":"true"},"#"),t(" encoder")],-1),U=e("code",null,"Protected",-1),z=e("strong",null,"encoder",-1),J=e("code",null,"Encoder",-1),W=e("h4",{id:"defined-in-4",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-4","aria-hidden":"true"},"#"),t(" Defined in")],-1),X={href:"https://github.com/sebastianwessel/purista/blob/dc1cd23/packages/amqpbridge/src/AmqpBridge.impl.ts#L65",target:"_blank",rel:"noopener noreferrer"},Y=e("hr",null,null,-1),Z=e("h3",{id:"encrypter",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#encrypter","aria-hidden":"true"},"#"),t(" encrypter")],-1),$=e("code",null,"Protected",-1),ee=e("strong",null,"encrypter",-1),te=e("code",null,"Encrypter",-1),ne=e("h4",{id:"defined-in-5",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-5","aria-hidden":"true"},"#"),t(" Defined in")],-1),de={href:"https://github.com/sebastianwessel/purista/blob/dc1cd23/packages/amqpbridge/src/AmqpBridge.impl.ts#L69",target:"_blank",rel:"noopener noreferrer"},ie=e("hr",null,null,-1),ae=e("h3",{id:"log",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#log","aria-hidden":"true"},"#"),t(" log")],-1),se=e("code",null,"Protected",-1),re=e("strong",null,"log",-1),oe=e("code",null,"Logger",-1),le=e("h4",{id:"defined-in-6",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-6","aria-hidden":"true"},"#"),t(" Defined in")],-1),ce={href:"https://github.com/sebastianwessel/purista/blob/dc1cd23/packages/amqpbridge/src/AmqpBridge.impl.ts#L41",target:"_blank",rel:"noopener noreferrer"},he=e("hr",null,null,-1),ue=e("h3",{id:"pendinginvocations",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#pendinginvocations","aria-hidden":"true"},"#"),t(" pendingInvocations")],-1),pe=e("code",null,"Protected",-1),_e=e("strong",null,"pendingInvocations",-1),me=e("code",null,"Map",-1),ge=e("code",null,"string",-1),fe=e("code",null,"PendigInvocation",-1),be=e("h4",{id:"defined-in-7",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-7","aria-hidden":"true"},"#"),t(" Defined in")],-1),xe={href:"https://github.com/sebastianwessel/purista/blob/dc1cd23/packages/amqpbridge/src/AmqpBridge.impl.ts#L55",target:"_blank",rel:"noopener noreferrer"},qe=s('<hr><h3 id="replyqueuename" tabindex="-1"><a class="header-anchor" href="#replyqueuename" aria-hidden="true">#</a> replyQueueName</h3><p>\u2022 <code>Protected</code> <code>Optional</code> <strong>replyQueueName</strong>: <code>string</code></p><h4 id="defined-in-8" tabindex="-1"><a class="header-anchor" href="#defined-in-8" aria-hidden="true">#</a> Defined in</h4>',4),ye={href:"https://github.com/sebastianwessel/purista/blob/dc1cd23/packages/amqpbridge/src/AmqpBridge.impl.ts#L46",target:"_blank",rel:"noopener noreferrer"},ve=e("hr",null,null,-1),Be=e("h3",{id:"servicefunctions",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#servicefunctions","aria-hidden":"true"},"#"),t(" serviceFunctions")],-1),Ae=e("code",null,"Protected",-1),Ee=e("strong",null,"serviceFunctions",-1),ke=e("code",null,"Map",-1),Te=e("code",null,"string",-1),Pe=e("code",null,"cb",-1),we=e("code",null,"message",-1),Le=e("code",null,"Command",-1),Ne=e("code",null,"unknown",-1),Ce=e("code",null,"unknown",-1),De=e("code",null,"Promise",-1),Re=e("code",null,"CommandErrorResponse",-1),Se=e("code",null,"CommandSuccessResponse",-1),Ie=e("code",null,"unknown",-1),Me=e("code",null,"channel",-1),Ke=e("code",null,"Channel",-1),Oe=e("h4",{id:"defined-in-9",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-9","aria-hidden":"true"},"#"),t(" Defined in")],-1),Fe={href:"https://github.com/sebastianwessel/purista/blob/dc1cd23/packages/amqpbridge/src/AmqpBridge.impl.ts#L47",target:"_blank",rel:"noopener noreferrer"},Ge=e("hr",null,null,-1),Qe=e("h3",{id:"subscriptions",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#subscriptions","aria-hidden":"true"},"#"),t(" subscriptions")],-1),Ve=e("code",null,"Protected",-1),je=e("strong",null,"subscriptions",-1),He=e("code",null,"Map",-1),Ue=e("code",null,"string",-1),ze=e("code",null,"cb",-1),Je=e("code",null,"message",-1),We=e("code",null,"Command",-1),Xe=e("code",null,"unknown",-1),Ye=e("code",null,"unknown",-1),Ze=e("code",null,"Promise",-1),$e=e("code",null,"void",-1),et=e("code",null,"channel",-1),tt=e("code",null,"Channel",-1),nt=e("h4",{id:"defined-in-10",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-10","aria-hidden":"true"},"#"),t(" Defined in")],-1),dt={href:"https://github.com/sebastianwessel/purista/blob/dc1cd23/packages/amqpbridge/src/AmqpBridge.impl.ts#L57",target:"_blank",rel:"noopener noreferrer"},it=s('<h2 id="accessors-1" tabindex="-1"><a class="header-anchor" href="#accessors-1" aria-hidden="true">#</a> Accessors</h2><h3 id="defaultcommandtimeout" tabindex="-1"><a class="header-anchor" href="#defaultcommandtimeout" aria-hidden="true">#</a> defaultCommandTimeout</h3><p>\u2022 <code>get</code> <strong>defaultCommandTimeout</strong>(): <code>number</code></p><p>Get default time out. It is the maximum time a command should be responded.</p><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns" aria-hidden="true">#</a> Returns</h4><p><code>number</code></p><h4 id="overrides-1" tabindex="-1"><a class="header-anchor" href="#overrides-1" aria-hidden="true">#</a> Overrides</h4><p>EventBridge.defaultCommandTimeout</p><h4 id="defined-in-11" tabindex="-1"><a class="header-anchor" href="#defined-in-11" aria-hidden="true">#</a> Defined in</h4>',9),at={href:"https://github.com/sebastianwessel/purista/blob/dc1cd23/packages/amqpbridge/src/AmqpBridge.impl.ts#L96",target:"_blank",rel:"noopener noreferrer"},st=s('<hr><h3 id="instanceid" tabindex="-1"><a class="header-anchor" href="#instanceid" aria-hidden="true">#</a> instanceId</h3><p>\u2022 <code>get</code> <strong>instanceId</strong>(): <code>string</code></p><p>Get instance id. The id of current event bridge instance.</p><h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1" aria-hidden="true">#</a> Returns</h4><p><code>string</code></p><h4 id="defined-in-12" tabindex="-1"><a class="header-anchor" href="#defined-in-12" aria-hidden="true">#</a> Defined in</h4>',7),rt={href:"https://github.com/sebastianwessel/purista/blob/dc1cd23/packages/amqpbridge/src/AmqpBridge.impl.ts#L104",target:"_blank",rel:"noopener noreferrer"},ot=s('<h2 id="methods-1" tabindex="-1"><a class="header-anchor" href="#methods-1" aria-hidden="true">#</a> Methods</h2><h3 id="decodecontent" tabindex="-1"><a class="header-anchor" href="#decodecontent" aria-hidden="true">#</a> decodeContent</h3><p>\u25B8 <code>Protected</code> <strong>decodeContent</strong>&lt;<code>T</code>&gt;(<code>input</code>, <code>contentType</code>, <code>contentEncoding</code>): <code>Promise</code>&lt;<code>T</code>&gt;</p><p>Decode buffer into given type</p><h4 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td></tr></tbody></table><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>input</code></td><td style="text-align:left;"><code>Buffer</code></td></tr><tr><td style="text-align:left;"><code>contentType</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>contentEncoding</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h4 id="returns-2" tabindex="-1"><a class="header-anchor" href="#returns-2" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>T</code>&gt;</p><h4 id="defined-in-13" tabindex="-1"><a class="header-anchor" href="#defined-in-13" aria-hidden="true">#</a> Defined in</h4>',11),lt={href:"https://github.com/sebastianwessel/purista/blob/dc1cd23/packages/amqpbridge/src/AmqpBridge.impl.ts#L549",target:"_blank",rel:"noopener noreferrer"},ct=s('<hr><h3 id="emit" tabindex="-1"><a class="header-anchor" href="#emit" aria-hidden="true">#</a> emit</h3><p>\u25B8 <strong>emit</strong>&lt;<code>K</code>&gt;(<code>eventName</code>, <code>params</code>): <code>void</code></p><h4 id="type-parameters-1" tabindex="-1"><a class="header-anchor" href="#type-parameters-1" aria-hidden="true">#</a> Type parameters</h4>',4),ht=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),ut=e("td",{style:{"text-align":"left"}},[e("code",null,"K")],-1),pt={style:{"text-align":"left"}},_t=e("code",null,"EventKey",-1),mt=e("code",null,"EventBridgeEvents",-1),gt=e("h4",{id:"parameters-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-2","aria-hidden":"true"},"#"),t(" Parameters")],-1),ft=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),bt=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"eventName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"K")])],-1),xt=e("td",{style:{"text-align":"left"}},[e("code",null,"params")],-1),qt={style:{"text-align":"left"}},yt=e("code",null,"EventBridgeEvents",-1),vt=e("code",null,"K",-1),Bt=e("h4",{id:"returns-3",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-3","aria-hidden":"true"},"#"),t(" Returns")],-1),At=e("p",null,[e("code",null,"void")],-1),Et=e("h4",{id:"inherited-from",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#inherited-from","aria-hidden":"true"},"#"),t(" Inherited from")],-1),kt=e("h4",{id:"defined-in-14",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-14","aria-hidden":"true"},"#"),t(" Defined in")],-1),Tt=e("p",null,"core/lib/types/core/types/GenericEventEmitter.d.ts:13",-1),Pt=e("hr",null,null,-1),wt=e("h3",{id:"emitmessage",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#emitmessage","aria-hidden":"true"},"#"),t(" emitMessage")],-1),Lt=e("strong",null,"emitMessage",-1),Nt=e("code",null,"T",-1),Ct=e("code",null,"message",-1),Dt=e("code",null,"contentType?",-1),Rt=e("code",null,"contentEncoding?",-1),St=e("code",null,"Promise",-1),It=e("code",null,"Readonly",-1),Mt=e("code",null,"EBMessage",-1),Kt=e("h4",{id:"type-parameters-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-parameters-2","aria-hidden":"true"},"#"),t(" Type parameters")],-1),Ot=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Ft=e("td",{style:{"text-align":"left"}},[e("code",null,"T")],-1),Gt={style:{"text-align":"left"}},Qt=e("code",null,"EBMessage",-1),Vt=e("h4",{id:"parameters-3",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-3","aria-hidden":"true"},"#"),t(" Parameters")],-1),jt=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Default value")])],-1),Ht=e("td",{style:{"text-align":"left"}},[e("code",null,"message")],-1),Ut={style:{"text-align":"left"}},zt=e("code",null,"Omit",-1),Jt=e("code",null,"EBMessage",-1),Wt=e("code",null,'"id"',-1),Xt=e("code",null,'"timestamp"',-1),Yt=e("code",null,'"instanceId"',-1),Zt=e("code",null,'"correlationId"',-1),$t=e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")],-1),en=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"contentType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},[e("code",null,"'application/json'")])],-1),tn=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"contentEncoding")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},[e("code",null,"'utf-8'")])],-1),nn=e("h4",{id:"returns-4",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-4","aria-hidden":"true"},"#"),t(" Returns")],-1),dn=e("code",null,"Promise",-1),an=e("code",null,"Readonly",-1),sn=e("code",null,"EBMessage",-1),rn=e("h4",{id:"overrides-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#overrides-2","aria-hidden":"true"},"#"),t(" Overrides")],-1),on=e("h4",{id:"defined-in-15",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-15","aria-hidden":"true"},"#"),t(" Defined in")],-1),ln={href:"https://github.com/sebastianwessel/purista/blob/dc1cd23/packages/amqpbridge/src/AmqpBridge.impl.ts#L196",target:"_blank",rel:"noopener noreferrer"},cn=s('<hr><h3 id="encodecontent" tabindex="-1"><a class="header-anchor" href="#encodecontent" aria-hidden="true">#</a> encodeContent</h3><p>\u25B8 <code>Protected</code> <strong>encodeContent</strong>&lt;<code>T</code>&gt;(<code>input</code>, <code>contentType</code>, <code>contentEncoding</code>): <code>Promise</code>&lt;<code>Buffer</code>&gt;</p><p>Encode given payload to buffer</p><h4 id="type-parameters-3" tabindex="-1"><a class="header-anchor" href="#type-parameters-3" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td></tr></tbody></table><h4 id="parameters-4" tabindex="-1"><a class="header-anchor" href="#parameters-4" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>input</code></td><td style="text-align:left;"><code>T</code></td></tr><tr><td style="text-align:left;"><code>contentType</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>contentEncoding</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h4 id="returns-5" tabindex="-1"><a class="header-anchor" href="#returns-5" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>Buffer</code>&gt;</p><h4 id="defined-in-16" tabindex="-1"><a class="header-anchor" href="#defined-in-16" aria-hidden="true">#</a> Defined in</h4>',11),hn={href:"https://github.com/sebastianwessel/purista/blob/dc1cd23/packages/amqpbridge/src/AmqpBridge.impl.ts#L528",target:"_blank",rel:"noopener noreferrer"},un=s('<hr><h3 id="invoke" tabindex="-1"><a class="header-anchor" href="#invoke" aria-hidden="true">#</a> invoke</h3><p>\u25B8 <strong>invoke</strong>&lt;<code>T</code>&gt;(<code>input</code>, <code>contentType?</code>, <code>contentEncoding?</code>, <code>commandTimeout?</code>): <code>Promise</code>&lt;<code>T</code>&gt;</p><h4 id="type-parameters-4" tabindex="-1"><a class="header-anchor" href="#type-parameters-4" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td></tr></tbody></table><h4 id="parameters-5" tabindex="-1"><a class="header-anchor" href="#parameters-5" aria-hidden="true">#</a> Parameters</h4>',6),pn=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Default value")])],-1),_n=e("td",{style:{"text-align":"left"}},[e("code",null,"input")],-1),mn={style:{"text-align":"left"}},gn=e("code",null,"Omit",-1),fn=e("code",null,"Command",-1),bn=e("code",null,"unknown",-1),xn=e("code",null,"unknown",-1),qn=e("code",null,'"id"',-1),yn=e("code",null,'"messageType"',-1),vn=e("code",null,'"timestamp"',-1),Bn=e("code",null,'"instanceId"',-1),An=e("code",null,'"correlationId"',-1),En=e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")],-1),kn=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"contentType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},[e("code",null,"'application/json'")])],-1),Tn=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"contentEncoding")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},[e("code",null,"'utf-8'")])],-1),Pn=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandTimeout")]),e("td",{style:{"text-align":"left"}},[e("code",null,"number")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")])],-1),wn=e("h4",{id:"returns-6",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-6","aria-hidden":"true"},"#"),t(" Returns")],-1),Ln=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"T"),t(">")],-1),Nn=e("h4",{id:"overrides-3",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#overrides-3","aria-hidden":"true"},"#"),t(" Overrides")],-1),Cn=e("h4",{id:"defined-in-17",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-17","aria-hidden":"true"},"#"),t(" Defined in")],-1),Dn={href:"https://github.com/sebastianwessel/purista/blob/dc1cd23/packages/amqpbridge/src/AmqpBridge.impl.ts#L237",target:"_blank",rel:"noopener noreferrer"},Rn=s('<hr><h3 id="off" tabindex="-1"><a class="header-anchor" href="#off" aria-hidden="true">#</a> off</h3><p>\u25B8 <strong>off</strong>&lt;<code>K</code>&gt;(<code>eventName</code>, <code>fn</code>): <code>void</code></p><h4 id="type-parameters-5" tabindex="-1"><a class="header-anchor" href="#type-parameters-5" aria-hidden="true">#</a> Type parameters</h4>',4),Sn=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),In=e("td",{style:{"text-align":"left"}},[e("code",null,"K")],-1),Mn={style:{"text-align":"left"}},Kn=e("code",null,"EventKey",-1),On=e("code",null,"EventBridgeEvents",-1),Fn=e("h4",{id:"parameters-6",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-6","aria-hidden":"true"},"#"),t(" Parameters")],-1),Gn=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Qn=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"eventName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"K")])],-1),Vn=e("td",{style:{"text-align":"left"}},[e("code",null,"fn")],-1),jn={style:{"text-align":"left"}},Hn=e("code",null,"EventReceiver",-1),Un=e("code",null,"EventBridgeEvents",-1),zn=e("code",null,"K",-1),Jn=e("h4",{id:"returns-7",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-7","aria-hidden":"true"},"#"),t(" Returns")],-1),Wn=e("p",null,[e("code",null,"void")],-1),Xn=e("h4",{id:"inherited-from-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#inherited-from-1","aria-hidden":"true"},"#"),t(" Inherited from")],-1),Yn=s('<h4 id="defined-in-18" tabindex="-1"><a class="header-anchor" href="#defined-in-18" aria-hidden="true">#</a> Defined in</h4><p>core/lib/types/core/types/GenericEventEmitter.d.ts:12</p><hr><h3 id="on" tabindex="-1"><a class="header-anchor" href="#on" aria-hidden="true">#</a> on</h3><p>\u25B8 <strong>on</strong>&lt;<code>K</code>&gt;(<code>eventName</code>, <code>fn</code>): <code>void</code></p><h4 id="type-parameters-6" tabindex="-1"><a class="header-anchor" href="#type-parameters-6" aria-hidden="true">#</a> Type parameters</h4>',6),Zn=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),$n=e("td",{style:{"text-align":"left"}},[e("code",null,"K")],-1),ed={style:{"text-align":"left"}},td=e("code",null,"EventKey",-1),nd=e("code",null,"EventBridgeEvents",-1),dd=e("h4",{id:"parameters-7",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-7","aria-hidden":"true"},"#"),t(" Parameters")],-1),id=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),ad=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"eventName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"K")])],-1),sd=e("td",{style:{"text-align":"left"}},[e("code",null,"fn")],-1),rd={style:{"text-align":"left"}},od=e("code",null,"EventReceiver",-1),ld=e("code",null,"EventBridgeEvents",-1),cd=e("code",null,"K",-1),hd=e("h4",{id:"returns-8",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-8","aria-hidden":"true"},"#"),t(" Returns")],-1),ud=e("p",null,[e("code",null,"void")],-1),pd=e("h4",{id:"inherited-from-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#inherited-from-2","aria-hidden":"true"},"#"),t(" Inherited from")],-1),_d=s('<h4 id="defined-in-19" tabindex="-1"><a class="header-anchor" href="#defined-in-19" aria-hidden="true">#</a> Defined in</h4><p>core/lib/types/core/types/GenericEventEmitter.d.ts:11</p><hr><h3 id="registerservicefunction" tabindex="-1"><a class="header-anchor" href="#registerservicefunction" aria-hidden="true">#</a> registerServiceFunction</h3><p>\u25B8 <strong>registerServiceFunction</strong>(<code>address</code>, <code>cb</code>): <code>Promise</code>&lt;<code>string</code>&gt;</p><p>Register a service function and ensure that there is a queue for all incoming command requests.</p><h4 id="parameters-8" tabindex="-1"><a class="header-anchor" href="#parameters-8" aria-hidden="true">#</a> Parameters</h4>',7),md=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),gd=e("td",{style:{"text-align":"left"}},[e("code",null,"address")],-1),fd={style:{"text-align":"left"}},bd=e("code",null,"EBMessageAddress",-1),xd=e("td",{style:{"text-align":"left"}},"The service function address",-1),qd=e("td",{style:{"text-align":"left"}},[e("code",null,"cb")],-1),yd={style:{"text-align":"left"}},vd=e("code",null,"message",-1),Bd=e("code",null,"Command",-1),Ad=e("code",null,"unknown",-1),Ed=e("code",null,"unknown",-1),kd=e("code",null,"Promise",-1),Td=e("code",null,"CommandErrorResponse",-1),Pd=e("code",null,"CommandSuccessResponse",-1),wd=e("code",null,"unknown",-1),Ld=e("td",{style:{"text-align":"left"}},"the function to call if a matching command message arrives",-1),Nd=e("h4",{id:"returns-9",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-9","aria-hidden":"true"},"#"),t(" Returns")],-1),Cd=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"string"),t(">")],-1),Dd=e("p",null,"the id of command function queue",-1),Rd=e("h4",{id:"overrides-4",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#overrides-4","aria-hidden":"true"},"#"),t(" Overrides")],-1),Sd=e("h4",{id:"defined-in-20",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-20","aria-hidden":"true"},"#"),t(" Defined in")],-1),Id={href:"https://github.com/sebastianwessel/purista/blob/dc1cd23/packages/amqpbridge/src/AmqpBridge.impl.ts#L346",target:"_blank",rel:"noopener noreferrer"},Md=s('<hr><h3 id="registersubscription" tabindex="-1"><a class="header-anchor" href="#registersubscription" aria-hidden="true">#</a> registerSubscription</h3><p>\u25B8 <strong>registerSubscription</strong>(<code>subscription</code>, <code>cb</code>): <code>Promise</code>&lt;<code>string</code>&gt;</p><h4 id="parameters-9" tabindex="-1"><a class="header-anchor" href="#parameters-9" aria-hidden="true">#</a> Parameters</h4>',4),Kd=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Od=e("td",{style:{"text-align":"left"}},[e("code",null,"subscription")],-1),Fd={style:{"text-align":"left"}},Gd=e("code",null,"Subscription",-1),Qd=e("td",{style:{"text-align":"left"}},[e("code",null,"cb")],-1),Vd={style:{"text-align":"left"}},jd=e("code",null,"message",-1),Hd=e("code",null,"EBMessage",-1),Ud=e("code",null,"Promise",-1),zd=e("code",null,"void",-1),Jd=e("h4",{id:"returns-10",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-10","aria-hidden":"true"},"#"),t(" Returns")],-1),Wd=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"string"),t(">")],-1),Xd=e("h4",{id:"overrides-5",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#overrides-5","aria-hidden":"true"},"#"),t(" Overrides")],-1),Yd=e("h4",{id:"defined-in-21",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-21","aria-hidden":"true"},"#"),t(" Defined in")],-1),Zd={href:"https://github.com/sebastianwessel/purista/blob/dc1cd23/packages/amqpbridge/src/AmqpBridge.impl.ts#L448",target:"_blank",rel:"noopener noreferrer"},$d=s('<hr><h3 id="start" tabindex="-1"><a class="header-anchor" href="#start" aria-hidden="true">#</a> start</h3><p>\u25B8 <strong>start</strong>(): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>Connect to RabbitMQ broker, ensure exchange, call back queue</p><h4 id="returns-11" tabindex="-1"><a class="header-anchor" href="#returns-11" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="overrides-6" tabindex="-1"><a class="header-anchor" href="#overrides-6" aria-hidden="true">#</a> Overrides</h4>',7),ei=e("h4",{id:"defined-in-22",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-22","aria-hidden":"true"},"#"),t(" Defined in")],-1),ti={href:"https://github.com/sebastianwessel/purista/blob/dc1cd23/packages/amqpbridge/src/AmqpBridge.impl.ts#L111",target:"_blank",rel:"noopener noreferrer"},ni=s('<hr><h3 id="unregisterservicefunction" tabindex="-1"><a class="header-anchor" href="#unregisterservicefunction" aria-hidden="true">#</a> unregisterServiceFunction</h3><p>\u25B8 <strong>unregisterServiceFunction</strong>(<code>address</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="parameters-10" tabindex="-1"><a class="header-anchor" href="#parameters-10" aria-hidden="true">#</a> Parameters</h4>',4),di=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),ii=e("td",{style:{"text-align":"left"}},[e("code",null,"address")],-1),ai={style:{"text-align":"left"}},si=e("code",null,"EBMessageAddress",-1),ri=e("h4",{id:"returns-12",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-12","aria-hidden":"true"},"#"),t(" Returns")],-1),oi=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"void"),t(">")],-1),li=e("h4",{id:"overrides-7",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#overrides-7","aria-hidden":"true"},"#"),t(" Overrides")],-1),ci=e("h4",{id:"defined-in-23",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-23","aria-hidden":"true"},"#"),t(" Defined in")],-1),hi={href:"https://github.com/sebastianwessel/purista/blob/dc1cd23/packages/amqpbridge/src/AmqpBridge.impl.ts#L429",target:"_blank",rel:"noopener noreferrer"},ui=s('<hr><h3 id="unregistersubscription" tabindex="-1"><a class="header-anchor" href="#unregistersubscription" aria-hidden="true">#</a> unregisterSubscription</h3><p>\u25B8 <strong>unregisterSubscription</strong>(<code>address</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="parameters-11" tabindex="-1"><a class="header-anchor" href="#parameters-11" aria-hidden="true">#</a> Parameters</h4>',4),pi=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),_i=e("td",{style:{"text-align":"left"}},[e("code",null,"address")],-1),mi={style:{"text-align":"left"}},gi=e("code",null,"EBMessageAddress",-1),fi=e("h4",{id:"returns-13",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-13","aria-hidden":"true"},"#"),t(" Returns")],-1),bi=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"void"),t(">")],-1),xi=e("h4",{id:"overrides-8",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#overrides-8","aria-hidden":"true"},"#"),t(" Overrides")],-1),qi=e("h4",{id:"defined-in-24",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-24","aria-hidden":"true"},"#"),t(" Defined in")],-1),yi={href:"https://github.com/sebastianwessel/purista/blob/dc1cd23/packages/amqpbridge/src/AmqpBridge.impl.ts#L502",target:"_blank",rel:"noopener noreferrer"};function vi(Bi,Ai){const d=r("RouterLink"),a=r("ExternalLinkIcon");return l(),c("div",null,[e("p",null,[n(d,{to:"/api/"},{default:i(()=>[t("PURISTA API - v1.4.3")]),_:1}),t(" / "),n(d,{to:"/api/modules/purista_amqpbridge.html"},{default:i(()=>[t("@purista/amqpbridge")]),_:1}),t(" / AmqpBridge")]),u,e("p",null,[n(d,{to:"/api/modules/purista_amqpbridge.html"},{default:i(()=>[t("@purista/amqpbridge")]),_:1}),t(".AmqpBridge")]),p,_,e("ul",null,[e("li",null,[e("p",null,[n(d,{to:"/api/classes/purista_amqpbridge.internal.EventBridge.html"},{default:i(()=>[m]),_:1})]),g])]),f,b,e("ul",null,[e("li",null,[n(d,{to:"/api/classes/purista_amqpbridge.AmqpBridge.html#constructor"},{default:i(()=>[t("constructor")]),_:1})])]),x,e("ul",null,[e("li",null,[n(d,{to:"/api/classes/purista_amqpbridge.AmqpBridge.html#channel"},{default:i(()=>[t("channel")]),_:1})]),e("li",null,[n(d,{to:"/api/classes/purista_amqpbridge.AmqpBridge.html#config"},{default:i(()=>[t("config")]),_:1})]),e("li",null,[n(d,{to:"/api/classes/purista_amqpbridge.AmqpBridge.html#connection"},{default:i(()=>[t("connection")]),_:1})]),e("li",null,[n(d,{to:"/api/classes/purista_amqpbridge.AmqpBridge.html#encoder"},{default:i(()=>[t("encoder")]),_:1})]),e("li",null,[n(d,{to:"/api/classes/purista_amqpbridge.AmqpBridge.html#encrypter"},{default:i(()=>[t("encrypter")]),_:1})]),e("li",null,[n(d,{to:"/api/classes/purista_amqpbridge.AmqpBridge.html#log"},{default:i(()=>[t("log")]),_:1})]),e("li",null,[n(d,{to:"/api/classes/purista_amqpbridge.AmqpBridge.html#pendinginvocations"},{default:i(()=>[t("pendingInvocations")]),_:1})]),e("li",null,[n(d,{to:"/api/classes/purista_amqpbridge.AmqpBridge.html#replyqueuename"},{default:i(()=>[t("replyQueueName")]),_:1})]),e("li",null,[n(d,{to:"/api/classes/purista_amqpbridge.AmqpBridge.html#servicefunctions"},{default:i(()=>[t("serviceFunctions")]),_:1})]),e("li",null,[n(d,{to:"/api/classes/purista_amqpbridge.AmqpBridge.html#subscriptions"},{default:i(()=>[t("subscriptions")]),_:1})])]),q,e("ul",null,[e("li",null,[n(d,{to:"/api/classes/purista_amqpbridge.AmqpBridge.html#defaultcommandtimeout"},{default:i(()=>[t("defaultCommandTimeout")]),_:1})]),e("li",null,[n(d,{to:"/api/classes/purista_amqpbridge.AmqpBridge.html#instanceid"},{default:i(()=>[t("instanceId")]),_:1})])]),y,e("ul",null,[e("li",null,[n(d,{to:"/api/classes/purista_amqpbridge.AmqpBridge.html#decodecontent"},{default:i(()=>[t("decodeContent")]),_:1})]),e("li",null,[n(d,{to:"/api/classes/purista_amqpbridge.AmqpBridge.html#emit"},{default:i(()=>[t("emit")]),_:1})]),e("li",null,[n(d,{to:"/api/classes/purista_amqpbridge.AmqpBridge.html#emitmessage"},{default:i(()=>[t("emitMessage")]),_:1})]),e("li",null,[n(d,{to:"/api/classes/purista_amqpbridge.AmqpBridge.html#encodecontent"},{default:i(()=>[t("encodeContent")]),_:1})]),e("li",null,[n(d,{to:"/api/classes/purista_amqpbridge.AmqpBridge.html#invoke"},{default:i(()=>[t("invoke")]),_:1})]),e("li",null,[n(d,{to:"/api/classes/purista_amqpbridge.AmqpBridge.html#off"},{default:i(()=>[t("off")]),_:1})]),e("li",null,[n(d,{to:"/api/classes/purista_amqpbridge.AmqpBridge.html#on"},{default:i(()=>[t("on")]),_:1})]),e("li",null,[n(d,{to:"/api/classes/purista_amqpbridge.AmqpBridge.html#registerservicefunction"},{default:i(()=>[t("registerServiceFunction")]),_:1})]),e("li",null,[n(d,{to:"/api/classes/purista_amqpbridge.AmqpBridge.html#registersubscription"},{default:i(()=>[t("registerSubscription")]),_:1})]),e("li",null,[n(d,{to:"/api/classes/purista_amqpbridge.AmqpBridge.html#start"},{default:i(()=>[t("start")]),_:1})]),e("li",null,[n(d,{to:"/api/classes/purista_amqpbridge.AmqpBridge.html#unregisterservicefunction"},{default:i(()=>[t("unregisterServiceFunction")]),_:1})]),e("li",null,[n(d,{to:"/api/classes/purista_amqpbridge.AmqpBridge.html#unregistersubscription"},{default:i(()=>[t("unregisterSubscription")]),_:1})])]),v,e("table",null,[B,e("tbody",null,[e("tr",null,[A,e("td",E,[n(d,{to:"/api/classes/purista_amqpbridge.internal.Logger.html"},{default:i(()=>[k]),_:1})])]),e("tr",null,[T,e("td",P,[n(d,{to:"/api/modules/purista_amqpbridge.html#amqpbridgeconfig"},{default:i(()=>[w]),_:1})])])])]),L,e("p",null,[n(d,{to:"/api/classes/purista_amqpbridge.internal.EventBridge.html"},{default:i(()=>[t("EventBridge")]),_:1}),t("."),n(d,{to:"/api/classes/purista_amqpbridge.internal.EventBridge.html#constructor"},{default:i(()=>[t("constructor")]),_:1})]),N,e("p",null,[e("a",C,[t("amqpbridge/src/AmqpBridge.impl.ts:73"),n(a)])]),D,e("p",null,[e("a",R,[t("amqpbridge/src/AmqpBridge.impl.ts:44"),n(a)])]),S,I,e("p",null,[t("\u2022 "),M,t(),K,t(": "),n(d,{to:"/api/modules/purista_amqpbridge.html#amqpbridgeconfig"},{default:i(()=>[O]),_:1})]),F,e("p",null,[e("a",G,[t("amqpbridge/src/AmqpBridge.impl.ts:42"),n(a)])]),Q,e("p",null,[e("a",V,[t("amqpbridge/src/AmqpBridge.impl.ts:43"),n(a)])]),j,H,e("p",null,[t("\u2022 "),U,t(),z,t(": "),n(d,{to:"/api/modules/purista_amqpbridge.html#encoder"},{default:i(()=>[J]),_:1})]),W,e("p",null,[e("a",X,[t("amqpbridge/src/AmqpBridge.impl.ts:65"),n(a)])]),Y,Z,e("p",null,[t("\u2022 "),$,t(),ee,t(": "),n(d,{to:"/api/modules/purista_amqpbridge.html#encrypter"},{default:i(()=>[te]),_:1})]),ne,e("p",null,[e("a",de,[t("amqpbridge/src/AmqpBridge.impl.ts:69"),n(a)])]),ie,ae,e("p",null,[t("\u2022 "),se,t(),re,t(": "),n(d,{to:"/api/classes/purista_amqpbridge.internal.Logger.html"},{default:i(()=>[oe]),_:1})]),le,e("p",null,[e("a",ce,[t("amqpbridge/src/AmqpBridge.impl.ts:41"),n(a)])]),he,ue,e("p",null,[t("\u2022 "),pe,t(),_e,t(": "),me,t("<"),ge,t(", "),n(d,{to:"/api/modules/purista_amqpbridge.internal.html#pendiginvocation"},{default:i(()=>[fe]),_:1}),t(">")]),be,e("p",null,[e("a",xe,[t("amqpbridge/src/AmqpBridge.impl.ts:55"),n(a)])]),qe,e("p",null,[e("a",ye,[t("amqpbridge/src/AmqpBridge.impl.ts:46"),n(a)])]),ve,Be,e("p",null,[t("\u2022 "),Ae,t(),Ee,t(": "),ke,t("<"),Te,t(", { "),Pe,t(": ("),we,t(": "),n(d,{to:"/api/modules/purista_amqpbridge.internal.html#command-1"},{default:i(()=>[Le]),_:1}),t("<"),Ne,t(", "),Ce,t(">) => "),De,t("<"),n(d,{to:"/api/modules/purista_amqpbridge.internal.html#commanderrorresponse-1"},{default:i(()=>[Re]),_:1}),t(" | "),n(d,{to:"/api/modules/purista_amqpbridge.internal.html#commandsuccessresponse-1"},{default:i(()=>[Se]),_:1}),t("<"),Ie,t(">> ; "),Me,t(": "),Ke,t(" }>")]),Oe,e("p",null,[e("a",Fe,[t("amqpbridge/src/AmqpBridge.impl.ts:47"),n(a)])]),Ge,Qe,e("p",null,[t("\u2022 "),Ve,t(),je,t(": "),He,t("<"),Ue,t(", { "),ze,t(": ("),Je,t(": "),n(d,{to:"/api/modules/purista_amqpbridge.internal.html#command-1"},{default:i(()=>[We]),_:1}),t("<"),Xe,t(", "),Ye,t(">) => "),Ze,t("<"),$e,t("> ; "),et,t(": "),tt,t(" }>")]),nt,e("p",null,[e("a",dt,[t("amqpbridge/src/AmqpBridge.impl.ts:57"),n(a)])]),it,e("p",null,[e("a",at,[t("amqpbridge/src/AmqpBridge.impl.ts:96"),n(a)])]),st,e("p",null,[e("a",rt,[t("amqpbridge/src/AmqpBridge.impl.ts:104"),n(a)])]),ot,e("p",null,[e("a",lt,[t("amqpbridge/src/AmqpBridge.impl.ts:549"),n(a)])]),ct,e("table",null,[ht,e("tbody",null,[e("tr",null,[ut,e("td",pt,[t("extends "),n(d,{to:"/api/modules/purista_amqpbridge.internal.html#eventkey"},{default:i(()=>[_t]),_:1}),t("<"),n(d,{to:"/api/modules/purista_amqpbridge.internal.html#eventbridgeevents"},{default:i(()=>[mt]),_:1}),t(">")])])])]),gt,e("table",null,[ft,e("tbody",null,[bt,e("tr",null,[xt,e("td",qt,[n(d,{to:"/api/modules/purista_amqpbridge.internal.html#eventbridgeevents"},{default:i(()=>[yt]),_:1}),t("["),vt,t("]")])])])]),Bt,At,Et,e("p",null,[n(d,{to:"/api/classes/purista_amqpbridge.internal.EventBridge.html"},{default:i(()=>[t("EventBridge")]),_:1}),t("."),n(d,{to:"/api/classes/purista_amqpbridge.internal.EventBridge.html#emit"},{default:i(()=>[t("emit")]),_:1})]),kt,Tt,Pt,wt,e("p",null,[t("\u25B8 "),Lt,t("<"),Nt,t(">("),Ct,t(", "),Dt,t(", "),Rt,t("): "),St,t("<"),It,t("<"),n(d,{to:"/api/modules/purista_amqpbridge.internal.html#ebmessage"},{default:i(()=>[Mt]),_:1}),t(">>")]),Kt,e("table",null,[Ot,e("tbody",null,[e("tr",null,[Ft,e("td",Gt,[t("extends "),n(d,{to:"/api/modules/purista_amqpbridge.internal.html#ebmessage"},{default:i(()=>[Qt]),_:1})])])])]),Vt,e("table",null,[jt,e("tbody",null,[e("tr",null,[Ht,e("td",Ut,[zt,t("<"),n(d,{to:"/api/modules/purista_amqpbridge.internal.html#ebmessage"},{default:i(()=>[Jt]),_:1}),t(", "),Wt,t(" | "),Xt,t(" | "),Yt,t(" | "),Zt,t(">")]),$t]),en,tn])]),nn,e("p",null,[dn,t("<"),an,t("<"),n(d,{to:"/api/modules/purista_amqpbridge.internal.html#ebmessage"},{default:i(()=>[sn]),_:1}),t(">>")]),rn,e("p",null,[n(d,{to:"/api/classes/purista_amqpbridge.internal.EventBridge.html"},{default:i(()=>[t("EventBridge")]),_:1}),t("."),n(d,{to:"/api/classes/purista_amqpbridge.internal.EventBridge.html#emitmessage"},{default:i(()=>[t("emitMessage")]),_:1})]),on,e("p",null,[e("a",ln,[t("amqpbridge/src/AmqpBridge.impl.ts:196"),n(a)])]),cn,e("p",null,[e("a",hn,[t("amqpbridge/src/AmqpBridge.impl.ts:528"),n(a)])]),un,e("table",null,[pn,e("tbody",null,[e("tr",null,[_n,e("td",mn,[gn,t("<"),n(d,{to:"/api/modules/purista_amqpbridge.internal.html#command-1"},{default:i(()=>[fn]),_:1}),t("<"),bn,t(", "),xn,t(">, "),qn,t(" | "),yn,t(" | "),vn,t(" | "),Bn,t(" | "),An,t(">")]),En]),kn,Tn,Pn])]),wn,Ln,Nn,e("p",null,[n(d,{to:"/api/classes/purista_amqpbridge.internal.EventBridge.html"},{default:i(()=>[t("EventBridge")]),_:1}),t("."),n(d,{to:"/api/classes/purista_amqpbridge.internal.EventBridge.html#invoke"},{default:i(()=>[t("invoke")]),_:1})]),Cn,e("p",null,[e("a",Dn,[t("amqpbridge/src/AmqpBridge.impl.ts:237"),n(a)])]),Rn,e("table",null,[Sn,e("tbody",null,[e("tr",null,[In,e("td",Mn,[t("extends "),n(d,{to:"/api/modules/purista_amqpbridge.internal.html#eventkey"},{default:i(()=>[Kn]),_:1}),t("<"),n(d,{to:"/api/modules/purista_amqpbridge.internal.html#eventbridgeevents"},{default:i(()=>[On]),_:1}),t(">")])])])]),Fn,e("table",null,[Gn,e("tbody",null,[Qn,e("tr",null,[Vn,e("td",jn,[n(d,{to:"/api/modules/purista_amqpbridge.internal.html#eventreceiver"},{default:i(()=>[Hn]),_:1}),t("<"),n(d,{to:"/api/modules/purista_amqpbridge.internal.html#eventbridgeevents"},{default:i(()=>[Un]),_:1}),t("["),zn,t("]>")])])])]),Jn,Wn,Xn,e("p",null,[n(d,{to:"/api/classes/purista_amqpbridge.internal.EventBridge.html"},{default:i(()=>[t("EventBridge")]),_:1}),t("."),n(d,{to:"/api/classes/purista_amqpbridge.internal.EventBridge.html#off"},{default:i(()=>[t("off")]),_:1})]),Yn,e("table",null,[Zn,e("tbody",null,[e("tr",null,[$n,e("td",ed,[t("extends "),n(d,{to:"/api/modules/purista_amqpbridge.internal.html#eventkey"},{default:i(()=>[td]),_:1}),t("<"),n(d,{to:"/api/modules/purista_amqpbridge.internal.html#eventbridgeevents"},{default:i(()=>[nd]),_:1}),t(">")])])])]),dd,e("table",null,[id,e("tbody",null,[ad,e("tr",null,[sd,e("td",rd,[n(d,{to:"/api/modules/purista_amqpbridge.internal.html#eventreceiver"},{default:i(()=>[od]),_:1}),t("<"),n(d,{to:"/api/modules/purista_amqpbridge.internal.html#eventbridgeevents"},{default:i(()=>[ld]),_:1}),t("["),cd,t("]>")])])])]),hd,ud,pd,e("p",null,[n(d,{to:"/api/classes/purista_amqpbridge.internal.EventBridge.html"},{default:i(()=>[t("EventBridge")]),_:1}),t("."),n(d,{to:"/api/classes/purista_amqpbridge.internal.EventBridge.html#on"},{default:i(()=>[t("on")]),_:1})]),_d,e("table",null,[md,e("tbody",null,[e("tr",null,[gd,e("td",fd,[n(d,{to:"/api/modules/purista_amqpbridge.internal.html#ebmessageaddress"},{default:i(()=>[bd]),_:1})]),xd]),e("tr",null,[qd,e("td",yd,[t("("),vd,t(": "),n(d,{to:"/api/modules/purista_amqpbridge.internal.html#command-1"},{default:i(()=>[Bd]),_:1}),t("<"),Ad,t(", "),Ed,t(">) => "),kd,t("<"),n(d,{to:"/api/modules/purista_amqpbridge.internal.html#commanderrorresponse-1"},{default:i(()=>[Td]),_:1}),t(" | "),n(d,{to:"/api/modules/purista_amqpbridge.internal.html#commandsuccessresponse-1"},{default:i(()=>[Pd]),_:1}),t("<"),wd,t(">>")]),Ld])])]),Nd,Cd,Dd,Rd,e("p",null,[n(d,{to:"/api/classes/purista_amqpbridge.internal.EventBridge.html"},{default:i(()=>[t("EventBridge")]),_:1}),t("."),n(d,{to:"/api/classes/purista_amqpbridge.internal.EventBridge.html#registerservicefunction"},{default:i(()=>[t("registerServiceFunction")]),_:1})]),Sd,e("p",null,[e("a",Id,[t("amqpbridge/src/AmqpBridge.impl.ts:346"),n(a)])]),Md,e("table",null,[Kd,e("tbody",null,[e("tr",null,[Od,e("td",Fd,[n(d,{to:"/api/modules/purista_amqpbridge.internal.html#subscription"},{default:i(()=>[Gd]),_:1})])]),e("tr",null,[Qd,e("td",Vd,[t("("),jd,t(": "),n(d,{to:"/api/modules/purista_amqpbridge.internal.html#ebmessage"},{default:i(()=>[Hd]),_:1}),t(") => "),Ud,t("<"),zd,t(">")])])])]),Jd,Wd,Xd,e("p",null,[n(d,{to:"/api/classes/purista_amqpbridge.internal.EventBridge.html"},{default:i(()=>[t("EventBridge")]),_:1}),t("."),n(d,{to:"/api/classes/purista_amqpbridge.internal.EventBridge.html#registersubscription"},{default:i(()=>[t("registerSubscription")]),_:1})]),Yd,e("p",null,[e("a",Zd,[t("amqpbridge/src/AmqpBridge.impl.ts:448"),n(a)])]),$d,e("p",null,[n(d,{to:"/api/classes/purista_amqpbridge.internal.EventBridge.html"},{default:i(()=>[t("EventBridge")]),_:1}),t("."),n(d,{to:"/api/classes/purista_amqpbridge.internal.EventBridge.html#start"},{default:i(()=>[t("start")]),_:1})]),ei,e("p",null,[e("a",ti,[t("amqpbridge/src/AmqpBridge.impl.ts:111"),n(a)])]),ni,e("table",null,[di,e("tbody",null,[e("tr",null,[ii,e("td",ai,[n(d,{to:"/api/modules/purista_amqpbridge.internal.html#ebmessageaddress"},{default:i(()=>[si]),_:1})])])])]),ri,oi,li,e("p",null,[n(d,{to:"/api/classes/purista_amqpbridge.internal.EventBridge.html"},{default:i(()=>[t("EventBridge")]),_:1}),t("."),n(d,{to:"/api/classes/purista_amqpbridge.internal.EventBridge.html#unregisterservicefunction"},{default:i(()=>[t("unregisterServiceFunction")]),_:1})]),ci,e("p",null,[e("a",hi,[t("amqpbridge/src/AmqpBridge.impl.ts:429"),n(a)])]),ui,e("table",null,[pi,e("tbody",null,[e("tr",null,[_i,e("td",mi,[n(d,{to:"/api/modules/purista_amqpbridge.internal.html#ebmessageaddress"},{default:i(()=>[gi]),_:1})])])])]),fi,bi,xi,e("p",null,[n(d,{to:"/api/classes/purista_amqpbridge.internal.EventBridge.html"},{default:i(()=>[t("EventBridge")]),_:1}),t("."),n(d,{to:"/api/classes/purista_amqpbridge.internal.EventBridge.html#unregistersubscription"},{default:i(()=>[t("unregisterSubscription")]),_:1})]),qi,e("p",null,[e("a",yi,[t("amqpbridge/src/AmqpBridge.impl.ts:502"),n(a)])])])}const Ti=o(h,[["render",vi],["__file","purista_amqpbridge.AmqpBridge.html.vue"]]);export{Ti as default};
