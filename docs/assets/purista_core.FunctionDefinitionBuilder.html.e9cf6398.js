import{_ as d}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as c,c as r,b as e,e as n,w as s,d as t,a as i,r as a}from"./app.520110ff.js";const u={},h=e("h1",{id:"class-functiondefinitionbuilder-serviceclasstype-messagepayloadtype-messageparamstype-messageresulttype-functionpayloadtype-functionparamstype-functionresulttype",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#class-functiondefinitionbuilder-serviceclasstype-messagepayloadtype-messageparamstype-messageresulttype-functionpayloadtype-functionparamstype-functionresulttype","aria-hidden":"true"},"#"),t(" Class: FunctionDefinitionBuilder<ServiceClassType, MessagePayloadType, MessageParamsType, MessageResultType, FunctionPayloadType, FunctionParamsType, FunctionResultType>")],-1),_=e("p",null,"Function definition builder is a helper to create and define a function for a service. It helps to set all needed information like schemas and hooks. With these information, the types are automatically set and extended.",-1),p=e("p",null,"A working schema definition needs at least a function name, a short description and the function implementation.",-1),f=e("h2",{id:"type-parameters",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-parameters","aria-hidden":"true"},"#"),t(" Type parameters")],-1),y=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),m=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),g={style:{"text-align":"left"}},b=e("code",null,"ServiceClass",-1),T=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),x=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),F=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),P=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionPayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")])],-1),D=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")])],-1),B=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageResultType")])],-1),k=e("h2",{id:"table-of-contents",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#table-of-contents","aria-hidden":"true"},"#"),t(" Table of contents")],-1),v=e("h3",{id:"constructors",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#constructors","aria-hidden":"true"},"#"),t(" Constructors")],-1),M=e("h3",{id:"properties",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#properties","aria-hidden":"true"},"#"),t(" Properties")],-1),S=e("h3",{id:"methods",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#methods","aria-hidden":"true"},"#"),t(" Methods")],-1),R=i('<h2 id="constructors-1" tabindex="-1"><a class="header-anchor" href="#constructors-1" aria-hidden="true">#</a> Constructors</h2><h3 id="constructor" tabindex="-1"><a class="header-anchor" href="#constructor" aria-hidden="true">#</a> constructor</h3><p>\u2022 <strong>new FunctionDefinitionBuilder</strong>&lt;<code>ServiceClassType</code>, <code>MessagePayloadType</code>, <code>MessageParamsType</code>, <code>MessageResultType</code>, <code>FunctionPayloadType</code>, <code>FunctionParamsType</code>, <code>FunctionResultType</code>&gt;(<code>commandName</code>, <code>commandDescription</code>, <code>eventName?</code>)</p><h4 id="type-parameters-1" tabindex="-1"><a class="header-anchor" href="#type-parameters-1" aria-hidden="true">#</a> Type parameters</h4>',4),C=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),w=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),I={style:{"text-align":"left"}},O=e("code",null,"ServiceClass",-1),L=e("code",null,"unknown",-1),N=e("code",null,"ServiceClassType",-1),H=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),A=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),Z=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),E=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionPayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")])],-1),q=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")])],-1),G=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageResultType")])],-1),Q=i('<h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>commandName</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>commandDescription</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>eventName?</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h4 id="defined-in" tabindex="-1"><a class="header-anchor" href="#defined-in" aria-hidden="true">#</a> Defined in</h4>',3),W={href:"https://github.com/sebastianwessel/purista/blob/dc1cd23/packages/core/src/helper/FunctionDefinitionBuilder.impl.ts#L83",target:"_blank",rel:"noopener noreferrer"},V=e("h2",{id:"properties-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#properties-1","aria-hidden":"true"},"#"),t(" Properties")],-1),j=e("h3",{id:"errorstatuscodes",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#errorstatuscodes","aria-hidden":"true"},"#"),t(" errorStatusCodes")],-1),U=e("code",null,"Private",-1),z=e("strong",null,"errorStatusCodes",-1),J=e("code",null,"StatusCode",-1),K=e("code",null,"[]",-1),X=e("h4",{id:"defined-in-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-1","aria-hidden":"true"},"#"),t(" Defined in")],-1),Y={href:"https://github.com/sebastianwessel/purista/blob/dc1cd23/packages/core/src/helper/FunctionDefinitionBuilder.impl.ts#L44",target:"_blank",rel:"noopener noreferrer"},$=e("hr",null,null,-1),ee=e("h3",{id:"fn",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#fn","aria-hidden":"true"},"#"),t(" fn")],-1),te=e("code",null,"Private",-1),ne=e("code",null,"Optional",-1),oe=e("strong",null,"fn",-1),se=e("code",null,"CommandFunction",-1),le=e("code",null,"ServiceClassType",-1),ie=e("code",null,"MessagePayloadType",-1),ae=e("code",null,"MessageParamsType",-1),de=e("code",null,"FunctionPayloadType",-1),ce=e("code",null,"FunctionParamsType",-1),re=e("code",null,"FunctionResultType",-1),ue=e("h4",{id:"defined-in-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-2","aria-hidden":"true"},"#"),t(" Defined in")],-1),he={href:"https://github.com/sebastianwessel/purista/blob/dc1cd23/packages/core/src/helper/FunctionDefinitionBuilder.impl.ts#L73",target:"_blank",rel:"noopener noreferrer"},_e=e("hr",null,null,-1),pe=e("h3",{id:"hooks",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#hooks","aria-hidden":"true"},"#"),t(" hooks")],-1),fe=e("p",null,[t("\u2022 "),e("code",null,"Private"),t(),e("strong",null,"hooks"),t(": "),e("code",null,"Object")],-1),ye=e("h4",{id:"type-declaration",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration","aria-hidden":"true"},"#"),t(" Type declaration")],-1),me=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),ge=e("td",{style:{"text-align":"left"}},[e("code",null,"afterGuard")],-1),be={style:{"text-align":"left"}},Te=e("code",null,"AfterGuardHook",-1),xe=e("code",null,"ServiceClassType",-1),Fe=e("code",null,"MessageResultType",-1),Pe=e("code",null,"MessagePayloadType",-1),De=e("code",null,"MessageParamsType",-1),Be=e("td",{style:{"text-align":"left"}},[e("code",null,"beforeGuard")],-1),ke={style:{"text-align":"left"}},ve=e("code",null,"BeforeGuardHook",-1),Me=e("code",null,"ServiceClassType",-1),Se=e("code",null,"MessagePayloadType",-1),Re=e("code",null,"MessageParamsType",-1),Ce=e("code",null,"FunctionPayloadType",-1),we=e("code",null,"FunctionParamsType",-1),Ie=e("td",{style:{"text-align":"left"}},[e("code",null,"transformInput?")],-1),Oe={style:{"text-align":"left"}},Le=e("code",null,"transformFunction",-1),Ne=e("code",null,"TransformInputHook",-1),He=e("code",null,"ServiceClassType",-1),Ae=e("code",null,"any",-1),Ze=e("code",null,"any",-1),Ee=e("code",null,"any",-1),qe=e("code",null,"any",-1),Ge=e("code",null,"transformInputSchema",-1),Qe=e("code",null,"ZodType",-1),We=e("code",null,"any",-1),Ve=e("code",null,"ZodTypeDef",-1),je=e("code",null,"any",-1),Ue=e("code",null,"transformParameterSchema",-1),ze=e("code",null,"ZodType",-1),Je=e("code",null,"any",-1),Ke=e("code",null,"ZodTypeDef",-1),Xe=e("code",null,"any",-1),Ye=e("td",{style:{"text-align":"left"}},[e("code",null,"transformInput.transformFunction")],-1),$e={style:{"text-align":"left"}},et=e("code",null,"TransformInputHook",-1),tt=e("code",null,"ServiceClassType",-1),nt=e("code",null,"any",-1),ot=e("code",null,"any",-1),st=e("code",null,"any",-1),lt=e("code",null,"any",-1),it=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"transformInput.transformInputSchema")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ZodType"),t("<"),e("code",null,"any"),t(", "),e("code",null,"ZodTypeDef"),t(", "),e("code",null,"any"),t(">")])],-1),at=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"transformInput.transformParameterSchema")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ZodType"),t("<"),e("code",null,"any"),t(", "),e("code",null,"ZodTypeDef"),t(", "),e("code",null,"any"),t(">")])],-1),dt=e("td",{style:{"text-align":"left"}},[e("code",null,"transformOutput?")],-1),ct={style:{"text-align":"left"}},rt=e("code",null,"transformFunction",-1),ut=e("code",null,"TransformOutputHook",-1),ht=e("code",null,"ServiceClassType",-1),_t=e("code",null,"any",-1),pt=e("code",null,"any",-1),ft=e("code",null,"FunctionParamsType",-1),yt=e("code",null,"any",-1),mt=e("code",null,"transformOutputSchema",-1),gt=e("code",null,"ZodType",-1),bt=e("code",null,"any",-1),Tt=e("code",null,"ZodTypeDef",-1),xt=e("code",null,"any",-1),Ft=e("td",{style:{"text-align":"left"}},[e("code",null,"transformOutput.transformFunction")],-1),Pt={style:{"text-align":"left"}},Dt=e("code",null,"TransformOutputHook",-1),Bt=e("code",null,"ServiceClassType",-1),kt=e("code",null,"any",-1),vt=e("code",null,"any",-1),Mt=e("code",null,"FunctionParamsType",-1),St=e("code",null,"any",-1),Rt=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"transformOutput.transformOutputSchema")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ZodType"),t("<"),e("code",null,"any"),t(", "),e("code",null,"ZodTypeDef"),t(", "),e("code",null,"any"),t(">")])],-1),Ct=e("h4",{id:"defined-in-3",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-3","aria-hidden":"true"},"#"),t(" Defined in")],-1),wt={href:"https://github.com/sebastianwessel/purista/blob/dc1cd23/packages/core/src/helper/FunctionDefinitionBuilder.impl.ts#L48",target:"_blank",rel:"noopener noreferrer"},It=e("hr",null,null,-1),Ot=e("h3",{id:"httpmetadata",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#httpmetadata","aria-hidden":"true"},"#"),t(" httpMetadata")],-1),Lt=e("code",null,"Private",-1),Nt=e("code",null,"Optional",-1),Ht=e("strong",null,"httpMetadata",-1),At=e("code",null,"HttpExposedServiceMeta",-1),Zt=e("h4",{id:"defined-in-4",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-4","aria-hidden":"true"},"#"),t(" Defined in")],-1),Et={href:"https://github.com/sebastianwessel/purista/blob/dc1cd23/packages/core/src/helper/FunctionDefinitionBuilder.impl.ts#L34",target:"_blank",rel:"noopener noreferrer"},qt=i('<hr><h3 id="inputschema" tabindex="-1"><a class="header-anchor" href="#inputschema" aria-hidden="true">#</a> inputSchema</h3><p>\u2022 <code>Private</code> <code>Optional</code> <strong>inputSchema</strong>: <code>ZodType</code>&lt;<code>any</code>, <code>ZodTypeDef</code>, <code>any</code>&gt;</p><h4 id="defined-in-5" tabindex="-1"><a class="header-anchor" href="#defined-in-5" aria-hidden="true">#</a> Defined in</h4>',4),Gt={href:"https://github.com/sebastianwessel/purista/blob/dc1cd23/packages/core/src/helper/FunctionDefinitionBuilder.impl.ts#L35",target:"_blank",rel:"noopener noreferrer"},Qt=i('<hr><h3 id="issecure" tabindex="-1"><a class="header-anchor" href="#issecure" aria-hidden="true">#</a> isSecure</h3><p>\u2022 <code>Private</code> <strong>isSecure</strong>: <code>boolean</code> = <code>true</code></p><h4 id="defined-in-6" tabindex="-1"><a class="header-anchor" href="#defined-in-6" aria-hidden="true">#</a> Defined in</h4>',4),Wt={href:"https://github.com/sebastianwessel/purista/blob/dc1cd23/packages/core/src/helper/FunctionDefinitionBuilder.impl.ts#L46",target:"_blank",rel:"noopener noreferrer"},Vt=i('<hr><h3 id="outputschema" tabindex="-1"><a class="header-anchor" href="#outputschema" aria-hidden="true">#</a> outputSchema</h3><p>\u2022 <code>Private</code> <code>Optional</code> <strong>outputSchema</strong>: <code>ZodType</code>&lt;<code>any</code>, <code>ZodTypeDef</code>, <code>any</code>&gt;</p><h4 id="defined-in-7" tabindex="-1"><a class="header-anchor" href="#defined-in-7" aria-hidden="true">#</a> Defined in</h4>',4),jt={href:"https://github.com/sebastianwessel/purista/blob/dc1cd23/packages/core/src/helper/FunctionDefinitionBuilder.impl.ts#L36",target:"_blank",rel:"noopener noreferrer"},Ut=i('<hr><h3 id="paramsschema" tabindex="-1"><a class="header-anchor" href="#paramsschema" aria-hidden="true">#</a> paramsSchema</h3><p>\u2022 <code>Private</code> <code>Optional</code> <strong>paramsSchema</strong>: <code>ZodType</code>&lt;<code>any</code>, <code>ZodTypeDef</code>, <code>any</code>&gt;</p><h4 id="defined-in-8" tabindex="-1"><a class="header-anchor" href="#defined-in-8" aria-hidden="true">#</a> Defined in</h4>',4),zt={href:"https://github.com/sebastianwessel/purista/blob/dc1cd23/packages/core/src/helper/FunctionDefinitionBuilder.impl.ts#L37",target:"_blank",rel:"noopener noreferrer"},Jt=e("hr",null,null,-1),Kt=e("h3",{id:"queryparameter",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#queryparameter","aria-hidden":"true"},"#"),t(" queryParameter")],-1),Xt=e("code",null,"Private",-1),Yt=e("strong",null,"queryParameter",-1),$t=e("code",null,"QueryParameter",-1),en=e("code",null,"[]",-1),tn=e("h4",{id:"defined-in-9",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-9","aria-hidden":"true"},"#"),t(" Defined in")],-1),nn={href:"https://github.com/sebastianwessel/purista/blob/dc1cd23/packages/core/src/helper/FunctionDefinitionBuilder.impl.ts#L38",target:"_blank",rel:"noopener noreferrer"},on=i('<hr><h3 id="summary" tabindex="-1"><a class="header-anchor" href="#summary" aria-hidden="true">#</a> summary</h3><p>\u2022 <code>Private</code> <code>Optional</code> <strong>summary</strong>: <code>string</code></p><h4 id="defined-in-10" tabindex="-1"><a class="header-anchor" href="#defined-in-10" aria-hidden="true">#</a> Defined in</h4>',4),sn={href:"https://github.com/sebastianwessel/purista/blob/dc1cd23/packages/core/src/helper/FunctionDefinitionBuilder.impl.ts#L42",target:"_blank",rel:"noopener noreferrer"},ln=i('<hr><h3 id="tags" tabindex="-1"><a class="header-anchor" href="#tags" aria-hidden="true">#</a> tags</h3><p>\u2022 <code>Private</code> <strong>tags</strong>: <code>string</code>[] = <code>[]</code></p><h4 id="defined-in-11" tabindex="-1"><a class="header-anchor" href="#defined-in-11" aria-hidden="true">#</a> Defined in</h4>',4),an={href:"https://github.com/sebastianwessel/purista/blob/dc1cd23/packages/core/src/helper/FunctionDefinitionBuilder.impl.ts#L40",target:"_blank",rel:"noopener noreferrer"},dn=e("h2",{id:"methods-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#methods-1","aria-hidden":"true"},"#"),t(" Methods")],-1),cn=e("h3",{id:"adderrorstatuscodes",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#adderrorstatuscodes","aria-hidden":"true"},"#"),t(" addErrorStatusCodes")],-1),rn=e("strong",null,"addErrorStatusCodes",-1),un=e("code",null,"codes",-1),hn=e("code",null,"FunctionDefinitionBuilder",-1),_n=e("code",null,"ServiceClassType",-1),pn=e("code",null,"MessagePayloadType",-1),fn=e("code",null,"MessageParamsType",-1),yn=e("code",null,"MessageResultType",-1),mn=e("code",null,"FunctionPayloadType",-1),gn=e("code",null,"FunctionParamsType",-1),bn=e("code",null,"FunctionResultType",-1),Tn=i(`<p>If a function can return other status codes you should add them to openApi definition. Per default, 200, 204, 400, 401 and 500 can be autogenerated in most cases. Special cases or different status codes should be added with this function.</p><p><strong><code>Example</code></strong></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token function">addErrorStatusCodes</span><span class="token punctuation">(</span>StatusCode<span class="token punctuation">.</span>PaymentRequired<span class="token punctuation">,</span> StatusCode<span class="token punctuation">.</span>Conflict<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a> Parameters</h4>`,4),xn=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),Fn=e("td",{style:{"text-align":"left"}},[e("code",null,"...codes")],-1),Pn={style:{"text-align":"left"}},Dn=e("code",null,"StatusCode",-1),Bn=e("td",{style:{"text-align":"left"}},"List of status codes",-1),kn=e("h4",{id:"returns",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns","aria-hidden":"true"},"#"),t(" Returns")],-1),vn=e("code",null,"FunctionDefinitionBuilder",-1),Mn=e("code",null,"ServiceClassType",-1),Sn=e("code",null,"MessagePayloadType",-1),Rn=e("code",null,"MessageParamsType",-1),Cn=e("code",null,"MessageResultType",-1),wn=e("code",null,"FunctionPayloadType",-1),In=e("code",null,"FunctionParamsType",-1),On=e("code",null,"FunctionResultType",-1),Ln=e("p",null,"FunctionDefinitionBuilder",-1),Nn=e("h4",{id:"defined-in-12",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-12","aria-hidden":"true"},"#"),t(" Defined in")],-1),Hn={href:"https://github.com/sebastianwessel/purista/blob/dc1cd23/packages/core/src/helper/FunctionDefinitionBuilder.impl.ts#L210",target:"_blank",rel:"noopener noreferrer"},An=e("hr",null,null,-1),Zn=e("h3",{id:"addinputschema",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#addinputschema","aria-hidden":"true"},"#"),t(" addInputSchema")],-1),En=e("strong",null,"addInputSchema",-1),qn=e("code",null,"I",-1),Gn=e("code",null,"D",-1),Qn=e("code",null,"O",-1),Wn=e("code",null,"inputSchema",-1),Vn=e("code",null,"FunctionDefinitionBuilder",-1),jn=e("code",null,"ServiceClassType",-1),Un=e("code",null,"I",-1),zn=e("code",null,"MessageParamsType",-1),Jn=e("code",null,"MessageResultType",-1),Kn=e("code",null,"O",-1),Xn=e("code",null,"FunctionParamsType",-1),Yn=e("code",null,"FunctionResultType",-1),$n=i('<p>Add a schema for input payload validation. Types for payload of message and function payload input are generated from given schema.</p><h4 id="type-parameters-2" tabindex="-1"><a class="header-anchor" href="#type-parameters-2" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>I</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>D</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>O</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>inputSchema</code></td><td style="text-align:left;"><code>ZodType</code>&lt;<code>O</code>, <code>D</code>, <code>I</code>&gt;</td><td style="text-align:left;">The schema validation for input payload</td></tr></tbody></table><h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1" aria-hidden="true">#</a> Returns</h4>',6),eo=e("code",null,"FunctionDefinitionBuilder",-1),to=e("code",null,"ServiceClassType",-1),no=e("code",null,"I",-1),oo=e("code",null,"MessageParamsType",-1),so=e("code",null,"MessageResultType",-1),lo=e("code",null,"O",-1),io=e("code",null,"FunctionParamsType",-1),ao=e("code",null,"FunctionResultType",-1),co=e("p",null,"FunctionDefinitionBuilder",-1),ro=e("h4",{id:"defined-in-13",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-13","aria-hidden":"true"},"#"),t(" Defined in")],-1),uo={href:"https://github.com/sebastianwessel/purista/blob/dc1cd23/packages/core/src/helper/FunctionDefinitionBuilder.impl.ts#L102",target:"_blank",rel:"noopener noreferrer"},ho=e("hr",null,null,-1),_o=e("h3",{id:"addoutputschema",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#addoutputschema","aria-hidden":"true"},"#"),t(" addOutputSchema")],-1),po=e("strong",null,"addOutputSchema",-1),fo=e("code",null,"I",-1),yo=e("code",null,"D",-1),mo=e("code",null,"O",-1),go=e("code",null,"outputSchema",-1),bo=e("code",null,"FunctionDefinitionBuilder",-1),To=e("code",null,"ServiceClassType",-1),xo=e("code",null,"MessagePayloadType",-1),Fo=e("code",null,"MessageParamsType",-1),Po=e("code",null,"O",-1),Do=e("code",null,"FunctionPayloadType",-1),Bo=e("code",null,"FunctionParamsType",-1),ko=e("code",null,"I",-1),vo=i('<p>Add a schema for output payload validation. Types for payload of message and function payload output are generated from given schema.</p><h4 id="type-parameters-3" tabindex="-1"><a class="header-anchor" href="#type-parameters-3" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>I</code></td></tr><tr><td style="text-align:left;"><code>D</code></td></tr><tr><td style="text-align:left;"><code>O</code></td></tr></tbody></table><h4 id="parameters-3" tabindex="-1"><a class="header-anchor" href="#parameters-3" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>outputSchema</code></td><td style="text-align:left;"><code>ZodType</code>&lt;<code>O</code>, <code>D</code>, <code>I</code>&gt;</td><td style="text-align:left;">The schema validation for output payload</td></tr></tbody></table><h4 id="returns-2" tabindex="-1"><a class="header-anchor" href="#returns-2" aria-hidden="true">#</a> Returns</h4>',6),Mo=e("code",null,"FunctionDefinitionBuilder",-1),So=e("code",null,"ServiceClassType",-1),Ro=e("code",null,"MessagePayloadType",-1),Co=e("code",null,"MessageParamsType",-1),wo=e("code",null,"O",-1),Io=e("code",null,"FunctionPayloadType",-1),Oo=e("code",null,"FunctionParamsType",-1),Lo=e("code",null,"I",-1),No=e("p",null,"FunctionDefinitionBuilder",-1),Ho=e("h4",{id:"defined-in-14",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-14","aria-hidden":"true"},"#"),t(" Defined in")],-1),Ao={href:"https://github.com/sebastianwessel/purista/blob/dc1cd23/packages/core/src/helper/FunctionDefinitionBuilder.impl.ts#L121",target:"_blank",rel:"noopener noreferrer"},Zo=e("hr",null,null,-1),Eo=e("h3",{id:"addparameterschema",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#addparameterschema","aria-hidden":"true"},"#"),t(" addParameterSchema")],-1),qo=e("strong",null,"addParameterSchema",-1),Go=e("code",null,"I",-1),Qo=e("code",null,"D",-1),Wo=e("code",null,"O",-1),Vo=e("code",null,"paramsSchema",-1),jo=e("code",null,"FunctionDefinitionBuilder",-1),Uo=e("code",null,"ServiceClassType",-1),zo=e("code",null,"MessagePayloadType",-1),Jo=e("code",null,"I",-1),Ko=e("code",null,"MessageResultType",-1),Xo=e("code",null,"FunctionPayloadType",-1),Yo=e("code",null,"O",-1),$o=e("code",null,"FunctionResultType",-1),es=i('<p>Add a schema for output parameter validation. Types for parameter of message and function parameter output are generated from given schema.</p><h4 id="type-parameters-4" tabindex="-1"><a class="header-anchor" href="#type-parameters-4" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>I</code></td></tr><tr><td style="text-align:left;"><code>D</code></td></tr><tr><td style="text-align:left;"><code>O</code></td></tr></tbody></table><h4 id="parameters-4" tabindex="-1"><a class="header-anchor" href="#parameters-4" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>paramsSchema</code></td><td style="text-align:left;"><code>ZodType</code>&lt;<code>O</code>, <code>D</code>, <code>I</code>&gt;</td><td style="text-align:left;">The schema validation for output parameter</td></tr></tbody></table><h4 id="returns-3" tabindex="-1"><a class="header-anchor" href="#returns-3" aria-hidden="true">#</a> Returns</h4>',6),ts=e("code",null,"FunctionDefinitionBuilder",-1),ns=e("code",null,"ServiceClassType",-1),os=e("code",null,"MessagePayloadType",-1),ss=e("code",null,"I",-1),ls=e("code",null,"MessageResultType",-1),is=e("code",null,"FunctionPayloadType",-1),as=e("code",null,"O",-1),ds=e("code",null,"FunctionResultType",-1),cs=e("p",null,"FunctionDefinitionBuilder",-1),rs=e("h4",{id:"defined-in-15",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-15","aria-hidden":"true"},"#"),t(" Defined in")],-1),us={href:"https://github.com/sebastianwessel/purista/blob/dc1cd23/packages/core/src/helper/FunctionDefinitionBuilder.impl.ts#L140",target:"_blank",rel:"noopener noreferrer"},hs=e("hr",null,null,-1),_s=e("h3",{id:"addqueryparameters",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#addqueryparameters","aria-hidden":"true"},"#"),t(" addQueryParameters")],-1),ps=e("strong",null,"addQueryParameters",-1),fs=e("code",null,"queryParams",-1),ys=e("code",null,"FunctionDefinitionBuilder",-1),ms=e("code",null,"ServiceClassType",-1),gs=e("code",null,"MessagePayloadType",-1),bs=e("code",null,"MessageParamsType",-1),Ts=e("code",null,"MessageResultType",-1),xs=e("code",null,"FunctionPayloadType",-1),Fs=e("code",null,"FunctionParamsType",-1),Ps=e("code",null,"FunctionResultType",-1),Ds=i(`<p>Define query parameters if you expose the function as http endpoint. Query parameters are add to openApi definition. Query parameters are add to input parameters.</p><p><strong><code>Example</code></strong></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token punctuation">.</span><span class="token function">addQueryParameters</span><span class="token punctuation">(</span>
  <span class="token punctuation">{</span>
    required<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">&#39;search&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    required<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">&#39;limit&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="parameters-5" tabindex="-1"><a class="header-anchor" href="#parameters-5" aria-hidden="true">#</a> Parameters</h4>`,4),Bs=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),ks=e("td",{style:{"text-align":"left"}},[e("code",null,"...queryParams")],-1),vs={style:{"text-align":"left"}},Ms=e("code",null,"QueryParameter",-1),Ss=e("td",{style:{"text-align":"left"}},"Add one or more query parameter definitions",-1),Rs=e("h4",{id:"returns-4",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-4","aria-hidden":"true"},"#"),t(" Returns")],-1),Cs=e("code",null,"FunctionDefinitionBuilder",-1),ws=e("code",null,"ServiceClassType",-1),Is=e("code",null,"MessagePayloadType",-1),Os=e("code",null,"MessageParamsType",-1),Ls=e("code",null,"MessageResultType",-1),Ns=e("code",null,"FunctionPayloadType",-1),Hs=e("code",null,"FunctionParamsType",-1),As=e("code",null,"FunctionResultType",-1),Zs=e("p",null,"FunctionDefinitionBuilder",-1),Es=e("h4",{id:"defined-in-16",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-16","aria-hidden":"true"},"#"),t(" Defined in")],-1),qs={href:"https://github.com/sebastianwessel/purista/blob/dc1cd23/packages/core/src/helper/FunctionDefinitionBuilder.impl.ts#L175",target:"_blank",rel:"noopener noreferrer"},Gs=e("hr",null,null,-1),Qs=e("h3",{id:"addtags",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#addtags","aria-hidden":"true"},"#"),t(" addTags")],-1),Ws=e("strong",null,"addTags",-1),Vs=e("code",null,"tags",-1),js=e("code",null,"FunctionDefinitionBuilder",-1),Us=e("code",null,"ServiceClassType",-1),zs=e("code",null,"MessagePayloadType",-1),Js=e("code",null,"MessageParamsType",-1),Ks=e("code",null,"MessageResultType",-1),Xs=e("code",null,"FunctionPayloadType",-1),Ys=e("code",null,"FunctionParamsType",-1),$s=e("code",null,"FunctionResultType",-1),el=i(`<p>Add tags for openApi definition for given function. It is recommended to use some enum for tags to avoid typo issues.</p><p><strong><code>Example</code></strong></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token function">addTags</span><span class="token punctuation">(</span><span class="token string">&#39;User&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;Public&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="parameters-6" tabindex="-1"><a class="header-anchor" href="#parameters-6" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>...tags</code></td><td style="text-align:left;"><code>string</code>[]</td><td style="text-align:left;">List of tag strings</td></tr></tbody></table><h4 id="returns-5" tabindex="-1"><a class="header-anchor" href="#returns-5" aria-hidden="true">#</a> Returns</h4>`,6),tl=e("code",null,"FunctionDefinitionBuilder",-1),nl=e("code",null,"ServiceClassType",-1),ol=e("code",null,"MessagePayloadType",-1),sl=e("code",null,"MessageParamsType",-1),ll=e("code",null,"MessageResultType",-1),il=e("code",null,"FunctionPayloadType",-1),al=e("code",null,"FunctionParamsType",-1),dl=e("code",null,"FunctionResultType",-1),cl=e("p",null,"FunctionDefinitionBuilder",-1),rl=e("h4",{id:"defined-in-17",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-17","aria-hidden":"true"},"#"),t(" Defined in")],-1),ul={href:"https://github.com/sebastianwessel/purista/blob/dc1cd23/packages/core/src/helper/FunctionDefinitionBuilder.impl.ts#L192",target:"_blank",rel:"noopener noreferrer"},hl=e("hr",null,null,-1),_l=e("h3",{id:"disablehttpsecurity",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#disablehttpsecurity","aria-hidden":"true"},"#"),t(" disableHttpSecurity")],-1),pl=e("strong",null,"disableHttpSecurity",-1),fl=e("code",null,"enabled?",-1),yl=e("code",null,"FunctionDefinitionBuilder",-1),ml=e("code",null,"ServiceClassType",-1),gl=e("code",null,"MessagePayloadType",-1),bl=e("code",null,"MessageParamsType",-1),Tl=e("code",null,"MessageResultType",-1),xl=e("code",null,"FunctionPayloadType",-1),Fl=e("code",null,"FunctionParamsType",-1),Pl=e("code",null,"FunctionResultType",-1),Dl=i('<p>enable or disable security for this endpoint</p><h4 id="parameters-7" tabindex="-1"><a class="header-anchor" href="#parameters-7" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Default value</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>enabled</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;"><code>false</code></td><td style="text-align:left;">Defaults to false if not set</td></tr></tbody></table><h4 id="returns-6" tabindex="-1"><a class="header-anchor" href="#returns-6" aria-hidden="true">#</a> Returns</h4>',4),Bl=e("code",null,"FunctionDefinitionBuilder",-1),kl=e("code",null,"ServiceClassType",-1),vl=e("code",null,"MessagePayloadType",-1),Ml=e("code",null,"MessageParamsType",-1),Sl=e("code",null,"MessageResultType",-1),Rl=e("code",null,"FunctionPayloadType",-1),Cl=e("code",null,"FunctionParamsType",-1),wl=e("code",null,"FunctionResultType",-1),Il=e("p",null,"FunctionDefinitionBuilder",-1),Ol=e("h4",{id:"defined-in-18",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-18","aria-hidden":"true"},"#"),t(" Defined in")],-1),Ll={href:"https://github.com/sebastianwessel/purista/blob/dc1cd23/packages/core/src/helper/FunctionDefinitionBuilder.impl.ts#L365",target:"_blank",rel:"noopener noreferrer"},Nl=e("hr",null,null,-1),Hl=e("h3",{id:"enablehttpsecurity",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#enablehttpsecurity","aria-hidden":"true"},"#"),t(" enableHttpSecurity")],-1),Al=e("strong",null,"enableHttpSecurity",-1),Zl=e("code",null,"enabled?",-1),El=e("code",null,"FunctionDefinitionBuilder",-1),ql=e("code",null,"ServiceClassType",-1),Gl=e("code",null,"MessagePayloadType",-1),Ql=e("code",null,"MessageParamsType",-1),Wl=e("code",null,"MessageResultType",-1),Vl=e("code",null,"FunctionPayloadType",-1),jl=e("code",null,"FunctionParamsType",-1),Ul=e("code",null,"FunctionResultType",-1),zl=i('<p>enable or disable security for this endpoint</p><h4 id="parameters-8" tabindex="-1"><a class="header-anchor" href="#parameters-8" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Default value</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>enabled</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;"><code>true</code></td><td style="text-align:left;">Defaults to true if not set</td></tr></tbody></table><h4 id="returns-7" tabindex="-1"><a class="header-anchor" href="#returns-7" aria-hidden="true">#</a> Returns</h4>',4),Jl=e("code",null,"FunctionDefinitionBuilder",-1),Kl=e("code",null,"ServiceClassType",-1),Xl=e("code",null,"MessagePayloadType",-1),Yl=e("code",null,"MessageParamsType",-1),$l=e("code",null,"MessageResultType",-1),ei=e("code",null,"FunctionPayloadType",-1),ti=e("code",null,"FunctionParamsType",-1),ni=e("code",null,"FunctionResultType",-1),oi=e("p",null,"FunctionDefinitionBuilder",-1),si=e("h4",{id:"defined-in-19",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-19","aria-hidden":"true"},"#"),t(" Defined in")],-1),li={href:"https://github.com/sebastianwessel/purista/blob/dc1cd23/packages/core/src/helper/FunctionDefinitionBuilder.impl.ts#L355",target:"_blank",rel:"noopener noreferrer"},ii=e("hr",null,null,-1),ai=e("h3",{id:"exposeashttpendpoint",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#exposeashttpendpoint","aria-hidden":"true"},"#"),t(" exposeAsHttpEndpoint")],-1),di=e("strong",null,"exposeAsHttpEndpoint",-1),ci=e("code",null,"method",-1),ri=e("code",null,"path",-1),ui=e("code",null,"contentType?",-1),hi=e("code",null,"FunctionDefinitionBuilder",-1),_i=e("code",null,"ServiceClassType",-1),pi=e("code",null,"MessagePayloadType",-1),fi=e("code",null,"MessageParamsType",-1),yi=e("code",null,"MessageResultType",-1),mi=e("code",null,"FunctionPayloadType",-1),gi=e("code",null,"FunctionParamsType",-1),bi=e("code",null,"FunctionResultType",-1),Ti=e("p",null,"Mark the function to be exposed as http endpoint.",-1),xi=e("h4",{id:"parameters-9",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-9","aria-hidden":"true"},"#"),t(" Parameters")],-1),Fi=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Default value"),e("th",{style:{"text-align":"left"}},"Description")])],-1),Pi=e("td",{style:{"text-align":"left"}},[e("code",null,"method")],-1),Di={style:{"text-align":"left"}},Bi=e("code",null,"SupportedHttpMethod",-1),ki=e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")],-1),vi=e("td",{style:{"text-align":"left"}},"Http method POST, PUT, PATCH, GET, DELETE",-1),Mi=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"path")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")]),e("td",{style:{"text-align":"left"}},"The url path")],-1),Si=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"contentType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},[e("code",null,"'application/json'")]),e("td",{style:{"text-align":"left"}},"response content type defaults to application/json")],-1),Ri=e("h4",{id:"returns-8",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-8","aria-hidden":"true"},"#"),t(" Returns")],-1),Ci=e("code",null,"FunctionDefinitionBuilder",-1),wi=e("code",null,"ServiceClassType",-1),Ii=e("code",null,"MessagePayloadType",-1),Oi=e("code",null,"MessageParamsType",-1),Li=e("code",null,"MessageResultType",-1),Ni=e("code",null,"FunctionPayloadType",-1),Hi=e("code",null,"FunctionParamsType",-1),Ai=e("code",null,"FunctionResultType",-1),Zi=e("p",null,"FunctionDefinitionBuilder",-1),Ei=e("h4",{id:"defined-in-20",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-20","aria-hidden":"true"},"#"),t(" Defined in")],-1),qi={href:"https://github.com/sebastianwessel/purista/blob/dc1cd23/packages/core/src/helper/FunctionDefinitionBuilder.impl.ts#L337",target:"_blank",rel:"noopener noreferrer"},Gi=e("hr",null,null,-1),Qi=e("h3",{id:"extendwithhttpmetadata",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#extendwithhttpmetadata","aria-hidden":"true"},"#"),t(" extendWithHttpMetadata")],-1),Wi=e("code",null,"Private",-1),Vi=e("strong",null,"extendWithHttpMetadata",-1),ji=e("code",null,"definition",-1),Ui=e("code",null,"CommandDefinition",-1),zi=e("code",null,"ServiceClassType",-1),Ji=e("code",null,"Record",-1),Ki=e("code",null,"string",-1),Xi=e("code",null,"unknown",-1),Yi=e("code",null,"MessagePayloadType",-1),$i=e("code",null,"MessageParamsType",-1),ea=e("code",null,"MessageResultType",-1),ta=e("code",null,"FunctionPayloadType",-1),na=e("code",null,"FunctionParamsType",-1),oa=e("h4",{id:"parameters-10",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-10","aria-hidden":"true"},"#"),t(" Parameters")],-1),sa=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),la=e("td",{style:{"text-align":"left"}},[e("code",null,"definition")],-1),ia={style:{"text-align":"left"}},aa=e("code",null,"CommandDefinition",-1),da=e("code",null,"ServiceClassType",-1),ca=e("code",null,"Record",-1),ra=e("code",null,"string",-1),ua=e("code",null,"unknown",-1),ha=e("code",null,"MessagePayloadType",-1),_a=e("code",null,"MessageParamsType",-1),pa=e("code",null,"MessageResultType",-1),fa=e("code",null,"FunctionPayloadType",-1),ya=e("code",null,"FunctionParamsType",-1),ma=e("h4",{id:"returns-9",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-9","aria-hidden":"true"},"#"),t(" Returns")],-1),ga=e("code",null,"CommandDefinition",-1),ba=e("code",null,"ServiceClassType",-1),Ta=e("code",null,"Record",-1),xa=e("code",null,"string",-1),Fa=e("code",null,"unknown",-1),Pa=e("code",null,"MessagePayloadType",-1),Da=e("code",null,"MessageParamsType",-1),Ba=e("code",null,"MessageResultType",-1),ka=e("code",null,"FunctionPayloadType",-1),va=e("code",null,"FunctionParamsType",-1),Ma=e("h4",{id:"defined-in-21",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-21","aria-hidden":"true"},"#"),t(" Defined in")],-1),Sa={href:"https://github.com/sebastianwessel/purista/blob/dc1cd23/packages/core/src/helper/FunctionDefinitionBuilder.impl.ts#L386",target:"_blank",rel:"noopener noreferrer"},Ra=e("hr",null,null,-1),Ca=e("h3",{id:"getdefinition",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#getdefinition","aria-hidden":"true"},"#"),t(" getDefinition")],-1),wa=e("strong",null,"getDefinition",-1),Ia=e("code",null,"CommandDefinition",-1),Oa=e("code",null,"ServiceClassType",-1),La=e("code",null,"Record",-1),Na=e("code",null,"string",-1),Ha=e("code",null,"unknown",-1),Aa=e("code",null,"MessagePayloadType",-1),Za=e("code",null,"MessageParamsType",-1),Ea=e("code",null,"MessageResultType",-1),qa=e("code",null,"FunctionPayloadType",-1),Ga=e("code",null,"FunctionParamsType",-1),Qa=e("p",null,"Creates and returns the CommandDefinition used as input for the service.",-1),Wa=e("h4",{id:"returns-10",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-10","aria-hidden":"true"},"#"),t(" Returns")],-1),Va=e("code",null,"CommandDefinition",-1),ja=e("code",null,"ServiceClassType",-1),Ua=e("code",null,"Record",-1),za=e("code",null,"string",-1),Ja=e("code",null,"unknown",-1),Ka=e("code",null,"MessagePayloadType",-1),Xa=e("code",null,"MessageParamsType",-1),Ya=e("code",null,"MessageResultType",-1),$a=e("code",null,"FunctionPayloadType",-1),ed=e("code",null,"FunctionParamsType",-1),td=e("p",null,"CommandDefinition",-1),nd=e("h4",{id:"defined-in-22",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-22","aria-hidden":"true"},"#"),t(" Defined in")],-1),od={href:"https://github.com/sebastianwessel/purista/blob/dc1cd23/packages/core/src/helper/FunctionDefinitionBuilder.impl.ts#L439",target:"_blank",rel:"noopener noreferrer"},sd=e("hr",null,null,-1),ld=e("h3",{id:"getfunction",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#getfunction","aria-hidden":"true"},"#"),t(" getFunction")],-1),id=e("strong",null,"getFunction",-1),ad=e("code",null,"CommandFunction",-1),dd=e("code",null,"ServiceClassType",-1),cd=e("code",null,"MessagePayloadType",-1),rd=e("code",null,"MessageParamsType",-1),ud=e("code",null,"FunctionPayloadType",-1),hd=e("code",null,"FunctionParamsType",-1),_d=e("code",null,"FunctionResultType",-1),pd=e("p",null,"Get the function implementation",-1),fd=e("h4",{id:"returns-11",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-11","aria-hidden":"true"},"#"),t(" Returns")],-1),yd=e("code",null,"CommandFunction",-1),md=e("code",null,"ServiceClassType",-1),gd=e("code",null,"MessagePayloadType",-1),bd=e("code",null,"MessageParamsType",-1),Td=e("code",null,"FunctionPayloadType",-1),xd=e("code",null,"FunctionParamsType",-1),Fd=e("code",null,"FunctionResultType",-1),Pd=e("p",null,"the function",-1),Dd=e("h4",{id:"defined-in-23",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-23","aria-hidden":"true"},"#"),t(" Defined in")],-1),Bd={href:"https://github.com/sebastianwessel/purista/blob/dc1cd23/packages/core/src/helper/FunctionDefinitionBuilder.impl.ts#L541",target:"_blank",rel:"noopener noreferrer"},kd=e("hr",null,null,-1),vd=e("h3",{id:"onfailure",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#onfailure","aria-hidden":"true"},"#"),t(" onFailure")],-1),Md=e("strong",null,"onFailure",-1),Sd=e("code",null,"FunctionDefinitionBuilder",-1),Rd=e("code",null,"ServiceClassType",-1),Cd=e("code",null,"MessagePayloadType",-1),wd=e("code",null,"MessageParamsType",-1),Id=e("code",null,"MessageResultType",-1),Od=e("code",null,"FunctionPayloadType",-1),Ld=e("code",null,"FunctionParamsType",-1),Nd=e("code",null,"FunctionResultType",-1),Hd=e("p",null,"Called",-1),Ad=e("h4",{id:"returns-12",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-12","aria-hidden":"true"},"#"),t(" Returns")],-1),Zd=e("code",null,"FunctionDefinitionBuilder",-1),Ed=e("code",null,"ServiceClassType",-1),qd=e("code",null,"MessagePayloadType",-1),Gd=e("code",null,"MessageParamsType",-1),Qd=e("code",null,"MessageResultType",-1),Wd=e("code",null,"FunctionPayloadType",-1),Vd=e("code",null,"FunctionParamsType",-1),jd=e("code",null,"FunctionResultType",-1),Ud=e("p",null,"FunctionDefinitionBuilder",-1),zd=e("h4",{id:"defined-in-24",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-24","aria-hidden":"true"},"#"),t(" Defined in")],-1),Jd={href:"https://github.com/sebastianwessel/purista/blob/dc1cd23/packages/core/src/helper/FunctionDefinitionBuilder.impl.ts#L318",target:"_blank",rel:"noopener noreferrer"},Kd=e("hr",null,null,-1),Xd=e("h3",{id:"onsuccess",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#onsuccess","aria-hidden":"true"},"#"),t(" onSuccess")],-1),Yd=e("strong",null,"onSuccess",-1),$d=e("code",null,"FunctionDefinitionBuilder",-1),ec=e("code",null,"ServiceClassType",-1),tc=e("code",null,"MessagePayloadType",-1),nc=e("code",null,"MessageParamsType",-1),oc=e("code",null,"MessageResultType",-1),sc=e("code",null,"FunctionPayloadType",-1),lc=e("code",null,"FunctionParamsType",-1),ic=e("code",null,"FunctionResultType",-1),ac=e("p",null,"Called",-1),dc=e("h4",{id:"returns-13",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-13","aria-hidden":"true"},"#"),t(" Returns")],-1),cc=e("code",null,"FunctionDefinitionBuilder",-1),rc=e("code",null,"ServiceClassType",-1),uc=e("code",null,"MessagePayloadType",-1),hc=e("code",null,"MessageParamsType",-1),_c=e("code",null,"MessageResultType",-1),pc=e("code",null,"FunctionPayloadType",-1),fc=e("code",null,"FunctionParamsType",-1),yc=e("code",null,"FunctionResultType",-1),mc=e("p",null,"FunctionDefinitionBuilder",-1),gc=e("h4",{id:"defined-in-25",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-25","aria-hidden":"true"},"#"),t(" Defined in")],-1),bc={href:"https://github.com/sebastianwessel/purista/blob/dc1cd23/packages/core/src/helper/FunctionDefinitionBuilder.impl.ts#L326",target:"_blank",rel:"noopener noreferrer"},Tc=e("hr",null,null,-1),xc=e("h3",{id:"setafterguardhook",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#setafterguardhook","aria-hidden":"true"},"#"),t(" setAfterGuardHook")],-1),Fc=e("strong",null,"setAfterGuardHook",-1),Pc=e("code",null,"afterGuard",-1),Dc=e("code",null,"FunctionDefinitionBuilder",-1),Bc=e("code",null,"ServiceClassType",-1),kc=e("code",null,"MessagePayloadType",-1),vc=e("code",null,"MessageParamsType",-1),Mc=e("code",null,"MessageResultType",-1),Sc=e("code",null,"FunctionPayloadType",-1),Rc=e("code",null,"FunctionParamsType",-1),Cc=e("code",null,"FunctionResultType",-1),wc=e("p",null,"Set one or more after guard hook(s). If there are multiple after guard hooks, they are executed in parallel",-1),Ic=e("h4",{id:"parameters-11",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-11","aria-hidden":"true"},"#"),t(" Parameters")],-1),Oc=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),Lc=e("td",{style:{"text-align":"left"}},[e("code",null,"...afterGuard")],-1),Nc={style:{"text-align":"left"}},Hc=e("code",null,"AfterGuardHook",-1),Ac=e("code",null,"ServiceClassType",-1),Zc=e("code",null,"MessageResultType",-1),Ec=e("code",null,"MessagePayloadType",-1),qc=e("code",null,"MessageParamsType",-1),Gc=e("td",{style:{"text-align":"left"}},"After guard function",-1),Qc=e("h4",{id:"returns-14",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-14","aria-hidden":"true"},"#"),t(" Returns")],-1),Wc=e("code",null,"FunctionDefinitionBuilder",-1),Vc=e("code",null,"ServiceClassType",-1),jc=e("code",null,"MessagePayloadType",-1),Uc=e("code",null,"MessageParamsType",-1),zc=e("code",null,"MessageResultType",-1),Jc=e("code",null,"FunctionPayloadType",-1),Kc=e("code",null,"FunctionParamsType",-1),Xc=e("code",null,"FunctionResultType",-1),Yc=e("p",null,"FunctionDefinitionBuilder",-1),$c=e("h4",{id:"defined-in-26",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-26","aria-hidden":"true"},"#"),t(" Defined in")],-1),er={href:"https://github.com/sebastianwessel/purista/blob/dc1cd23/packages/core/src/helper/FunctionDefinitionBuilder.impl.ts#L307",target:"_blank",rel:"noopener noreferrer"},tr=e("hr",null,null,-1),nr=e("h3",{id:"setbeforeguardhook",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#setbeforeguardhook","aria-hidden":"true"},"#"),t(" setBeforeGuardHook")],-1),or=e("strong",null,"setBeforeGuardHook",-1),sr=e("code",null,"beforeGuards",-1),lr=e("code",null,"FunctionDefinitionBuilder",-1),ir=e("code",null,"ServiceClassType",-1),ar=e("code",null,"MessagePayloadType",-1),dr=e("code",null,"MessageParamsType",-1),cr=e("code",null,"MessageResultType",-1),rr=e("code",null,"FunctionPayloadType",-1),ur=e("code",null,"FunctionParamsType",-1),hr=e("code",null,"FunctionResultType",-1),_r=e("p",null,"Set one or more before guard hook(s). If there are multiple before guard hooks, they are executed in parallel",-1),pr=e("h4",{id:"parameters-12",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-12","aria-hidden":"true"},"#"),t(" Parameters")],-1),fr=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),yr=e("td",{style:{"text-align":"left"}},[e("code",null,"...beforeGuards")],-1),mr={style:{"text-align":"left"}},gr=e("code",null,"BeforeGuardHook",-1),br=e("code",null,"ServiceClassType",-1),Tr=e("code",null,"MessagePayloadType",-1),xr=e("code",null,"MessageParamsType",-1),Fr=e("code",null,"FunctionPayloadType",-1),Pr=e("code",null,"FunctionParamsType",-1),Dr=e("td",{style:{"text-align":"left"}},"Before guard function",-1),Br=e("h4",{id:"returns-15",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-15","aria-hidden":"true"},"#"),t(" Returns")],-1),kr=e("code",null,"FunctionDefinitionBuilder",-1),vr=e("code",null,"ServiceClassType",-1),Mr=e("code",null,"MessagePayloadType",-1),Sr=e("code",null,"MessageParamsType",-1),Rr=e("code",null,"MessageResultType",-1),Cr=e("code",null,"FunctionPayloadType",-1),wr=e("code",null,"FunctionParamsType",-1),Ir=e("code",null,"FunctionResultType",-1),Or=e("p",null,"FunctionDefinitionBuilder",-1),Lr=e("h4",{id:"defined-in-27",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-27","aria-hidden":"true"},"#"),t(" Defined in")],-1),Nr={href:"https://github.com/sebastianwessel/purista/blob/dc1cd23/packages/core/src/helper/FunctionDefinitionBuilder.impl.ts#L288",target:"_blank",rel:"noopener noreferrer"},Hr=e("hr",null,null,-1),Ar=e("h3",{id:"setfunction",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#setfunction","aria-hidden":"true"},"#"),t(" setFunction")],-1),Zr=e("strong",null,"setFunction",-1),Er=e("code",null,"fn",-1),qr=e("code",null,"FunctionDefinitionBuilder",-1),Gr=e("code",null,"ServiceClassType",-1),Qr=e("code",null,"MessagePayloadType",-1),Wr=e("code",null,"MessageParamsType",-1),Vr=e("code",null,"MessageResultType",-1),jr=e("code",null,"FunctionPayloadType",-1),Ur=e("code",null,"FunctionParamsType",-1),zr=e("code",null,"FunctionResultType",-1),Jr=i(`<p>Required: Set the function implementation. The types should be automatically set as soon as schemas previously defined. As the function will be a a function of a service class you need to implement as function declaration. Anonymous functions do not have access to the <code>this</code> scope.</p><p><strong><code>Example</code></strong></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>context<span class="token punctuation">,</span> payload<span class="token punctuation">,</span> parameter<span class="token punctuation">)</span> <span class="token punctuation">{</span>

   <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">the result output payload</span><span class="token template-punctuation string">\`</span></span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="parameters-13" tabindex="-1"><a class="header-anchor" href="#parameters-13" aria-hidden="true">#</a> Parameters</h4>`,4),Kr=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),Xr=e("td",{style:{"text-align":"left"}},[e("code",null,"fn")],-1),Yr={style:{"text-align":"left"}},$r=e("code",null,"CommandFunction",-1),eu=e("code",null,"ServiceClassType",-1),tu=e("code",null,"MessagePayloadType",-1),nu=e("code",null,"MessageParamsType",-1),ou=e("code",null,"FunctionPayloadType",-1),su=e("code",null,"FunctionParamsType",-1),lu=e("code",null,"FunctionResultType",-1),iu=e("td",{style:{"text-align":"left"}},"the function implementation",-1),au=e("h4",{id:"returns-16",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-16","aria-hidden":"true"},"#"),t(" Returns")],-1),du=e("code",null,"FunctionDefinitionBuilder",-1),cu=e("code",null,"ServiceClassType",-1),ru=e("code",null,"MessagePayloadType",-1),uu=e("code",null,"MessageParamsType",-1),hu=e("code",null,"MessageResultType",-1),_u=e("code",null,"FunctionPayloadType",-1),pu=e("code",null,"FunctionParamsType",-1),fu=e("code",null,"FunctionResultType",-1),yu=e("p",null,"FunctionDefinitionBuilder",-1),mu=e("h4",{id:"defined-in-28",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-28","aria-hidden":"true"},"#"),t(" Defined in")],-1),gu={href:"https://github.com/sebastianwessel/purista/blob/dc1cd23/packages/core/src/helper/FunctionDefinitionBuilder.impl.ts#L499",target:"_blank",rel:"noopener noreferrer"},bu=e("hr",null,null,-1),Tu=e("h3",{id:"setsuccesseventname",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#setsuccesseventname","aria-hidden":"true"},"#"),t(" setSuccessEventName")],-1),xu=e("strong",null,"setSuccessEventName",-1),Fu=e("code",null,"eventName",-1),Pu=e("code",null,"FunctionDefinitionBuilder",-1),Du=e("code",null,"ServiceClassType",-1),Bu=e("code",null,"MessagePayloadType",-1),ku=e("code",null,"MessageParamsType",-1),vu=e("code",null,"MessageResultType",-1),Mu=e("code",null,"FunctionPayloadType",-1),Su=e("code",null,"FunctionParamsType",-1),Ru=e("code",null,"FunctionResultType",-1),Cu=i('<h4 id="parameters-14" tabindex="-1"><a class="header-anchor" href="#parameters-14" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>eventName</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h4 id="returns-17" tabindex="-1"><a class="header-anchor" href="#returns-17" aria-hidden="true">#</a> Returns</h4>',3),wu=e("code",null,"FunctionDefinitionBuilder",-1),Iu=e("code",null,"ServiceClassType",-1),Ou=e("code",null,"MessagePayloadType",-1),Lu=e("code",null,"MessageParamsType",-1),Nu=e("code",null,"MessageResultType",-1),Hu=e("code",null,"FunctionPayloadType",-1),Au=e("code",null,"FunctionParamsType",-1),Zu=e("code",null,"FunctionResultType",-1),Eu=e("h4",{id:"defined-in-29",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-29","aria-hidden":"true"},"#"),t(" Defined in")],-1),qu={href:"https://github.com/sebastianwessel/purista/blob/dc1cd23/packages/core/src/helper/FunctionDefinitionBuilder.impl.ts#L91",target:"_blank",rel:"noopener noreferrer"},Gu=e("hr",null,null,-1),Qu=e("h3",{id:"setsummary",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#setsummary","aria-hidden":"true"},"#"),t(" setSummary")],-1),Wu=e("strong",null,"setSummary",-1),Vu=e("code",null,"summary",-1),ju=e("code",null,"FunctionDefinitionBuilder",-1),Uu=e("code",null,"ServiceClassType",-1),zu=e("code",null,"MessagePayloadType",-1),Ju=e("code",null,"MessageParamsType",-1),Ku=e("code",null,"MessageResultType",-1),Xu=e("code",null,"FunctionPayloadType",-1),Yu=e("code",null,"FunctionParamsType",-1),$u=e("code",null,"FunctionResultType",-1),eh=i(`<p>Set the function summary text used for example in openApi documentation</p><p><strong><code>Example</code></strong></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token function">setSummary</span><span class="token punctuation">(</span><span class="token string">&#39;Some function summary&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="parameters-15" tabindex="-1"><a class="header-anchor" href="#parameters-15" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>summary</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Summary text</td></tr></tbody></table><h4 id="returns-18" tabindex="-1"><a class="header-anchor" href="#returns-18" aria-hidden="true">#</a> Returns</h4>`,6),th=e("code",null,"FunctionDefinitionBuilder",-1),nh=e("code",null,"ServiceClassType",-1),oh=e("code",null,"MessagePayloadType",-1),sh=e("code",null,"MessageParamsType",-1),lh=e("code",null,"MessageResultType",-1),ih=e("code",null,"FunctionPayloadType",-1),ah=e("code",null,"FunctionParamsType",-1),dh=e("code",null,"FunctionResultType",-1),ch=e("p",null,"FunctionDefinitionBuilder",-1),rh=e("h4",{id:"defined-in-30",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-30","aria-hidden":"true"},"#"),t(" Defined in")],-1),uh={href:"https://github.com/sebastianwessel/purista/blob/dc1cd23/packages/core/src/helper/FunctionDefinitionBuilder.impl.ts#L381",target:"_blank",rel:"noopener noreferrer"},hh=e("hr",null,null,-1),_h=e("h3",{id:"transforminput",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#transforminput","aria-hidden":"true"},"#"),t(" transformInput")],-1),ph=e("strong",null,"transformInput",-1),fh=e("code",null,"PayloadIn",-1),yh=e("code",null,"ParamsIn",-1),mh=e("code",null,"PayloadOut",-1),gh=e("code",null,"ParamsOut",-1),bh=e("code",null,"PayloadD",-1),Th=e("code",null,"ParamsD",-1),xh=e("code",null,"transformInputSchema",-1),Fh=e("code",null,"transformParameterSchema",-1),Ph=e("code",null,"transformFunction",-1),Dh=e("code",null,"FunctionDefinitionBuilder",-1),Bh=e("code",null,"ServiceClassType",-1),kh=e("code",null,"PayloadIn",-1),vh=e("code",null,"ParamsIn",-1),Mh=e("code",null,"MessageResultType",-1),Sh=e("code",null,"FunctionPayloadType",-1),Rh=e("code",null,"FunctionParamsType",-1),Ch=e("code",null,"FunctionResultType",-1),wh=i('<p>Set a transform input hook which will encode or transform the input payload and parameters. Will be executed as first step before input validation, before guard and the function itself. This will change the type of input message payload and input message parameter.</p><h4 id="type-parameters-5" tabindex="-1"><a class="header-anchor" href="#type-parameters-5" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>PayloadIn</code></td><td style="text-align:left;"><code>MessagePayloadType</code></td></tr><tr><td style="text-align:left;"><code>ParamsIn</code></td><td style="text-align:left;"><code>MessageParamsType</code></td></tr><tr><td style="text-align:left;"><code>PayloadOut</code></td><td style="text-align:left;"><code>MessagePayloadType</code></td></tr><tr><td style="text-align:left;"><code>ParamsOut</code></td><td style="text-align:left;"><code>MessageParamsType</code></td></tr><tr><td style="text-align:left;"><code>PayloadD</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>ParamsD</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="parameters-16" tabindex="-1"><a class="header-anchor" href="#parameters-16" aria-hidden="true">#</a> Parameters</h4>',4),Ih=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Oh=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"transformInputSchema")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ZodType"),t("<"),e("code",null,"PayloadOut"),t(", "),e("code",null,"PayloadD"),t(", "),e("code",null,"PayloadIn"),t(">")])],-1),Lh=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"transformParameterSchema")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ZodType"),t("<"),e("code",null,"ParamsOut"),t(", "),e("code",null,"ParamsD"),t(", "),e("code",null,"ParamsIn"),t(">")])],-1),Nh=e("td",{style:{"text-align":"left"}},[e("code",null,"transformFunction")],-1),Hh={style:{"text-align":"left"}},Ah=e("code",null,"TransformInputHook",-1),Zh=e("code",null,"ServiceClassType",-1),Eh=e("code",null,"PayloadOut",-1),qh=e("code",null,"ParamsOut",-1),Gh=e("code",null,"PayloadIn",-1),Qh=e("code",null,"ParamsIn",-1),Wh=e("h4",{id:"returns-19",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-19","aria-hidden":"true"},"#"),t(" Returns")],-1),Vh=e("code",null,"FunctionDefinitionBuilder",-1),jh=e("code",null,"ServiceClassType",-1),Uh=e("code",null,"PayloadIn",-1),zh=e("code",null,"ParamsIn",-1),Jh=e("code",null,"MessageResultType",-1),Kh=e("code",null,"FunctionPayloadType",-1),Xh=e("code",null,"FunctionParamsType",-1),Yh=e("code",null,"FunctionResultType",-1),$h=e("p",null,"FunctionDefinitionBuilder",-1),e_=e("h4",{id:"defined-in-31",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-31","aria-hidden":"true"},"#"),t(" Defined in")],-1),t_={href:"https://github.com/sebastianwessel/purista/blob/dc1cd23/packages/core/src/helper/FunctionDefinitionBuilder.impl.ts#L222",target:"_blank",rel:"noopener noreferrer"},n_=e("hr",null,null,-1),o_=e("h3",{id:"transformoutput",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#transformoutput","aria-hidden":"true"},"#"),t(" transformOutput")],-1),s_=e("strong",null,"transformOutput",-1),l_=e("code",null,"PayloadOut",-1),i_=e("code",null,"PayloadD",-1),a_=e("code",null,"PayloadIn",-1),d_=e("code",null,"transformOutputSchema",-1),c_=e("code",null,"transformFunction",-1),r_=e("code",null,"FunctionDefinitionBuilder",-1),u_=e("code",null,"ServiceClassType",-1),h_=e("code",null,"MessagePayloadType",-1),__=e("code",null,"MessageParamsType",-1),p_=e("code",null,"PayloadOut",-1),f_=e("code",null,"FunctionPayloadType",-1),y_=e("code",null,"FunctionParamsType",-1),m_=e("code",null,"FunctionResultType",-1),g_=i('<p>Set a transform output hook which will encode or transform the response payload. Will be executed at very last step after function execution, output validation and after guard hooks. This will change the type of output message payload.</p><h4 id="type-parameters-6" tabindex="-1"><a class="header-anchor" href="#type-parameters-6" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>PayloadOut</code></td></tr><tr><td style="text-align:left;"><code>PayloadD</code></td></tr><tr><td style="text-align:left;"><code>PayloadIn</code></td></tr></tbody></table><h4 id="parameters-17" tabindex="-1"><a class="header-anchor" href="#parameters-17" aria-hidden="true">#</a> Parameters</h4>',4),b_=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),T_=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"transformOutputSchema")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ZodType"),t("<"),e("code",null,"PayloadOut"),t(", "),e("code",null,"PayloadD"),t(", "),e("code",null,"PayloadIn"),t(">")])],-1),x_=e("td",{style:{"text-align":"left"}},[e("code",null,"transformFunction")],-1),F_={style:{"text-align":"left"}},P_=e("code",null,"TransformOutputHook",-1),D_=e("code",null,"ServiceClassType",-1),B_=e("code",null,"PayloadOut",-1),k_=e("code",null,"MessagePayloadType",-1),v_=e("code",null,"FunctionParamsType",-1),M_=e("code",null,"PayloadIn",-1),S_=e("h4",{id:"returns-20",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-20","aria-hidden":"true"},"#"),t(" Returns")],-1),R_=e("code",null,"FunctionDefinitionBuilder",-1),C_=e("code",null,"ServiceClassType",-1),w_=e("code",null,"MessagePayloadType",-1),I_=e("code",null,"MessageParamsType",-1),O_=e("code",null,"PayloadOut",-1),L_=e("code",null,"FunctionPayloadType",-1),N_=e("code",null,"FunctionParamsType",-1),H_=e("code",null,"FunctionResultType",-1),A_=e("p",null,"FunctionDefinitionBuilder",-1),Z_=e("h4",{id:"defined-in-32",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-32","aria-hidden":"true"},"#"),t(" Defined in")],-1),E_={href:"https://github.com/sebastianwessel/purista/blob/dc1cd23/packages/core/src/helper/FunctionDefinitionBuilder.impl.ts#L257",target:"_blank",rel:"noopener noreferrer"};function q_(G_,Q_){const o=a("RouterLink"),l=a("ExternalLinkIcon");return c(),r("div",null,[e("p",null,[n(o,{to:"/api/"},{default:s(()=>[t("PURISTA API - v1.4.3")]),_:1}),t(" / "),n(o,{to:"/api/modules/purista_core.html"},{default:s(()=>[t("@purista/core")]),_:1}),t(" / FunctionDefinitionBuilder")]),h,e("p",null,[n(o,{to:"/api/modules/purista_core.html"},{default:s(()=>[t("@purista/core")]),_:1}),t(".FunctionDefinitionBuilder")]),_,p,f,e("table",null,[y,e("tbody",null,[e("tr",null,[m,e("td",g,[t("extends "),n(o,{to:"/api/classes/purista_core.ServiceClass.html"},{default:s(()=>[b]),_:1})])]),T,x,F,P,D,B])]),k,v,e("ul",null,[e("li",null,[n(o,{to:"/api/classes/purista_core.FunctionDefinitionBuilder.html#constructor"},{default:s(()=>[t("constructor")]),_:1})])]),M,e("ul",null,[e("li",null,[n(o,{to:"/api/classes/purista_core.FunctionDefinitionBuilder.html#errorstatuscodes"},{default:s(()=>[t("errorStatusCodes")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.FunctionDefinitionBuilder.html#fn"},{default:s(()=>[t("fn")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.FunctionDefinitionBuilder.html#hooks"},{default:s(()=>[t("hooks")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.FunctionDefinitionBuilder.html#httpmetadata"},{default:s(()=>[t("httpMetadata")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.FunctionDefinitionBuilder.html#inputschema"},{default:s(()=>[t("inputSchema")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.FunctionDefinitionBuilder.html#issecure"},{default:s(()=>[t("isSecure")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.FunctionDefinitionBuilder.html#outputschema"},{default:s(()=>[t("outputSchema")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.FunctionDefinitionBuilder.html#paramsschema"},{default:s(()=>[t("paramsSchema")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.FunctionDefinitionBuilder.html#queryparameter"},{default:s(()=>[t("queryParameter")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.FunctionDefinitionBuilder.html#summary"},{default:s(()=>[t("summary")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.FunctionDefinitionBuilder.html#tags"},{default:s(()=>[t("tags")]),_:1})])]),S,e("ul",null,[e("li",null,[n(o,{to:"/api/classes/purista_core.FunctionDefinitionBuilder.html#adderrorstatuscodes"},{default:s(()=>[t("addErrorStatusCodes")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.FunctionDefinitionBuilder.html#addinputschema"},{default:s(()=>[t("addInputSchema")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.FunctionDefinitionBuilder.html#addoutputschema"},{default:s(()=>[t("addOutputSchema")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.FunctionDefinitionBuilder.html#addparameterschema"},{default:s(()=>[t("addParameterSchema")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.FunctionDefinitionBuilder.html#addqueryparameters"},{default:s(()=>[t("addQueryParameters")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.FunctionDefinitionBuilder.html#addtags"},{default:s(()=>[t("addTags")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.FunctionDefinitionBuilder.html#disablehttpsecurity"},{default:s(()=>[t("disableHttpSecurity")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.FunctionDefinitionBuilder.html#enablehttpsecurity"},{default:s(()=>[t("enableHttpSecurity")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.FunctionDefinitionBuilder.html#exposeashttpendpoint"},{default:s(()=>[t("exposeAsHttpEndpoint")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.FunctionDefinitionBuilder.html#extendwithhttpmetadata"},{default:s(()=>[t("extendWithHttpMetadata")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.FunctionDefinitionBuilder.html#getdefinition"},{default:s(()=>[t("getDefinition")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.FunctionDefinitionBuilder.html#getfunction"},{default:s(()=>[t("getFunction")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.FunctionDefinitionBuilder.html#onfailure"},{default:s(()=>[t("onFailure")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.FunctionDefinitionBuilder.html#onsuccess"},{default:s(()=>[t("onSuccess")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.FunctionDefinitionBuilder.html#setafterguardhook"},{default:s(()=>[t("setAfterGuardHook")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.FunctionDefinitionBuilder.html#setbeforeguardhook"},{default:s(()=>[t("setBeforeGuardHook")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.FunctionDefinitionBuilder.html#setfunction"},{default:s(()=>[t("setFunction")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.FunctionDefinitionBuilder.html#setsuccesseventname"},{default:s(()=>[t("setSuccessEventName")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.FunctionDefinitionBuilder.html#setsummary"},{default:s(()=>[t("setSummary")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.FunctionDefinitionBuilder.html#transforminput"},{default:s(()=>[t("transformInput")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.FunctionDefinitionBuilder.html#transformoutput"},{default:s(()=>[t("transformOutput")]),_:1})])]),R,e("table",null,[C,e("tbody",null,[e("tr",null,[w,e("td",I,[t("extends "),n(o,{to:"/api/classes/purista_core.ServiceClass.html"},{default:s(()=>[O]),_:1}),t("<"),L,t(", "),N,t(">")])]),H,A,Z,E,q,G])]),Q,e("p",null,[e("a",W,[t("core/src/helper/FunctionDefinitionBuilder.impl.ts:83"),n(l)])]),V,j,e("p",null,[t("\u2022 "),U,t(),z,t(": "),n(o,{to:"/api/enums/purista_core.StatusCode.html"},{default:s(()=>[J]),_:1}),t("[] = "),K]),X,e("p",null,[e("a",Y,[t("core/src/helper/FunctionDefinitionBuilder.impl.ts:44"),n(l)])]),$,ee,e("p",null,[t("\u2022 "),te,t(),ne,t(),oe,t(": "),n(o,{to:"/api/modules/purista_core.html#commandfunction"},{default:s(()=>[se]),_:1}),t("<"),le,t(", "),ie,t(", "),ae,t(", "),de,t(", "),ce,t(", "),re,t(">")]),ue,e("p",null,[e("a",he,[t("core/src/helper/FunctionDefinitionBuilder.impl.ts:73"),n(l)])]),_e,pe,fe,ye,e("table",null,[me,e("tbody",null,[e("tr",null,[ge,e("td",be,[n(o,{to:"/api/modules/purista_core.html#afterguardhook"},{default:s(()=>[Te]),_:1}),t("<"),xe,t(", "),Fe,t(", "),Pe,t(", "),De,t(">[]")])]),e("tr",null,[Be,e("td",ke,[n(o,{to:"/api/modules/purista_core.html#beforeguardhook"},{default:s(()=>[ve]),_:1}),t("<"),Me,t(", "),Se,t(", "),Re,t(", "),Ce,t(", "),we,t(">[]")])]),e("tr",null,[Ie,e("td",Oe,[t("{ "),Le,t(": "),n(o,{to:"/api/modules/purista_core.html#transforminputhook"},{default:s(()=>[Ne]),_:1}),t("<"),He,t(", "),Ae,t(", "),Ze,t(", "),Ee,t(", "),qe,t("> ; "),Ge,t(": "),Qe,t("<"),We,t(", "),Ve,t(", "),je,t("> ; "),Ue,t(": "),ze,t("<"),Je,t(", "),Ke,t(", "),Xe,t("> }")])]),e("tr",null,[Ye,e("td",$e,[n(o,{to:"/api/modules/purista_core.html#transforminputhook"},{default:s(()=>[et]),_:1}),t("<"),tt,t(", "),nt,t(", "),ot,t(", "),st,t(", "),lt,t(">")])]),it,at,e("tr",null,[dt,e("td",ct,[t("{ "),rt,t(": "),n(o,{to:"/api/modules/purista_core.html#transformoutputhook"},{default:s(()=>[ut]),_:1}),t("<"),ht,t(", "),_t,t(", "),pt,t(", "),ft,t(", "),yt,t("> ; "),mt,t(": "),gt,t("<"),bt,t(", "),Tt,t(", "),xt,t("> }")])]),e("tr",null,[Ft,e("td",Pt,[n(o,{to:"/api/modules/purista_core.html#transformoutputhook"},{default:s(()=>[Dt]),_:1}),t("<"),Bt,t(", "),kt,t(", "),vt,t(", "),Mt,t(", "),St,t(">")])]),Rt])]),Ct,e("p",null,[e("a",wt,[t("core/src/helper/FunctionDefinitionBuilder.impl.ts:48"),n(l)])]),It,Ot,e("p",null,[t("\u2022 "),Lt,t(),Nt,t(),Ht,t(": "),n(o,{to:"/api/modules/purista_core.html#httpexposedservicemeta"},{default:s(()=>[At]),_:1})]),Zt,e("p",null,[e("a",Et,[t("core/src/helper/FunctionDefinitionBuilder.impl.ts:34"),n(l)])]),qt,e("p",null,[e("a",Gt,[t("core/src/helper/FunctionDefinitionBuilder.impl.ts:35"),n(l)])]),Qt,e("p",null,[e("a",Wt,[t("core/src/helper/FunctionDefinitionBuilder.impl.ts:46"),n(l)])]),Vt,e("p",null,[e("a",jt,[t("core/src/helper/FunctionDefinitionBuilder.impl.ts:36"),n(l)])]),Ut,e("p",null,[e("a",zt,[t("core/src/helper/FunctionDefinitionBuilder.impl.ts:37"),n(l)])]),Jt,Kt,e("p",null,[t("\u2022 "),Xt,t(),Yt,t(": "),n(o,{to:"/api/modules/purista_core.html#queryparameter"},{default:s(()=>[$t]),_:1}),t("[] = "),en]),tn,e("p",null,[e("a",nn,[t("core/src/helper/FunctionDefinitionBuilder.impl.ts:38"),n(l)])]),on,e("p",null,[e("a",sn,[t("core/src/helper/FunctionDefinitionBuilder.impl.ts:42"),n(l)])]),ln,e("p",null,[e("a",an,[t("core/src/helper/FunctionDefinitionBuilder.impl.ts:40"),n(l)])]),dn,cn,e("p",null,[t("\u25B8 "),rn,t("(..."),un,t("): "),n(o,{to:"/api/classes/purista_core.FunctionDefinitionBuilder.html"},{default:s(()=>[hn]),_:1}),t("<"),_n,t(", "),pn,t(", "),fn,t(", "),yn,t(", "),mn,t(", "),gn,t(", "),bn,t(">")]),Tn,e("table",null,[xn,e("tbody",null,[e("tr",null,[Fn,e("td",Pn,[n(o,{to:"/api/enums/purista_core.StatusCode.html"},{default:s(()=>[Dn]),_:1}),t("[]")]),Bn])])]),kn,e("p",null,[n(o,{to:"/api/classes/purista_core.FunctionDefinitionBuilder.html"},{default:s(()=>[vn]),_:1}),t("<"),Mn,t(", "),Sn,t(", "),Rn,t(", "),Cn,t(", "),wn,t(", "),In,t(", "),On,t(">")]),Ln,Nn,e("p",null,[e("a",Hn,[t("core/src/helper/FunctionDefinitionBuilder.impl.ts:210"),n(l)])]),An,Zn,e("p",null,[t("\u25B8 "),En,t("<"),qn,t(", "),Gn,t(", "),Qn,t(">("),Wn,t("): "),n(o,{to:"/api/classes/purista_core.FunctionDefinitionBuilder.html"},{default:s(()=>[Vn]),_:1}),t("<"),jn,t(", "),Un,t(", "),zn,t(", "),Jn,t(", "),Kn,t(", "),Xn,t(", "),Yn,t(">")]),$n,e("p",null,[n(o,{to:"/api/classes/purista_core.FunctionDefinitionBuilder.html"},{default:s(()=>[eo]),_:1}),t("<"),to,t(", "),no,t(", "),oo,t(", "),so,t(", "),lo,t(", "),io,t(", "),ao,t(">")]),co,ro,e("p",null,[e("a",uo,[t("core/src/helper/FunctionDefinitionBuilder.impl.ts:102"),n(l)])]),ho,_o,e("p",null,[t("\u25B8 "),po,t("<"),fo,t(", "),yo,t(", "),mo,t(">("),go,t("): "),n(o,{to:"/api/classes/purista_core.FunctionDefinitionBuilder.html"},{default:s(()=>[bo]),_:1}),t("<"),To,t(", "),xo,t(", "),Fo,t(", "),Po,t(", "),Do,t(", "),Bo,t(", "),ko,t(">")]),vo,e("p",null,[n(o,{to:"/api/classes/purista_core.FunctionDefinitionBuilder.html"},{default:s(()=>[Mo]),_:1}),t("<"),So,t(", "),Ro,t(", "),Co,t(", "),wo,t(", "),Io,t(", "),Oo,t(", "),Lo,t(">")]),No,Ho,e("p",null,[e("a",Ao,[t("core/src/helper/FunctionDefinitionBuilder.impl.ts:121"),n(l)])]),Zo,Eo,e("p",null,[t("\u25B8 "),qo,t("<"),Go,t(", "),Qo,t(", "),Wo,t(">("),Vo,t("): "),n(o,{to:"/api/classes/purista_core.FunctionDefinitionBuilder.html"},{default:s(()=>[jo]),_:1}),t("<"),Uo,t(", "),zo,t(", "),Jo,t(", "),Ko,t(", "),Xo,t(", "),Yo,t(", "),$o,t(">")]),es,e("p",null,[n(o,{to:"/api/classes/purista_core.FunctionDefinitionBuilder.html"},{default:s(()=>[ts]),_:1}),t("<"),ns,t(", "),os,t(", "),ss,t(", "),ls,t(", "),is,t(", "),as,t(", "),ds,t(">")]),cs,rs,e("p",null,[e("a",us,[t("core/src/helper/FunctionDefinitionBuilder.impl.ts:140"),n(l)])]),hs,_s,e("p",null,[t("\u25B8 "),ps,t("(..."),fs,t("): "),n(o,{to:"/api/classes/purista_core.FunctionDefinitionBuilder.html"},{default:s(()=>[ys]),_:1}),t("<"),ms,t(", "),gs,t(", "),bs,t(", "),Ts,t(", "),xs,t(", "),Fs,t(", "),Ps,t(">")]),Ds,e("table",null,[Bs,e("tbody",null,[e("tr",null,[ks,e("td",vs,[n(o,{to:"/api/modules/purista_core.html#queryparameter"},{default:s(()=>[Ms]),_:1}),t("[]")]),Ss])])]),Rs,e("p",null,[n(o,{to:"/api/classes/purista_core.FunctionDefinitionBuilder.html"},{default:s(()=>[Cs]),_:1}),t("<"),ws,t(", "),Is,t(", "),Os,t(", "),Ls,t(", "),Ns,t(", "),Hs,t(", "),As,t(">")]),Zs,Es,e("p",null,[e("a",qs,[t("core/src/helper/FunctionDefinitionBuilder.impl.ts:175"),n(l)])]),Gs,Qs,e("p",null,[t("\u25B8 "),Ws,t("(..."),Vs,t("): "),n(o,{to:"/api/classes/purista_core.FunctionDefinitionBuilder.html"},{default:s(()=>[js]),_:1}),t("<"),Us,t(", "),zs,t(", "),Js,t(", "),Ks,t(", "),Xs,t(", "),Ys,t(", "),$s,t(">")]),el,e("p",null,[n(o,{to:"/api/classes/purista_core.FunctionDefinitionBuilder.html"},{default:s(()=>[tl]),_:1}),t("<"),nl,t(", "),ol,t(", "),sl,t(", "),ll,t(", "),il,t(", "),al,t(", "),dl,t(">")]),cl,rl,e("p",null,[e("a",ul,[t("core/src/helper/FunctionDefinitionBuilder.impl.ts:192"),n(l)])]),hl,_l,e("p",null,[t("\u25B8 "),pl,t("("),fl,t("): "),n(o,{to:"/api/classes/purista_core.FunctionDefinitionBuilder.html"},{default:s(()=>[yl]),_:1}),t("<"),ml,t(", "),gl,t(", "),bl,t(", "),Tl,t(", "),xl,t(", "),Fl,t(", "),Pl,t(">")]),Dl,e("p",null,[n(o,{to:"/api/classes/purista_core.FunctionDefinitionBuilder.html"},{default:s(()=>[Bl]),_:1}),t("<"),kl,t(", "),vl,t(", "),Ml,t(", "),Sl,t(", "),Rl,t(", "),Cl,t(", "),wl,t(">")]),Il,Ol,e("p",null,[e("a",Ll,[t("core/src/helper/FunctionDefinitionBuilder.impl.ts:365"),n(l)])]),Nl,Hl,e("p",null,[t("\u25B8 "),Al,t("("),Zl,t("): "),n(o,{to:"/api/classes/purista_core.FunctionDefinitionBuilder.html"},{default:s(()=>[El]),_:1}),t("<"),ql,t(", "),Gl,t(", "),Ql,t(", "),Wl,t(", "),Vl,t(", "),jl,t(", "),Ul,t(">")]),zl,e("p",null,[n(o,{to:"/api/classes/purista_core.FunctionDefinitionBuilder.html"},{default:s(()=>[Jl]),_:1}),t("<"),Kl,t(", "),Xl,t(", "),Yl,t(", "),$l,t(", "),ei,t(", "),ti,t(", "),ni,t(">")]),oi,si,e("p",null,[e("a",li,[t("core/src/helper/FunctionDefinitionBuilder.impl.ts:355"),n(l)])]),ii,ai,e("p",null,[t("\u25B8 "),di,t("("),ci,t(", "),ri,t(", "),ui,t("): "),n(o,{to:"/api/classes/purista_core.FunctionDefinitionBuilder.html"},{default:s(()=>[hi]),_:1}),t("<"),_i,t(", "),pi,t(", "),fi,t(", "),yi,t(", "),mi,t(", "),gi,t(", "),bi,t(">")]),Ti,xi,e("table",null,[Fi,e("tbody",null,[e("tr",null,[Pi,e("td",Di,[n(o,{to:"/api/modules/purista_core.html#supportedhttpmethod"},{default:s(()=>[Bi]),_:1})]),ki,vi]),Mi,Si])]),Ri,e("p",null,[n(o,{to:"/api/classes/purista_core.FunctionDefinitionBuilder.html"},{default:s(()=>[Ci]),_:1}),t("<"),wi,t(", "),Ii,t(", "),Oi,t(", "),Li,t(", "),Ni,t(", "),Hi,t(", "),Ai,t(">")]),Zi,Ei,e("p",null,[e("a",qi,[t("core/src/helper/FunctionDefinitionBuilder.impl.ts:337"),n(l)])]),Gi,Qi,e("p",null,[t("\u25B8 "),Wi,t(),Vi,t("("),ji,t("): "),n(o,{to:"/api/modules/purista_core.html#commanddefinition"},{default:s(()=>[Ui]),_:1}),t("<"),zi,t(", "),Ji,t("<"),Ki,t(", "),Xi,t(">, "),Yi,t(", "),$i,t(", "),ea,t(", "),ta,t(", "),na,t(">")]),oa,e("table",null,[sa,e("tbody",null,[e("tr",null,[la,e("td",ia,[n(o,{to:"/api/modules/purista_core.html#commanddefinition"},{default:s(()=>[aa]),_:1}),t("<"),da,t(", "),ca,t("<"),ra,t(", "),ua,t(">, "),ha,t(", "),_a,t(", "),pa,t(", "),fa,t(", "),ya,t(">")])])])]),ma,e("p",null,[n(o,{to:"/api/modules/purista_core.html#commanddefinition"},{default:s(()=>[ga]),_:1}),t("<"),ba,t(", "),Ta,t("<"),xa,t(", "),Fa,t(">, "),Pa,t(", "),Da,t(", "),Ba,t(", "),ka,t(", "),va,t(">")]),Ma,e("p",null,[e("a",Sa,[t("core/src/helper/FunctionDefinitionBuilder.impl.ts:386"),n(l)])]),Ra,Ca,e("p",null,[t("\u25B8 "),wa,t("(): "),n(o,{to:"/api/modules/purista_core.html#commanddefinition"},{default:s(()=>[Ia]),_:1}),t("<"),Oa,t(", "),La,t("<"),Na,t(", "),Ha,t(">, "),Aa,t(", "),Za,t(", "),Ea,t(", "),qa,t(", "),Ga,t(">")]),Qa,Wa,e("p",null,[n(o,{to:"/api/modules/purista_core.html#commanddefinition"},{default:s(()=>[Va]),_:1}),t("<"),ja,t(", "),Ua,t("<"),za,t(", "),Ja,t(">, "),Ka,t(", "),Xa,t(", "),Ya,t(", "),$a,t(", "),ed,t(">")]),td,nd,e("p",null,[e("a",od,[t("core/src/helper/FunctionDefinitionBuilder.impl.ts:439"),n(l)])]),sd,ld,e("p",null,[t("\u25B8 "),id,t("(): "),n(o,{to:"/api/modules/purista_core.html#commandfunction"},{default:s(()=>[ad]),_:1}),t("<"),dd,t(", "),cd,t(", "),rd,t(", "),ud,t(", "),hd,t(", "),_d,t(">")]),pd,fd,e("p",null,[n(o,{to:"/api/modules/purista_core.html#commandfunction"},{default:s(()=>[yd]),_:1}),t("<"),md,t(", "),gd,t(", "),bd,t(", "),Td,t(", "),xd,t(", "),Fd,t(">")]),Pd,Dd,e("p",null,[e("a",Bd,[t("core/src/helper/FunctionDefinitionBuilder.impl.ts:541"),n(l)])]),kd,vd,e("p",null,[t("\u25B8 "),Md,t("(): "),n(o,{to:"/api/classes/purista_core.FunctionDefinitionBuilder.html"},{default:s(()=>[Sd]),_:1}),t("<"),Rd,t(", "),Cd,t(", "),wd,t(", "),Id,t(", "),Od,t(", "),Ld,t(", "),Nd,t(">")]),Hd,Ad,e("p",null,[n(o,{to:"/api/classes/purista_core.FunctionDefinitionBuilder.html"},{default:s(()=>[Zd]),_:1}),t("<"),Ed,t(", "),qd,t(", "),Gd,t(", "),Qd,t(", "),Wd,t(", "),Vd,t(", "),jd,t(">")]),Ud,zd,e("p",null,[e("a",Jd,[t("core/src/helper/FunctionDefinitionBuilder.impl.ts:318"),n(l)])]),Kd,Xd,e("p",null,[t("\u25B8 "),Yd,t("(): "),n(o,{to:"/api/classes/purista_core.FunctionDefinitionBuilder.html"},{default:s(()=>[$d]),_:1}),t("<"),ec,t(", "),tc,t(", "),nc,t(", "),oc,t(", "),sc,t(", "),lc,t(", "),ic,t(">")]),ac,dc,e("p",null,[n(o,{to:"/api/classes/purista_core.FunctionDefinitionBuilder.html"},{default:s(()=>[cc]),_:1}),t("<"),rc,t(", "),uc,t(", "),hc,t(", "),_c,t(", "),pc,t(", "),fc,t(", "),yc,t(">")]),mc,gc,e("p",null,[e("a",bc,[t("core/src/helper/FunctionDefinitionBuilder.impl.ts:326"),n(l)])]),Tc,xc,e("p",null,[t("\u25B8 "),Fc,t("(..."),Pc,t("): "),n(o,{to:"/api/classes/purista_core.FunctionDefinitionBuilder.html"},{default:s(()=>[Dc]),_:1}),t("<"),Bc,t(", "),kc,t(", "),vc,t(", "),Mc,t(", "),Sc,t(", "),Rc,t(", "),Cc,t(">")]),wc,Ic,e("table",null,[Oc,e("tbody",null,[e("tr",null,[Lc,e("td",Nc,[n(o,{to:"/api/modules/purista_core.html#afterguardhook"},{default:s(()=>[Hc]),_:1}),t("<"),Ac,t(", "),Zc,t(", "),Ec,t(", "),qc,t(">[]")]),Gc])])]),Qc,e("p",null,[n(o,{to:"/api/classes/purista_core.FunctionDefinitionBuilder.html"},{default:s(()=>[Wc]),_:1}),t("<"),Vc,t(", "),jc,t(", "),Uc,t(", "),zc,t(", "),Jc,t(", "),Kc,t(", "),Xc,t(">")]),Yc,$c,e("p",null,[e("a",er,[t("core/src/helper/FunctionDefinitionBuilder.impl.ts:307"),n(l)])]),tr,nr,e("p",null,[t("\u25B8 "),or,t("(..."),sr,t("): "),n(o,{to:"/api/classes/purista_core.FunctionDefinitionBuilder.html"},{default:s(()=>[lr]),_:1}),t("<"),ir,t(", "),ar,t(", "),dr,t(", "),cr,t(", "),rr,t(", "),ur,t(", "),hr,t(">")]),_r,pr,e("table",null,[fr,e("tbody",null,[e("tr",null,[yr,e("td",mr,[n(o,{to:"/api/modules/purista_core.html#beforeguardhook"},{default:s(()=>[gr]),_:1}),t("<"),br,t(", "),Tr,t(", "),xr,t(", "),Fr,t(", "),Pr,t(">[]")]),Dr])])]),Br,e("p",null,[n(o,{to:"/api/classes/purista_core.FunctionDefinitionBuilder.html"},{default:s(()=>[kr]),_:1}),t("<"),vr,t(", "),Mr,t(", "),Sr,t(", "),Rr,t(", "),Cr,t(", "),wr,t(", "),Ir,t(">")]),Or,Lr,e("p",null,[e("a",Nr,[t("core/src/helper/FunctionDefinitionBuilder.impl.ts:288"),n(l)])]),Hr,Ar,e("p",null,[t("\u25B8 "),Zr,t("("),Er,t("): "),n(o,{to:"/api/classes/purista_core.FunctionDefinitionBuilder.html"},{default:s(()=>[qr]),_:1}),t("<"),Gr,t(", "),Qr,t(", "),Wr,t(", "),Vr,t(", "),jr,t(", "),Ur,t(", "),zr,t(">")]),Jr,e("table",null,[Kr,e("tbody",null,[e("tr",null,[Xr,e("td",Yr,[n(o,{to:"/api/modules/purista_core.html#commandfunction"},{default:s(()=>[$r]),_:1}),t("<"),eu,t(", "),tu,t(", "),nu,t(", "),ou,t(", "),su,t(", "),lu,t(">")]),iu])])]),au,e("p",null,[n(o,{to:"/api/classes/purista_core.FunctionDefinitionBuilder.html"},{default:s(()=>[du]),_:1}),t("<"),cu,t(", "),ru,t(", "),uu,t(", "),hu,t(", "),_u,t(", "),pu,t(", "),fu,t(">")]),yu,mu,e("p",null,[e("a",gu,[t("core/src/helper/FunctionDefinitionBuilder.impl.ts:499"),n(l)])]),bu,Tu,e("p",null,[t("\u25B8 "),xu,t("("),Fu,t("): "),n(o,{to:"/api/classes/purista_core.FunctionDefinitionBuilder.html"},{default:s(()=>[Pu]),_:1}),t("<"),Du,t(", "),Bu,t(", "),ku,t(", "),vu,t(", "),Mu,t(", "),Su,t(", "),Ru,t(">")]),Cu,e("p",null,[n(o,{to:"/api/classes/purista_core.FunctionDefinitionBuilder.html"},{default:s(()=>[wu]),_:1}),t("<"),Iu,t(", "),Ou,t(", "),Lu,t(", "),Nu,t(", "),Hu,t(", "),Au,t(", "),Zu,t(">")]),Eu,e("p",null,[e("a",qu,[t("core/src/helper/FunctionDefinitionBuilder.impl.ts:91"),n(l)])]),Gu,Qu,e("p",null,[t("\u25B8 "),Wu,t("("),Vu,t("): "),n(o,{to:"/api/classes/purista_core.FunctionDefinitionBuilder.html"},{default:s(()=>[ju]),_:1}),t("<"),Uu,t(", "),zu,t(", "),Ju,t(", "),Ku,t(", "),Xu,t(", "),Yu,t(", "),$u,t(">")]),eh,e("p",null,[n(o,{to:"/api/classes/purista_core.FunctionDefinitionBuilder.html"},{default:s(()=>[th]),_:1}),t("<"),nh,t(", "),oh,t(", "),sh,t(", "),lh,t(", "),ih,t(", "),ah,t(", "),dh,t(">")]),ch,rh,e("p",null,[e("a",uh,[t("core/src/helper/FunctionDefinitionBuilder.impl.ts:381"),n(l)])]),hh,_h,e("p",null,[t("\u25B8 "),ph,t("<"),fh,t(", "),yh,t(", "),mh,t(", "),gh,t(", "),bh,t(", "),Th,t(">("),xh,t(", "),Fh,t(", "),Ph,t("): "),n(o,{to:"/api/classes/purista_core.FunctionDefinitionBuilder.html"},{default:s(()=>[Dh]),_:1}),t("<"),Bh,t(", "),kh,t(", "),vh,t(", "),Mh,t(", "),Sh,t(", "),Rh,t(", "),Ch,t(">")]),wh,e("table",null,[Ih,e("tbody",null,[Oh,Lh,e("tr",null,[Nh,e("td",Hh,[n(o,{to:"/api/modules/purista_core.html#transforminputhook"},{default:s(()=>[Ah]),_:1}),t("<"),Zh,t(", "),Eh,t(", "),qh,t(", "),Gh,t(", "),Qh,t(">")])])])]),Wh,e("p",null,[n(o,{to:"/api/classes/purista_core.FunctionDefinitionBuilder.html"},{default:s(()=>[Vh]),_:1}),t("<"),jh,t(", "),Uh,t(", "),zh,t(", "),Jh,t(", "),Kh,t(", "),Xh,t(", "),Yh,t(">")]),$h,e_,e("p",null,[e("a",t_,[t("core/src/helper/FunctionDefinitionBuilder.impl.ts:222"),n(l)])]),n_,o_,e("p",null,[t("\u25B8 "),s_,t("<"),l_,t(", "),i_,t(", "),a_,t(">("),d_,t(", "),c_,t("): "),n(o,{to:"/api/classes/purista_core.FunctionDefinitionBuilder.html"},{default:s(()=>[r_]),_:1}),t("<"),u_,t(", "),h_,t(", "),__,t(", "),p_,t(", "),f_,t(", "),y_,t(", "),m_,t(">")]),g_,e("table",null,[b_,e("tbody",null,[T_,e("tr",null,[x_,e("td",F_,[n(o,{to:"/api/modules/purista_core.html#transformoutputhook"},{default:s(()=>[P_]),_:1}),t("<"),D_,t(", "),B_,t(", "),k_,t(", "),v_,t(", "),M_,t(">")])])])]),S_,e("p",null,[n(o,{to:"/api/classes/purista_core.FunctionDefinitionBuilder.html"},{default:s(()=>[R_]),_:1}),t("<"),C_,t(", "),w_,t(", "),I_,t(", "),O_,t(", "),L_,t(", "),N_,t(", "),H_,t(">")]),A_,Z_,e("p",null,[e("a",E_,[t("core/src/helper/FunctionDefinitionBuilder.impl.ts:257"),n(l)])])])}const j_=d(u,[["render",q_],["__file","purista_core.FunctionDefinitionBuilder.html.vue"]]);export{j_ as default};
