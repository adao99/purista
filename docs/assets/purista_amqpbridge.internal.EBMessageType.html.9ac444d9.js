import{_ as s}from"./_plugin-vue_export-helper.cdc0426e.js";import{o,c as d,b as n,e as a,w as r,d as e,a as t,r as c}from"./app.520110ff.js";const h={},p=n("h1",{id:"enumeration-ebmessagetype",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#enumeration-ebmessagetype","aria-hidden":"true"},"#"),e(" Enumeration: EBMessageType")],-1),u=n("p",null,"Type of event bridge message",-1),m=n("h2",{id:"table-of-contents",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#table-of-contents","aria-hidden":"true"},"#"),e(" Table of contents")],-1),f=n("h3",{id:"enumeration-members",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#enumeration-members","aria-hidden":"true"},"#"),e(" Enumeration Members")],-1),l=t('<h2 id="enumeration-members-1" tabindex="-1"><a class="header-anchor" href="#enumeration-members-1" aria-hidden="true">#</a> Enumeration Members</h2><h3 id="command" tabindex="-1"><a class="header-anchor" href="#command" aria-hidden="true">#</a> Command</h3><p>\u2022 <strong>Command</strong> = <code>&quot;command&quot;</code></p><p>Command message type: Message which is sent from a single sender to exactly one single receiver. The sender expects a answer response from receiver within a specific time frame (ttl). If the sender does not receive a answer within this time frame, the command will be rejected with timeout error.</p><h4 id="defined-in" tabindex="-1"><a class="header-anchor" href="#defined-in" aria-hidden="true">#</a> Defined in</h4><p>core/lib/types/core/types/EBMessageType.enum.d.ts:11</p><hr><h3 id="commanderrorresponse" tabindex="-1"><a class="header-anchor" href="#commanderrorresponse" aria-hidden="true">#</a> CommandErrorResponse</h3><p>\u2022 <strong>CommandErrorResponse</strong> = <code>&quot;commandErrorResponse&quot;</code></p><h4 id="defined-in-1" tabindex="-1"><a class="header-anchor" href="#defined-in-1" aria-hidden="true">#</a> Defined in</h4><p>core/lib/types/core/types/EBMessageType.enum.d.ts:13</p><hr><h3 id="commandsuccessresponse" tabindex="-1"><a class="header-anchor" href="#commandsuccessresponse" aria-hidden="true">#</a> CommandSuccessResponse</h3><p>\u2022 <strong>CommandSuccessResponse</strong> = <code>&quot;commandSuccessResponse&quot;</code></p><h4 id="defined-in-2" tabindex="-1"><a class="header-anchor" href="#defined-in-2" aria-hidden="true">#</a> Defined in</h4><p>core/lib/types/core/types/EBMessageType.enum.d.ts:12</p><hr><h3 id="custommessage" tabindex="-1"><a class="header-anchor" href="#custommessage" aria-hidden="true">#</a> CustomMessage</h3><p>\u2022 <strong>CustomMessage</strong> = <code>&quot;customMessage&quot;</code></p><h4 id="defined-in-3" tabindex="-1"><a class="header-anchor" href="#defined-in-3" aria-hidden="true">#</a> Defined in</h4><p>core/lib/types/core/types/EBMessageType.enum.d.ts:28</p><hr><h3 id="infoinvoketimeout" tabindex="-1"><a class="header-anchor" href="#infoinvoketimeout" aria-hidden="true">#</a> InfoInvokeTimeout</h3><p>\u2022 <strong>InfoInvokeTimeout</strong> = <code>&quot;infoInvokeTimeout&quot;</code></p><h4 id="defined-in-4" tabindex="-1"><a class="header-anchor" href="#defined-in-4" aria-hidden="true">#</a> Defined in</h4><p>core/lib/types/core/types/EBMessageType.enum.d.ts:26</p><hr><h3 id="infoservicedrain" tabindex="-1"><a class="header-anchor" href="#infoservicedrain" aria-hidden="true">#</a> InfoServiceDrain</h3><p>\u2022 <strong>InfoServiceDrain</strong> = <code>&quot;infoServiceDrain&quot;</code></p><h4 id="defined-in-5" tabindex="-1"><a class="header-anchor" href="#defined-in-5" aria-hidden="true">#</a> Defined in</h4><p>core/lib/types/core/types/EBMessageType.enum.d.ts:24</p><hr><h3 id="infoservicefunctionadded" tabindex="-1"><a class="header-anchor" href="#infoservicefunctionadded" aria-hidden="true">#</a> InfoServiceFunctionAdded</h3><p>\u2022 <strong>InfoServiceFunctionAdded</strong> = <code>&quot;infoServiceFunctionAdded&quot;</code></p><h4 id="defined-in-6" tabindex="-1"><a class="header-anchor" href="#defined-in-6" aria-hidden="true">#</a> Defined in</h4><p>core/lib/types/core/types/EBMessageType.enum.d.ts:23</p><hr><h3 id="infoserviceinit" tabindex="-1"><a class="header-anchor" href="#infoserviceinit" aria-hidden="true">#</a> InfoServiceInit</h3><p>\u2022 <strong>InfoServiceInit</strong> = <code>&quot;infoServiceInit&quot;</code></p><p>Info message type: Message which is sent from a single sender to unspecified receivers. The sender does not expect any answer to this message and does not process any reply to this message. Info messages are fire &amp; forget broadcasting messages.</p><h4 id="defined-in-7" tabindex="-1"><a class="header-anchor" href="#defined-in-7" aria-hidden="true">#</a> Defined in</h4><p>core/lib/types/core/types/EBMessageType.enum.d.ts:20</p><hr><h3 id="infoservicenotready" tabindex="-1"><a class="header-anchor" href="#infoservicenotready" aria-hidden="true">#</a> InfoServiceNotReady</h3><p>\u2022 <strong>InfoServiceNotReady</strong> = <code>&quot;infoServiceNotReady&quot;</code></p><h4 id="defined-in-8" tabindex="-1"><a class="header-anchor" href="#defined-in-8" aria-hidden="true">#</a> Defined in</h4><p>core/lib/types/core/types/EBMessageType.enum.d.ts:22</p><hr><h3 id="infoserviceready" tabindex="-1"><a class="header-anchor" href="#infoserviceready" aria-hidden="true">#</a> InfoServiceReady</h3><p>\u2022 <strong>InfoServiceReady</strong> = <code>&quot;infoServiceReady&quot;</code></p><h4 id="defined-in-9" tabindex="-1"><a class="header-anchor" href="#defined-in-9" aria-hidden="true">#</a> Defined in</h4><p>core/lib/types/core/types/EBMessageType.enum.d.ts:21</p><hr><h3 id="infoserviceshutdown" tabindex="-1"><a class="header-anchor" href="#infoserviceshutdown" aria-hidden="true">#</a> InfoServiceShutdown</h3><p>\u2022 <strong>InfoServiceShutdown</strong> = <code>&quot;infoServiceShutdown&quot;</code></p><h4 id="defined-in-10" tabindex="-1"><a class="header-anchor" href="#defined-in-10" aria-hidden="true">#</a> Defined in</h4><p>core/lib/types/core/types/EBMessageType.enum.d.ts:25</p><hr><h3 id="infosubscriptionerror" tabindex="-1"><a class="header-anchor" href="#infosubscriptionerror" aria-hidden="true">#</a> InfoSubscriptionError</h3><p>\u2022 <strong>InfoSubscriptionError</strong> = <code>&quot;infoSubscriptionError&quot;</code></p><h4 id="defined-in-11" tabindex="-1"><a class="header-anchor" href="#defined-in-11" aria-hidden="true">#</a> Defined in</h4><p>core/lib/types/core/types/EBMessageType.enum.d.ts:27</p>',62);function g(b,y){const i=c("RouterLink");return o(),d("div",null,[n("p",null,[a(i,{to:"/api/"},{default:r(()=>[e("PURISTA API - v1.4.3")]),_:1}),e(" / "),a(i,{to:"/api/modules/purista_amqpbridge.html"},{default:r(()=>[e("@purista/amqpbridge")]),_:1}),e(" / "),a(i,{to:"/api/modules/purista_amqpbridge.internal.html"},{default:r(()=>[e("internal")]),_:1}),e(" / EBMessageType")]),p,n("p",null,[a(i,{to:"/api/modules/purista_amqpbridge.html"},{default:r(()=>[e("@purista/amqpbridge")]),_:1}),e("."),a(i,{to:"/api/modules/purista_amqpbridge.internal.html"},{default:r(()=>[e("internal")]),_:1}),e(".EBMessageType")]),u,m,f,n("ul",null,[n("li",null,[a(i,{to:"/api/enums/purista_amqpbridge.internal.EBMessageType.html#command"},{default:r(()=>[e("Command")]),_:1})]),n("li",null,[a(i,{to:"/api/enums/purista_amqpbridge.internal.EBMessageType.html#commanderrorresponse"},{default:r(()=>[e("CommandErrorResponse")]),_:1})]),n("li",null,[a(i,{to:"/api/enums/purista_amqpbridge.internal.EBMessageType.html#commandsuccessresponse"},{default:r(()=>[e("CommandSuccessResponse")]),_:1})]),n("li",null,[a(i,{to:"/api/enums/purista_amqpbridge.internal.EBMessageType.html#custommessage"},{default:r(()=>[e("CustomMessage")]),_:1})]),n("li",null,[a(i,{to:"/api/enums/purista_amqpbridge.internal.EBMessageType.html#infoinvoketimeout"},{default:r(()=>[e("InfoInvokeTimeout")]),_:1})]),n("li",null,[a(i,{to:"/api/enums/purista_amqpbridge.internal.EBMessageType.html#infoservicedrain"},{default:r(()=>[e("InfoServiceDrain")]),_:1})]),n("li",null,[a(i,{to:"/api/enums/purista_amqpbridge.internal.EBMessageType.html#infoservicefunctionadded"},{default:r(()=>[e("InfoServiceFunctionAdded")]),_:1})]),n("li",null,[a(i,{to:"/api/enums/purista_amqpbridge.internal.EBMessageType.html#infoserviceinit"},{default:r(()=>[e("InfoServiceInit")]),_:1})]),n("li",null,[a(i,{to:"/api/enums/purista_amqpbridge.internal.EBMessageType.html#infoservicenotready"},{default:r(()=>[e("InfoServiceNotReady")]),_:1})]),n("li",null,[a(i,{to:"/api/enums/purista_amqpbridge.internal.EBMessageType.html#infoserviceready"},{default:r(()=>[e("InfoServiceReady")]),_:1})]),n("li",null,[a(i,{to:"/api/enums/purista_amqpbridge.internal.EBMessageType.html#infoserviceshutdown"},{default:r(()=>[e("InfoServiceShutdown")]),_:1})]),n("li",null,[a(i,{to:"/api/enums/purista_amqpbridge.internal.EBMessageType.html#infosubscriptionerror"},{default:r(()=>[e("InfoSubscriptionError")]),_:1})])]),l])}const q=s(h,[["render",g],["__file","purista_amqpbridge.internal.EBMessageType.html.vue"]]);export{q as default};
