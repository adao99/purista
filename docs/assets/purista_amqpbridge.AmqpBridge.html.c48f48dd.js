import{_ as r}from"./plugin-vue_export-helper.21dcd24c.js";import{o as l,c,b as e,e as s,w as d,d as t,a as o,r as a}from"./app.a8dcba40.js";const h={},_=t("PURISTA API - v1.4.3"),u=t(" / "),p=t("@purista/amqpbridge"),m=t(" / AmqpBridge"),g=e("h1",{id:"class-amqpbridge",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#class-amqpbridge","aria-hidden":"true"},"#"),t(" Class: AmqpBridge")],-1),f=t("@purista/amqpbridge"),b=t(".AmqpBridge"),q=e("p",null,"A adapter to use rabbitMQ as event bridge.",-1),x=e("h2",{id:"hierarchy",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#hierarchy","aria-hidden":"true"},"#"),t(" Hierarchy")],-1),y=e("code",null,"EventBridge",-1),v=e("p",null,[t("\u21B3 "),e("strong",null,[e("code",null,"AmqpBridge")])],-1),B=e("h2",{id:"table-of-contents",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#table-of-contents","aria-hidden":"true"},"#"),t(" Table of contents")],-1),A=e("h3",{id:"constructors",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#constructors","aria-hidden":"true"},"#"),t(" Constructors")],-1),E=t("constructor"),k=e("h3",{id:"properties",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#properties","aria-hidden":"true"},"#"),t(" Properties")],-1),T=t("channel"),P=t("config"),w=t("connection"),L=t("encoder"),N=t("encrypter"),C=t("log"),D=t("pendingInvocations"),R=t("replyQueueName"),S=t("serviceFunctions"),I=t("subscriptions"),M=e("h3",{id:"accessors",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#accessors","aria-hidden":"true"},"#"),t(" Accessors")],-1),K=t("defaultCommandTimeout"),O=t("instanceId"),F=e("h3",{id:"methods",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#methods","aria-hidden":"true"},"#"),t(" Methods")],-1),G=t("decodeContent"),Q=t("emit"),V=t("emitMessage"),j=t("encodeContent"),H=t("invoke"),U=t("off"),z=t("on"),J=t("registerServiceFunction"),W=t("registerSubscription"),X=t("start"),Y=t("unregisterServiceFunction"),Z=t("unregisterSubscription"),$=o('<h2 id="constructors-1" tabindex="-1"><a class="header-anchor" href="#constructors-1" aria-hidden="true">#</a> Constructors</h2><h3 id="constructor" tabindex="-1"><a class="header-anchor" href="#constructor" aria-hidden="true">#</a> constructor</h3><p>\u2022 <strong>new AmqpBridge</strong>(<code>baseLogger</code>, <code>conf?</code>)</p><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h4>',4),ee=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),te=e("td",{style:{"text-align":"left"}},[e("code",null,"baseLogger")],-1),se={style:{"text-align":"left"}},ne=e("code",null,"Logger",-1),de=e("td",{style:{"text-align":"left"}},[e("code",null,"conf")],-1),ie={style:{"text-align":"left"}},oe=e("code",null,"AmqpBridgeConfig",-1),ae=e("h4",{id:"overrides",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#overrides","aria-hidden":"true"},"#"),t(" Overrides")],-1),re=t("EventBridge"),le=t("."),ce=t("constructor"),he=e("h4",{id:"defined-in",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in","aria-hidden":"true"},"#"),t(" Defined in")],-1),_e={href:"https://github.com/sebastianwessel/purista/blob/c89c5bf/packages/amqpbridge/src/AmqpBridge.impl.ts#L73",target:"_blank",rel:"noopener noreferrer"},ue=t("amqpbridge/src/AmqpBridge.impl.ts:73"),pe=o('<h2 id="properties-1" tabindex="-1"><a class="header-anchor" href="#properties-1" aria-hidden="true">#</a> Properties</h2><h3 id="channel" tabindex="-1"><a class="header-anchor" href="#channel" aria-hidden="true">#</a> channel</h3><p>\u2022 <code>Protected</code> <code>Optional</code> <strong>channel</strong>: <code>Channel</code></p><h4 id="defined-in-1" tabindex="-1"><a class="header-anchor" href="#defined-in-1" aria-hidden="true">#</a> Defined in</h4>',4),me={href:"https://github.com/sebastianwessel/purista/blob/c89c5bf/packages/amqpbridge/src/AmqpBridge.impl.ts#L44",target:"_blank",rel:"noopener noreferrer"},ge=t("amqpbridge/src/AmqpBridge.impl.ts:44"),fe=e("hr",null,null,-1),be=e("h3",{id:"config",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#config","aria-hidden":"true"},"#"),t(" config")],-1),qe=t("\u2022 "),xe=e("code",null,"Protected",-1),ye=t(),ve=e("strong",null,"config",-1),Be=t(": "),Ae=e("code",null,"AmqpBridgeConfig",-1),Ee=e("h4",{id:"defined-in-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-2","aria-hidden":"true"},"#"),t(" Defined in")],-1),ke={href:"https://github.com/sebastianwessel/purista/blob/c89c5bf/packages/amqpbridge/src/AmqpBridge.impl.ts#L42",target:"_blank",rel:"noopener noreferrer"},Te=t("amqpbridge/src/AmqpBridge.impl.ts:42"),Pe=o('<hr><h3 id="connection" tabindex="-1"><a class="header-anchor" href="#connection" aria-hidden="true">#</a> connection</h3><p>\u2022 <code>Protected</code> <code>Optional</code> <strong>connection</strong>: <code>Connection</code></p><h4 id="defined-in-3" tabindex="-1"><a class="header-anchor" href="#defined-in-3" aria-hidden="true">#</a> Defined in</h4>',4),we={href:"https://github.com/sebastianwessel/purista/blob/c89c5bf/packages/amqpbridge/src/AmqpBridge.impl.ts#L43",target:"_blank",rel:"noopener noreferrer"},Le=t("amqpbridge/src/AmqpBridge.impl.ts:43"),Ne=e("hr",null,null,-1),Ce=e("h3",{id:"encoder",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#encoder","aria-hidden":"true"},"#"),t(" encoder")],-1),De=t("\u2022 "),Re=e("code",null,"Protected",-1),Se=t(),Ie=e("strong",null,"encoder",-1),Me=t(": "),Ke=e("code",null,"Encoder",-1),Oe=e("h4",{id:"defined-in-4",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-4","aria-hidden":"true"},"#"),t(" Defined in")],-1),Fe={href:"https://github.com/sebastianwessel/purista/blob/c89c5bf/packages/amqpbridge/src/AmqpBridge.impl.ts#L65",target:"_blank",rel:"noopener noreferrer"},Ge=t("amqpbridge/src/AmqpBridge.impl.ts:65"),Qe=e("hr",null,null,-1),Ve=e("h3",{id:"encrypter",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#encrypter","aria-hidden":"true"},"#"),t(" encrypter")],-1),je=t("\u2022 "),He=e("code",null,"Protected",-1),Ue=t(),ze=e("strong",null,"encrypter",-1),Je=t(": "),We=e("code",null,"Encrypter",-1),Xe=e("h4",{id:"defined-in-5",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-5","aria-hidden":"true"},"#"),t(" Defined in")],-1),Ye={href:"https://github.com/sebastianwessel/purista/blob/c89c5bf/packages/amqpbridge/src/AmqpBridge.impl.ts#L69",target:"_blank",rel:"noopener noreferrer"},Ze=t("amqpbridge/src/AmqpBridge.impl.ts:69"),$e=e("hr",null,null,-1),et=e("h3",{id:"log",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#log","aria-hidden":"true"},"#"),t(" log")],-1),tt=t("\u2022 "),st=e("code",null,"Protected",-1),nt=t(),dt=e("strong",null,"log",-1),it=t(": "),ot=e("code",null,"Logger",-1),at=e("h4",{id:"defined-in-6",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-6","aria-hidden":"true"},"#"),t(" Defined in")],-1),rt={href:"https://github.com/sebastianwessel/purista/blob/c89c5bf/packages/amqpbridge/src/AmqpBridge.impl.ts#L41",target:"_blank",rel:"noopener noreferrer"},lt=t("amqpbridge/src/AmqpBridge.impl.ts:41"),ct=e("hr",null,null,-1),ht=e("h3",{id:"pendinginvocations",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#pendinginvocations","aria-hidden":"true"},"#"),t(" pendingInvocations")],-1),_t=t("\u2022 "),ut=e("code",null,"Protected",-1),pt=t(),mt=e("strong",null,"pendingInvocations",-1),gt=t(": "),ft=e("code",null,"Map",-1),bt=t("<"),qt=e("code",null,"string",-1),xt=t(", "),yt=e("code",null,"PendigInvocation",-1),vt=t(">"),Bt=e("h4",{id:"defined-in-7",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-7","aria-hidden":"true"},"#"),t(" Defined in")],-1),At={href:"https://github.com/sebastianwessel/purista/blob/c89c5bf/packages/amqpbridge/src/AmqpBridge.impl.ts#L55",target:"_blank",rel:"noopener noreferrer"},Et=t("amqpbridge/src/AmqpBridge.impl.ts:55"),kt=o('<hr><h3 id="replyqueuename" tabindex="-1"><a class="header-anchor" href="#replyqueuename" aria-hidden="true">#</a> replyQueueName</h3><p>\u2022 <code>Protected</code> <code>Optional</code> <strong>replyQueueName</strong>: <code>string</code></p><h4 id="defined-in-8" tabindex="-1"><a class="header-anchor" href="#defined-in-8" aria-hidden="true">#</a> Defined in</h4>',4),Tt={href:"https://github.com/sebastianwessel/purista/blob/c89c5bf/packages/amqpbridge/src/AmqpBridge.impl.ts#L46",target:"_blank",rel:"noopener noreferrer"},Pt=t("amqpbridge/src/AmqpBridge.impl.ts:46"),wt=e("hr",null,null,-1),Lt=e("h3",{id:"servicefunctions",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#servicefunctions","aria-hidden":"true"},"#"),t(" serviceFunctions")],-1),Nt=t("\u2022 "),Ct=e("code",null,"Protected",-1),Dt=t(),Rt=e("strong",null,"serviceFunctions",-1),St=t(": "),It=e("code",null,"Map",-1),Mt=t("<"),Kt=e("code",null,"string",-1),Ot=t(", { "),Ft=e("code",null,"cb",-1),Gt=t(": ("),Qt=e("code",null,"message",-1),Vt=t(": "),jt=e("code",null,"Command",-1),Ht=t("<"),Ut=e("code",null,"unknown",-1),zt=t(", "),Jt=e("code",null,"unknown",-1),Wt=t(">) => "),Xt=e("code",null,"Promise",-1),Yt=t("<"),Zt=e("code",null,"CommandErrorResponse",-1),$t=t(" | "),es=e("code",null,"CommandSuccessResponse",-1),ts=t("<"),ss=e("code",null,"unknown",-1),ns=t(">> ; "),ds=e("code",null,"channel",-1),is=t(": "),os=e("code",null,"Channel",-1),as=t(" }>"),rs=e("h4",{id:"defined-in-9",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-9","aria-hidden":"true"},"#"),t(" Defined in")],-1),ls={href:"https://github.com/sebastianwessel/purista/blob/c89c5bf/packages/amqpbridge/src/AmqpBridge.impl.ts#L47",target:"_blank",rel:"noopener noreferrer"},cs=t("amqpbridge/src/AmqpBridge.impl.ts:47"),hs=e("hr",null,null,-1),_s=e("h3",{id:"subscriptions",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#subscriptions","aria-hidden":"true"},"#"),t(" subscriptions")],-1),us=t("\u2022 "),ps=e("code",null,"Protected",-1),ms=t(),gs=e("strong",null,"subscriptions",-1),fs=t(": "),bs=e("code",null,"Map",-1),qs=t("<"),xs=e("code",null,"string",-1),ys=t(", { "),vs=e("code",null,"cb",-1),Bs=t(": ("),As=e("code",null,"message",-1),Es=t(": "),ks=e("code",null,"Command",-1),Ts=t("<"),Ps=e("code",null,"unknown",-1),ws=t(", "),Ls=e("code",null,"unknown",-1),Ns=t(">) => "),Cs=e("code",null,"Promise",-1),Ds=t("<"),Rs=e("code",null,"void",-1),Ss=t("> ; "),Is=e("code",null,"channel",-1),Ms=t(": "),Ks=e("code",null,"Channel",-1),Os=t(" }>"),Fs=e("h4",{id:"defined-in-10",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-10","aria-hidden":"true"},"#"),t(" Defined in")],-1),Gs={href:"https://github.com/sebastianwessel/purista/blob/c89c5bf/packages/amqpbridge/src/AmqpBridge.impl.ts#L57",target:"_blank",rel:"noopener noreferrer"},Qs=t("amqpbridge/src/AmqpBridge.impl.ts:57"),Vs=o('<h2 id="accessors-1" tabindex="-1"><a class="header-anchor" href="#accessors-1" aria-hidden="true">#</a> Accessors</h2><h3 id="defaultcommandtimeout" tabindex="-1"><a class="header-anchor" href="#defaultcommandtimeout" aria-hidden="true">#</a> defaultCommandTimeout</h3><p>\u2022 <code>get</code> <strong>defaultCommandTimeout</strong>(): <code>number</code></p><p>Get default time out. It is the maximum time a command should be responded.</p><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns" aria-hidden="true">#</a> Returns</h4><p><code>number</code></p><h4 id="overrides-1" tabindex="-1"><a class="header-anchor" href="#overrides-1" aria-hidden="true">#</a> Overrides</h4><p>EventBridge.defaultCommandTimeout</p><h4 id="defined-in-11" tabindex="-1"><a class="header-anchor" href="#defined-in-11" aria-hidden="true">#</a> Defined in</h4>',9),js={href:"https://github.com/sebastianwessel/purista/blob/c89c5bf/packages/amqpbridge/src/AmqpBridge.impl.ts#L96",target:"_blank",rel:"noopener noreferrer"},Hs=t("amqpbridge/src/AmqpBridge.impl.ts:96"),Us=o('<hr><h3 id="instanceid" tabindex="-1"><a class="header-anchor" href="#instanceid" aria-hidden="true">#</a> instanceId</h3><p>\u2022 <code>get</code> <strong>instanceId</strong>(): <code>string</code></p><p>Get instance id. The id of current event bridge instance.</p><h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1" aria-hidden="true">#</a> Returns</h4><p><code>string</code></p><h4 id="defined-in-12" tabindex="-1"><a class="header-anchor" href="#defined-in-12" aria-hidden="true">#</a> Defined in</h4>',7),zs={href:"https://github.com/sebastianwessel/purista/blob/c89c5bf/packages/amqpbridge/src/AmqpBridge.impl.ts#L104",target:"_blank",rel:"noopener noreferrer"},Js=t("amqpbridge/src/AmqpBridge.impl.ts:104"),Ws=o('<h2 id="methods-1" tabindex="-1"><a class="header-anchor" href="#methods-1" aria-hidden="true">#</a> Methods</h2><h3 id="decodecontent" tabindex="-1"><a class="header-anchor" href="#decodecontent" aria-hidden="true">#</a> decodeContent</h3><p>\u25B8 <code>Protected</code> <strong>decodeContent</strong>&lt;<code>T</code>&gt;(<code>input</code>, <code>contentType</code>, <code>contentEncoding</code>): <code>Promise</code>&lt;<code>T</code>&gt;</p><p>Decode buffer into given type</p><h4 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td></tr></tbody></table><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>input</code></td><td style="text-align:left;"><code>Buffer</code></td></tr><tr><td style="text-align:left;"><code>contentType</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>contentEncoding</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h4 id="returns-2" tabindex="-1"><a class="header-anchor" href="#returns-2" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>T</code>&gt;</p><h4 id="defined-in-13" tabindex="-1"><a class="header-anchor" href="#defined-in-13" aria-hidden="true">#</a> Defined in</h4>',11),Xs={href:"https://github.com/sebastianwessel/purista/blob/c89c5bf/packages/amqpbridge/src/AmqpBridge.impl.ts#L549",target:"_blank",rel:"noopener noreferrer"},Ys=t("amqpbridge/src/AmqpBridge.impl.ts:549"),Zs=o('<hr><h3 id="emit" tabindex="-1"><a class="header-anchor" href="#emit" aria-hidden="true">#</a> emit</h3><p>\u25B8 <strong>emit</strong>&lt;<code>K</code>&gt;(<code>eventName</code>, <code>params</code>): <code>void</code></p><h4 id="type-parameters-1" tabindex="-1"><a class="header-anchor" href="#type-parameters-1" aria-hidden="true">#</a> Type parameters</h4>',4),$s=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),en=e("td",{style:{"text-align":"left"}},[e("code",null,"K")],-1),tn={style:{"text-align":"left"}},sn=t("extends "),nn=e("code",null,"EventKey",-1),dn=t("<"),on=e("code",null,"EventBridgeEvents",-1),an=t(">"),rn=e("h4",{id:"parameters-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-2","aria-hidden":"true"},"#"),t(" Parameters")],-1),ln=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),cn=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"eventName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"K")])],-1),hn=e("td",{style:{"text-align":"left"}},[e("code",null,"params")],-1),_n={style:{"text-align":"left"}},un=e("code",null,"EventBridgeEvents",-1),pn=t("["),mn=e("code",null,"K",-1),gn=t("]"),fn=e("h4",{id:"returns-3",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-3","aria-hidden":"true"},"#"),t(" Returns")],-1),bn=e("p",null,[e("code",null,"void")],-1),qn=e("h4",{id:"inherited-from",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#inherited-from","aria-hidden":"true"},"#"),t(" Inherited from")],-1),xn=t("EventBridge"),yn=t("."),vn=t("emit"),Bn=e("h4",{id:"defined-in-14",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-14","aria-hidden":"true"},"#"),t(" Defined in")],-1),An=e("p",null,"core/lib/types/core/types/GenericEventEmitter.d.ts:13",-1),En=e("hr",null,null,-1),kn=e("h3",{id:"emitmessage",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#emitmessage","aria-hidden":"true"},"#"),t(" emitMessage")],-1),Tn=o("\u25B8 <strong>emitMessage</strong>&lt;<code>T</code>&gt;(<code>message</code>, <code>contentType?</code>, <code>contentEncoding?</code>): <code>Promise</code>&lt;<code>Readonly</code>&lt;",15),Pn=e("code",null,"EBMessage",-1),wn=t(">>"),Ln=e("h4",{id:"type-parameters-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-parameters-2","aria-hidden":"true"},"#"),t(" Type parameters")],-1),Nn=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Cn=e("td",{style:{"text-align":"left"}},[e("code",null,"T")],-1),Dn={style:{"text-align":"left"}},Rn=t("extends "),Sn=e("code",null,"EBMessage",-1),In=e("h4",{id:"parameters-3",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-3","aria-hidden":"true"},"#"),t(" Parameters")],-1),Mn=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Default value")])],-1),Kn=e("td",{style:{"text-align":"left"}},[e("code",null,"message")],-1),On={style:{"text-align":"left"}},Fn=e("code",null,"Omit",-1),Gn=t("<"),Qn=e("code",null,"EBMessage",-1),Vn=t(", "),jn=e("code",null,'"id"',-1),Hn=t(" | "),Un=e("code",null,'"timestamp"',-1),zn=t(" | "),Jn=e("code",null,'"instanceId"',-1),Wn=t(" | "),Xn=e("code",null,'"correlationId"',-1),Yn=t(">"),Zn=e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")],-1),$n=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"contentType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},[e("code",null,"'application/json'")])],-1),ed=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"contentEncoding")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},[e("code",null,"'utf-8'")])],-1),td=e("h4",{id:"returns-4",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-4","aria-hidden":"true"},"#"),t(" Returns")],-1),sd=e("code",null,"Promise",-1),nd=t("<"),dd=e("code",null,"Readonly",-1),id=t("<"),od=e("code",null,"EBMessage",-1),ad=t(">>"),rd=e("h4",{id:"overrides-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#overrides-2","aria-hidden":"true"},"#"),t(" Overrides")],-1),ld=t("EventBridge"),cd=t("."),hd=t("emitMessage"),_d=e("h4",{id:"defined-in-15",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-15","aria-hidden":"true"},"#"),t(" Defined in")],-1),ud={href:"https://github.com/sebastianwessel/purista/blob/c89c5bf/packages/amqpbridge/src/AmqpBridge.impl.ts#L196",target:"_blank",rel:"noopener noreferrer"},pd=t("amqpbridge/src/AmqpBridge.impl.ts:196"),md=o('<hr><h3 id="encodecontent" tabindex="-1"><a class="header-anchor" href="#encodecontent" aria-hidden="true">#</a> encodeContent</h3><p>\u25B8 <code>Protected</code> <strong>encodeContent</strong>&lt;<code>T</code>&gt;(<code>input</code>, <code>contentType</code>, <code>contentEncoding</code>): <code>Promise</code>&lt;<code>Buffer</code>&gt;</p><p>Encode given payload to buffer</p><h4 id="type-parameters-3" tabindex="-1"><a class="header-anchor" href="#type-parameters-3" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td></tr></tbody></table><h4 id="parameters-4" tabindex="-1"><a class="header-anchor" href="#parameters-4" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>input</code></td><td style="text-align:left;"><code>T</code></td></tr><tr><td style="text-align:left;"><code>contentType</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>contentEncoding</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h4 id="returns-5" tabindex="-1"><a class="header-anchor" href="#returns-5" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>Buffer</code>&gt;</p><h4 id="defined-in-16" tabindex="-1"><a class="header-anchor" href="#defined-in-16" aria-hidden="true">#</a> Defined in</h4>',11),gd={href:"https://github.com/sebastianwessel/purista/blob/c89c5bf/packages/amqpbridge/src/AmqpBridge.impl.ts#L528",target:"_blank",rel:"noopener noreferrer"},fd=t("amqpbridge/src/AmqpBridge.impl.ts:528"),bd=o('<hr><h3 id="invoke" tabindex="-1"><a class="header-anchor" href="#invoke" aria-hidden="true">#</a> invoke</h3><p>\u25B8 <strong>invoke</strong>&lt;<code>T</code>&gt;(<code>input</code>, <code>contentType?</code>, <code>contentEncoding?</code>, <code>commandTimeout?</code>): <code>Promise</code>&lt;<code>T</code>&gt;</p><h4 id="type-parameters-4" tabindex="-1"><a class="header-anchor" href="#type-parameters-4" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td></tr></tbody></table><h4 id="parameters-5" tabindex="-1"><a class="header-anchor" href="#parameters-5" aria-hidden="true">#</a> Parameters</h4>',6),qd=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Default value")])],-1),xd=e("td",{style:{"text-align":"left"}},[e("code",null,"input")],-1),yd={style:{"text-align":"left"}},vd=e("code",null,"Omit",-1),Bd=t("<"),Ad=e("code",null,"Command",-1),Ed=o("&lt;<code>unknown</code>, <code>unknown</code>&gt;, <code>&quot;id&quot;</code> | <code>&quot;messageType&quot;</code> | <code>&quot;timestamp&quot;</code> | <code>&quot;instanceId&quot;</code> | <code>&quot;correlationId&quot;</code>&gt;",15),kd=e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")],-1),Td=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"contentType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},[e("code",null,"'application/json'")])],-1),Pd=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"contentEncoding")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},[e("code",null,"'utf-8'")])],-1),wd=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandTimeout")]),e("td",{style:{"text-align":"left"}},[e("code",null,"number")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")])],-1),Ld=e("h4",{id:"returns-6",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-6","aria-hidden":"true"},"#"),t(" Returns")],-1),Nd=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"T"),t(">")],-1),Cd=e("h4",{id:"overrides-3",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#overrides-3","aria-hidden":"true"},"#"),t(" Overrides")],-1),Dd=t("EventBridge"),Rd=t("."),Sd=t("invoke"),Id=e("h4",{id:"defined-in-17",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-17","aria-hidden":"true"},"#"),t(" Defined in")],-1),Md={href:"https://github.com/sebastianwessel/purista/blob/c89c5bf/packages/amqpbridge/src/AmqpBridge.impl.ts#L237",target:"_blank",rel:"noopener noreferrer"},Kd=t("amqpbridge/src/AmqpBridge.impl.ts:237"),Od=o('<hr><h3 id="off" tabindex="-1"><a class="header-anchor" href="#off" aria-hidden="true">#</a> off</h3><p>\u25B8 <strong>off</strong>&lt;<code>K</code>&gt;(<code>eventName</code>, <code>fn</code>): <code>void</code></p><h4 id="type-parameters-5" tabindex="-1"><a class="header-anchor" href="#type-parameters-5" aria-hidden="true">#</a> Type parameters</h4>',4),Fd=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Gd=e("td",{style:{"text-align":"left"}},[e("code",null,"K")],-1),Qd={style:{"text-align":"left"}},Vd=t("extends "),jd=e("code",null,"EventKey",-1),Hd=t("<"),Ud=e("code",null,"EventBridgeEvents",-1),zd=t(">"),Jd=e("h4",{id:"parameters-6",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-6","aria-hidden":"true"},"#"),t(" Parameters")],-1),Wd=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Xd=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"eventName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"K")])],-1),Yd=e("td",{style:{"text-align":"left"}},[e("code",null,"fn")],-1),Zd={style:{"text-align":"left"}},$d=e("code",null,"EventReceiver",-1),ei=t("<"),ti=e("code",null,"EventBridgeEvents",-1),si=t("["),ni=e("code",null,"K",-1),di=t("]>"),ii=e("h4",{id:"returns-7",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-7","aria-hidden":"true"},"#"),t(" Returns")],-1),oi=e("p",null,[e("code",null,"void")],-1),ai=e("h4",{id:"inherited-from-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#inherited-from-1","aria-hidden":"true"},"#"),t(" Inherited from")],-1),ri=t("EventBridge"),li=t("."),ci=t("off"),hi=o('<h4 id="defined-in-18" tabindex="-1"><a class="header-anchor" href="#defined-in-18" aria-hidden="true">#</a> Defined in</h4><p>core/lib/types/core/types/GenericEventEmitter.d.ts:12</p><hr><h3 id="on" tabindex="-1"><a class="header-anchor" href="#on" aria-hidden="true">#</a> on</h3><p>\u25B8 <strong>on</strong>&lt;<code>K</code>&gt;(<code>eventName</code>, <code>fn</code>): <code>void</code></p><h4 id="type-parameters-6" tabindex="-1"><a class="header-anchor" href="#type-parameters-6" aria-hidden="true">#</a> Type parameters</h4>',6),_i=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),ui=e("td",{style:{"text-align":"left"}},[e("code",null,"K")],-1),pi={style:{"text-align":"left"}},mi=t("extends "),gi=e("code",null,"EventKey",-1),fi=t("<"),bi=e("code",null,"EventBridgeEvents",-1),qi=t(">"),xi=e("h4",{id:"parameters-7",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-7","aria-hidden":"true"},"#"),t(" Parameters")],-1),yi=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),vi=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"eventName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"K")])],-1),Bi=e("td",{style:{"text-align":"left"}},[e("code",null,"fn")],-1),Ai={style:{"text-align":"left"}},Ei=e("code",null,"EventReceiver",-1),ki=t("<"),Ti=e("code",null,"EventBridgeEvents",-1),Pi=t("["),wi=e("code",null,"K",-1),Li=t("]>"),Ni=e("h4",{id:"returns-8",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-8","aria-hidden":"true"},"#"),t(" Returns")],-1),Ci=e("p",null,[e("code",null,"void")],-1),Di=e("h4",{id:"inherited-from-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#inherited-from-2","aria-hidden":"true"},"#"),t(" Inherited from")],-1),Ri=t("EventBridge"),Si=t("."),Ii=t("on"),Mi=o('<h4 id="defined-in-19" tabindex="-1"><a class="header-anchor" href="#defined-in-19" aria-hidden="true">#</a> Defined in</h4><p>core/lib/types/core/types/GenericEventEmitter.d.ts:11</p><hr><h3 id="registerservicefunction" tabindex="-1"><a class="header-anchor" href="#registerservicefunction" aria-hidden="true">#</a> registerServiceFunction</h3><p>\u25B8 <strong>registerServiceFunction</strong>(<code>address</code>, <code>cb</code>): <code>Promise</code>&lt;<code>string</code>&gt;</p><p>Register a service function and ensure that there is a queue for all incoming command requests.</p><h4 id="parameters-8" tabindex="-1"><a class="header-anchor" href="#parameters-8" aria-hidden="true">#</a> Parameters</h4>',7),Ki=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),Oi=e("td",{style:{"text-align":"left"}},[e("code",null,"address")],-1),Fi={style:{"text-align":"left"}},Gi=e("code",null,"EBMessageAddress",-1),Qi=e("td",{style:{"text-align":"left"}},"The service function address",-1),Vi=e("td",{style:{"text-align":"left"}},[e("code",null,"cb")],-1),ji={style:{"text-align":"left"}},Hi=t("("),Ui=e("code",null,"message",-1),zi=t(": "),Ji=e("code",null,"Command",-1),Wi=t("<"),Xi=e("code",null,"unknown",-1),Yi=t(", "),Zi=e("code",null,"unknown",-1),$i=t(">) => "),eo=e("code",null,"Promise",-1),to=t("<"),so=e("code",null,"CommandErrorResponse",-1),no=t(" | "),io=e("code",null,"CommandSuccessResponse",-1),oo=t("<"),ao=e("code",null,"unknown",-1),ro=t(">>"),lo=e("td",{style:{"text-align":"left"}},"the function to call if a matching command message arrives",-1),co=e("h4",{id:"returns-9",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-9","aria-hidden":"true"},"#"),t(" Returns")],-1),ho=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"string"),t(">")],-1),_o=e("p",null,"the id of command function queue",-1),uo=e("h4",{id:"overrides-4",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#overrides-4","aria-hidden":"true"},"#"),t(" Overrides")],-1),po=t("EventBridge"),mo=t("."),go=t("registerServiceFunction"),fo=e("h4",{id:"defined-in-20",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-20","aria-hidden":"true"},"#"),t(" Defined in")],-1),bo={href:"https://github.com/sebastianwessel/purista/blob/c89c5bf/packages/amqpbridge/src/AmqpBridge.impl.ts#L346",target:"_blank",rel:"noopener noreferrer"},qo=t("amqpbridge/src/AmqpBridge.impl.ts:346"),xo=o('<hr><h3 id="registersubscription" tabindex="-1"><a class="header-anchor" href="#registersubscription" aria-hidden="true">#</a> registerSubscription</h3><p>\u25B8 <strong>registerSubscription</strong>(<code>subscription</code>, <code>cb</code>): <code>Promise</code>&lt;<code>string</code>&gt;</p><h4 id="parameters-9" tabindex="-1"><a class="header-anchor" href="#parameters-9" aria-hidden="true">#</a> Parameters</h4>',4),yo=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),vo=e("td",{style:{"text-align":"left"}},[e("code",null,"subscription")],-1),Bo={style:{"text-align":"left"}},Ao=e("code",null,"Subscription",-1),Eo=e("td",{style:{"text-align":"left"}},[e("code",null,"cb")],-1),ko={style:{"text-align":"left"}},To=t("("),Po=e("code",null,"message",-1),wo=t(": "),Lo=e("code",null,"EBMessage",-1),No=t(") => "),Co=e("code",null,"Promise",-1),Do=t("<"),Ro=e("code",null,"void",-1),So=t(">"),Io=e("h4",{id:"returns-10",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-10","aria-hidden":"true"},"#"),t(" Returns")],-1),Mo=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"string"),t(">")],-1),Ko=e("h4",{id:"overrides-5",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#overrides-5","aria-hidden":"true"},"#"),t(" Overrides")],-1),Oo=t("EventBridge"),Fo=t("."),Go=t("registerSubscription"),Qo=e("h4",{id:"defined-in-21",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-21","aria-hidden":"true"},"#"),t(" Defined in")],-1),Vo={href:"https://github.com/sebastianwessel/purista/blob/c89c5bf/packages/amqpbridge/src/AmqpBridge.impl.ts#L448",target:"_blank",rel:"noopener noreferrer"},jo=t("amqpbridge/src/AmqpBridge.impl.ts:448"),Ho=o('<hr><h3 id="start" tabindex="-1"><a class="header-anchor" href="#start" aria-hidden="true">#</a> start</h3><p>\u25B8 <strong>start</strong>(): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>Connect to RabbitMQ broker, ensure exchange, call back queue</p><h4 id="returns-11" tabindex="-1"><a class="header-anchor" href="#returns-11" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="overrides-6" tabindex="-1"><a class="header-anchor" href="#overrides-6" aria-hidden="true">#</a> Overrides</h4>',7),Uo=t("EventBridge"),zo=t("."),Jo=t("start"),Wo=e("h4",{id:"defined-in-22",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-22","aria-hidden":"true"},"#"),t(" Defined in")],-1),Xo={href:"https://github.com/sebastianwessel/purista/blob/c89c5bf/packages/amqpbridge/src/AmqpBridge.impl.ts#L111",target:"_blank",rel:"noopener noreferrer"},Yo=t("amqpbridge/src/AmqpBridge.impl.ts:111"),Zo=o('<hr><h3 id="unregisterservicefunction" tabindex="-1"><a class="header-anchor" href="#unregisterservicefunction" aria-hidden="true">#</a> unregisterServiceFunction</h3><p>\u25B8 <strong>unregisterServiceFunction</strong>(<code>address</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="parameters-10" tabindex="-1"><a class="header-anchor" href="#parameters-10" aria-hidden="true">#</a> Parameters</h4>',4),$o=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),ea=e("td",{style:{"text-align":"left"}},[e("code",null,"address")],-1),ta={style:{"text-align":"left"}},sa=e("code",null,"EBMessageAddress",-1),na=e("h4",{id:"returns-12",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-12","aria-hidden":"true"},"#"),t(" Returns")],-1),da=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"void"),t(">")],-1),ia=e("h4",{id:"overrides-7",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#overrides-7","aria-hidden":"true"},"#"),t(" Overrides")],-1),oa=t("EventBridge"),aa=t("."),ra=t("unregisterServiceFunction"),la=e("h4",{id:"defined-in-23",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-23","aria-hidden":"true"},"#"),t(" Defined in")],-1),ca={href:"https://github.com/sebastianwessel/purista/blob/c89c5bf/packages/amqpbridge/src/AmqpBridge.impl.ts#L429",target:"_blank",rel:"noopener noreferrer"},ha=t("amqpbridge/src/AmqpBridge.impl.ts:429"),_a=o('<hr><h3 id="unregistersubscription" tabindex="-1"><a class="header-anchor" href="#unregistersubscription" aria-hidden="true">#</a> unregisterSubscription</h3><p>\u25B8 <strong>unregisterSubscription</strong>(<code>address</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="parameters-11" tabindex="-1"><a class="header-anchor" href="#parameters-11" aria-hidden="true">#</a> Parameters</h4>',4),ua=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),pa=e("td",{style:{"text-align":"left"}},[e("code",null,"address")],-1),ma={style:{"text-align":"left"}},ga=e("code",null,"EBMessageAddress",-1),fa=e("h4",{id:"returns-13",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-13","aria-hidden":"true"},"#"),t(" Returns")],-1),ba=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"void"),t(">")],-1),qa=e("h4",{id:"overrides-8",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#overrides-8","aria-hidden":"true"},"#"),t(" Overrides")],-1),xa=t("EventBridge"),ya=t("."),va=t("unregisterSubscription"),Ba=e("h4",{id:"defined-in-24",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-24","aria-hidden":"true"},"#"),t(" Defined in")],-1),Aa={href:"https://github.com/sebastianwessel/purista/blob/c89c5bf/packages/amqpbridge/src/AmqpBridge.impl.ts#L502",target:"_blank",rel:"noopener noreferrer"},Ea=t("amqpbridge/src/AmqpBridge.impl.ts:502");function ka(Ta,Pa){const n=a("RouterLink"),i=a("ExternalLinkIcon");return l(),c("div",null,[e("p",null,[s(n,{to:"/api/"},{default:d(()=>[_]),_:1}),u,s(n,{to:"/api/modules/purista_amqpbridge.html"},{default:d(()=>[p]),_:1}),m]),g,e("p",null,[s(n,{to:"/api/modules/purista_amqpbridge.html"},{default:d(()=>[f]),_:1}),b]),q,x,e("ul",null,[e("li",null,[e("p",null,[s(n,{to:"/api/classes/purista_amqpbridge.internal.EventBridge.html"},{default:d(()=>[y]),_:1})]),v])]),B,A,e("ul",null,[e("li",null,[s(n,{to:"/api/classes/purista_amqpbridge.AmqpBridge.html#constructor"},{default:d(()=>[E]),_:1})])]),k,e("ul",null,[e("li",null,[s(n,{to:"/api/classes/purista_amqpbridge.AmqpBridge.html#channel"},{default:d(()=>[T]),_:1})]),e("li",null,[s(n,{to:"/api/classes/purista_amqpbridge.AmqpBridge.html#config"},{default:d(()=>[P]),_:1})]),e("li",null,[s(n,{to:"/api/classes/purista_amqpbridge.AmqpBridge.html#connection"},{default:d(()=>[w]),_:1})]),e("li",null,[s(n,{to:"/api/classes/purista_amqpbridge.AmqpBridge.html#encoder"},{default:d(()=>[L]),_:1})]),e("li",null,[s(n,{to:"/api/classes/purista_amqpbridge.AmqpBridge.html#encrypter"},{default:d(()=>[N]),_:1})]),e("li",null,[s(n,{to:"/api/classes/purista_amqpbridge.AmqpBridge.html#log"},{default:d(()=>[C]),_:1})]),e("li",null,[s(n,{to:"/api/classes/purista_amqpbridge.AmqpBridge.html#pendinginvocations"},{default:d(()=>[D]),_:1})]),e("li",null,[s(n,{to:"/api/classes/purista_amqpbridge.AmqpBridge.html#replyqueuename"},{default:d(()=>[R]),_:1})]),e("li",null,[s(n,{to:"/api/classes/purista_amqpbridge.AmqpBridge.html#servicefunctions"},{default:d(()=>[S]),_:1})]),e("li",null,[s(n,{to:"/api/classes/purista_amqpbridge.AmqpBridge.html#subscriptions"},{default:d(()=>[I]),_:1})])]),M,e("ul",null,[e("li",null,[s(n,{to:"/api/classes/purista_amqpbridge.AmqpBridge.html#defaultcommandtimeout"},{default:d(()=>[K]),_:1})]),e("li",null,[s(n,{to:"/api/classes/purista_amqpbridge.AmqpBridge.html#instanceid"},{default:d(()=>[O]),_:1})])]),F,e("ul",null,[e("li",null,[s(n,{to:"/api/classes/purista_amqpbridge.AmqpBridge.html#decodecontent"},{default:d(()=>[G]),_:1})]),e("li",null,[s(n,{to:"/api/classes/purista_amqpbridge.AmqpBridge.html#emit"},{default:d(()=>[Q]),_:1})]),e("li",null,[s(n,{to:"/api/classes/purista_amqpbridge.AmqpBridge.html#emitmessage"},{default:d(()=>[V]),_:1})]),e("li",null,[s(n,{to:"/api/classes/purista_amqpbridge.AmqpBridge.html#encodecontent"},{default:d(()=>[j]),_:1})]),e("li",null,[s(n,{to:"/api/classes/purista_amqpbridge.AmqpBridge.html#invoke"},{default:d(()=>[H]),_:1})]),e("li",null,[s(n,{to:"/api/classes/purista_amqpbridge.AmqpBridge.html#off"},{default:d(()=>[U]),_:1})]),e("li",null,[s(n,{to:"/api/classes/purista_amqpbridge.AmqpBridge.html#on"},{default:d(()=>[z]),_:1})]),e("li",null,[s(n,{to:"/api/classes/purista_amqpbridge.AmqpBridge.html#registerservicefunction"},{default:d(()=>[J]),_:1})]),e("li",null,[s(n,{to:"/api/classes/purista_amqpbridge.AmqpBridge.html#registersubscription"},{default:d(()=>[W]),_:1})]),e("li",null,[s(n,{to:"/api/classes/purista_amqpbridge.AmqpBridge.html#start"},{default:d(()=>[X]),_:1})]),e("li",null,[s(n,{to:"/api/classes/purista_amqpbridge.AmqpBridge.html#unregisterservicefunction"},{default:d(()=>[Y]),_:1})]),e("li",null,[s(n,{to:"/api/classes/purista_amqpbridge.AmqpBridge.html#unregistersubscription"},{default:d(()=>[Z]),_:1})])]),$,e("table",null,[ee,e("tbody",null,[e("tr",null,[te,e("td",se,[s(n,{to:"/api/classes/purista_amqpbridge.internal.Logger.html"},{default:d(()=>[ne]),_:1})])]),e("tr",null,[de,e("td",ie,[s(n,{to:"/api/modules/purista_amqpbridge.html#amqpbridgeconfig"},{default:d(()=>[oe]),_:1})])])])]),ae,e("p",null,[s(n,{to:"/api/classes/purista_amqpbridge.internal.EventBridge.html"},{default:d(()=>[re]),_:1}),le,s(n,{to:"/api/classes/purista_amqpbridge.internal.EventBridge.html#constructor"},{default:d(()=>[ce]),_:1})]),he,e("p",null,[e("a",_e,[ue,s(i)])]),pe,e("p",null,[e("a",me,[ge,s(i)])]),fe,be,e("p",null,[qe,xe,ye,ve,Be,s(n,{to:"/api/modules/purista_amqpbridge.html#amqpbridgeconfig"},{default:d(()=>[Ae]),_:1})]),Ee,e("p",null,[e("a",ke,[Te,s(i)])]),Pe,e("p",null,[e("a",we,[Le,s(i)])]),Ne,Ce,e("p",null,[De,Re,Se,Ie,Me,s(n,{to:"/api/modules/purista_amqpbridge.html#encoder"},{default:d(()=>[Ke]),_:1})]),Oe,e("p",null,[e("a",Fe,[Ge,s(i)])]),Qe,Ve,e("p",null,[je,He,Ue,ze,Je,s(n,{to:"/api/modules/purista_amqpbridge.html#encrypter"},{default:d(()=>[We]),_:1})]),Xe,e("p",null,[e("a",Ye,[Ze,s(i)])]),$e,et,e("p",null,[tt,st,nt,dt,it,s(n,{to:"/api/classes/purista_amqpbridge.internal.Logger.html"},{default:d(()=>[ot]),_:1})]),at,e("p",null,[e("a",rt,[lt,s(i)])]),ct,ht,e("p",null,[_t,ut,pt,mt,gt,ft,bt,qt,xt,s(n,{to:"/api/modules/purista_amqpbridge.internal.html#pendiginvocation"},{default:d(()=>[yt]),_:1}),vt]),Bt,e("p",null,[e("a",At,[Et,s(i)])]),kt,e("p",null,[e("a",Tt,[Pt,s(i)])]),wt,Lt,e("p",null,[Nt,Ct,Dt,Rt,St,It,Mt,Kt,Ot,Ft,Gt,Qt,Vt,s(n,{to:"/api/modules/purista_amqpbridge.internal.html#command-1"},{default:d(()=>[jt]),_:1}),Ht,Ut,zt,Jt,Wt,Xt,Yt,s(n,{to:"/api/modules/purista_amqpbridge.internal.html#commanderrorresponse-1"},{default:d(()=>[Zt]),_:1}),$t,s(n,{to:"/api/modules/purista_amqpbridge.internal.html#commandsuccessresponse-1"},{default:d(()=>[es]),_:1}),ts,ss,ns,ds,is,os,as]),rs,e("p",null,[e("a",ls,[cs,s(i)])]),hs,_s,e("p",null,[us,ps,ms,gs,fs,bs,qs,xs,ys,vs,Bs,As,Es,s(n,{to:"/api/modules/purista_amqpbridge.internal.html#command-1"},{default:d(()=>[ks]),_:1}),Ts,Ps,ws,Ls,Ns,Cs,Ds,Rs,Ss,Is,Ms,Ks,Os]),Fs,e("p",null,[e("a",Gs,[Qs,s(i)])]),Vs,e("p",null,[e("a",js,[Hs,s(i)])]),Us,e("p",null,[e("a",zs,[Js,s(i)])]),Ws,e("p",null,[e("a",Xs,[Ys,s(i)])]),Zs,e("table",null,[$s,e("tbody",null,[e("tr",null,[en,e("td",tn,[sn,s(n,{to:"/api/modules/purista_amqpbridge.internal.html#eventkey"},{default:d(()=>[nn]),_:1}),dn,s(n,{to:"/api/modules/purista_amqpbridge.internal.html#eventbridgeevents"},{default:d(()=>[on]),_:1}),an])])])]),rn,e("table",null,[ln,e("tbody",null,[cn,e("tr",null,[hn,e("td",_n,[s(n,{to:"/api/modules/purista_amqpbridge.internal.html#eventbridgeevents"},{default:d(()=>[un]),_:1}),pn,mn,gn])])])]),fn,bn,qn,e("p",null,[s(n,{to:"/api/classes/purista_amqpbridge.internal.EventBridge.html"},{default:d(()=>[xn]),_:1}),yn,s(n,{to:"/api/classes/purista_amqpbridge.internal.EventBridge.html#emit"},{default:d(()=>[vn]),_:1})]),Bn,An,En,kn,e("p",null,[Tn,s(n,{to:"/api/modules/purista_amqpbridge.internal.html#ebmessage"},{default:d(()=>[Pn]),_:1}),wn]),Ln,e("table",null,[Nn,e("tbody",null,[e("tr",null,[Cn,e("td",Dn,[Rn,s(n,{to:"/api/modules/purista_amqpbridge.internal.html#ebmessage"},{default:d(()=>[Sn]),_:1})])])])]),In,e("table",null,[Mn,e("tbody",null,[e("tr",null,[Kn,e("td",On,[Fn,Gn,s(n,{to:"/api/modules/purista_amqpbridge.internal.html#ebmessage"},{default:d(()=>[Qn]),_:1}),Vn,jn,Hn,Un,zn,Jn,Wn,Xn,Yn]),Zn]),$n,ed])]),td,e("p",null,[sd,nd,dd,id,s(n,{to:"/api/modules/purista_amqpbridge.internal.html#ebmessage"},{default:d(()=>[od]),_:1}),ad]),rd,e("p",null,[s(n,{to:"/api/classes/purista_amqpbridge.internal.EventBridge.html"},{default:d(()=>[ld]),_:1}),cd,s(n,{to:"/api/classes/purista_amqpbridge.internal.EventBridge.html#emitmessage"},{default:d(()=>[hd]),_:1})]),_d,e("p",null,[e("a",ud,[pd,s(i)])]),md,e("p",null,[e("a",gd,[fd,s(i)])]),bd,e("table",null,[qd,e("tbody",null,[e("tr",null,[xd,e("td",yd,[vd,Bd,s(n,{to:"/api/modules/purista_amqpbridge.internal.html#command-1"},{default:d(()=>[Ad]),_:1}),Ed]),kd]),Td,Pd,wd])]),Ld,Nd,Cd,e("p",null,[s(n,{to:"/api/classes/purista_amqpbridge.internal.EventBridge.html"},{default:d(()=>[Dd]),_:1}),Rd,s(n,{to:"/api/classes/purista_amqpbridge.internal.EventBridge.html#invoke"},{default:d(()=>[Sd]),_:1})]),Id,e("p",null,[e("a",Md,[Kd,s(i)])]),Od,e("table",null,[Fd,e("tbody",null,[e("tr",null,[Gd,e("td",Qd,[Vd,s(n,{to:"/api/modules/purista_amqpbridge.internal.html#eventkey"},{default:d(()=>[jd]),_:1}),Hd,s(n,{to:"/api/modules/purista_amqpbridge.internal.html#eventbridgeevents"},{default:d(()=>[Ud]),_:1}),zd])])])]),Jd,e("table",null,[Wd,e("tbody",null,[Xd,e("tr",null,[Yd,e("td",Zd,[s(n,{to:"/api/modules/purista_amqpbridge.internal.html#eventreceiver"},{default:d(()=>[$d]),_:1}),ei,s(n,{to:"/api/modules/purista_amqpbridge.internal.html#eventbridgeevents"},{default:d(()=>[ti]),_:1}),si,ni,di])])])]),ii,oi,ai,e("p",null,[s(n,{to:"/api/classes/purista_amqpbridge.internal.EventBridge.html"},{default:d(()=>[ri]),_:1}),li,s(n,{to:"/api/classes/purista_amqpbridge.internal.EventBridge.html#off"},{default:d(()=>[ci]),_:1})]),hi,e("table",null,[_i,e("tbody",null,[e("tr",null,[ui,e("td",pi,[mi,s(n,{to:"/api/modules/purista_amqpbridge.internal.html#eventkey"},{default:d(()=>[gi]),_:1}),fi,s(n,{to:"/api/modules/purista_amqpbridge.internal.html#eventbridgeevents"},{default:d(()=>[bi]),_:1}),qi])])])]),xi,e("table",null,[yi,e("tbody",null,[vi,e("tr",null,[Bi,e("td",Ai,[s(n,{to:"/api/modules/purista_amqpbridge.internal.html#eventreceiver"},{default:d(()=>[Ei]),_:1}),ki,s(n,{to:"/api/modules/purista_amqpbridge.internal.html#eventbridgeevents"},{default:d(()=>[Ti]),_:1}),Pi,wi,Li])])])]),Ni,Ci,Di,e("p",null,[s(n,{to:"/api/classes/purista_amqpbridge.internal.EventBridge.html"},{default:d(()=>[Ri]),_:1}),Si,s(n,{to:"/api/classes/purista_amqpbridge.internal.EventBridge.html#on"},{default:d(()=>[Ii]),_:1})]),Mi,e("table",null,[Ki,e("tbody",null,[e("tr",null,[Oi,e("td",Fi,[s(n,{to:"/api/modules/purista_amqpbridge.internal.html#ebmessageaddress"},{default:d(()=>[Gi]),_:1})]),Qi]),e("tr",null,[Vi,e("td",ji,[Hi,Ui,zi,s(n,{to:"/api/modules/purista_amqpbridge.internal.html#command-1"},{default:d(()=>[Ji]),_:1}),Wi,Xi,Yi,Zi,$i,eo,to,s(n,{to:"/api/modules/purista_amqpbridge.internal.html#commanderrorresponse-1"},{default:d(()=>[so]),_:1}),no,s(n,{to:"/api/modules/purista_amqpbridge.internal.html#commandsuccessresponse-1"},{default:d(()=>[io]),_:1}),oo,ao,ro]),lo])])]),co,ho,_o,uo,e("p",null,[s(n,{to:"/api/classes/purista_amqpbridge.internal.EventBridge.html"},{default:d(()=>[po]),_:1}),mo,s(n,{to:"/api/classes/purista_amqpbridge.internal.EventBridge.html#registerservicefunction"},{default:d(()=>[go]),_:1})]),fo,e("p",null,[e("a",bo,[qo,s(i)])]),xo,e("table",null,[yo,e("tbody",null,[e("tr",null,[vo,e("td",Bo,[s(n,{to:"/api/modules/purista_amqpbridge.internal.html#subscription"},{default:d(()=>[Ao]),_:1})])]),e("tr",null,[Eo,e("td",ko,[To,Po,wo,s(n,{to:"/api/modules/purista_amqpbridge.internal.html#ebmessage"},{default:d(()=>[Lo]),_:1}),No,Co,Do,Ro,So])])])]),Io,Mo,Ko,e("p",null,[s(n,{to:"/api/classes/purista_amqpbridge.internal.EventBridge.html"},{default:d(()=>[Oo]),_:1}),Fo,s(n,{to:"/api/classes/purista_amqpbridge.internal.EventBridge.html#registersubscription"},{default:d(()=>[Go]),_:1})]),Qo,e("p",null,[e("a",Vo,[jo,s(i)])]),Ho,e("p",null,[s(n,{to:"/api/classes/purista_amqpbridge.internal.EventBridge.html"},{default:d(()=>[Uo]),_:1}),zo,s(n,{to:"/api/classes/purista_amqpbridge.internal.EventBridge.html#start"},{default:d(()=>[Jo]),_:1})]),Wo,e("p",null,[e("a",Xo,[Yo,s(i)])]),Zo,e("table",null,[$o,e("tbody",null,[e("tr",null,[ea,e("td",ta,[s(n,{to:"/api/modules/purista_amqpbridge.internal.html#ebmessageaddress"},{default:d(()=>[sa]),_:1})])])])]),na,da,ia,e("p",null,[s(n,{to:"/api/classes/purista_amqpbridge.internal.EventBridge.html"},{default:d(()=>[oa]),_:1}),aa,s(n,{to:"/api/classes/purista_amqpbridge.internal.EventBridge.html#unregisterservicefunction"},{default:d(()=>[ra]),_:1})]),la,e("p",null,[e("a",ca,[ha,s(i)])]),_a,e("table",null,[ua,e("tbody",null,[e("tr",null,[pa,e("td",ma,[s(n,{to:"/api/modules/purista_amqpbridge.internal.html#ebmessageaddress"},{default:d(()=>[ga]),_:1})])])])]),fa,ba,qa,e("p",null,[s(n,{to:"/api/classes/purista_amqpbridge.internal.EventBridge.html"},{default:d(()=>[xa]),_:1}),ya,s(n,{to:"/api/classes/purista_amqpbridge.internal.EventBridge.html#unregistersubscription"},{default:d(()=>[va]),_:1})]),Ba,e("p",null,[e("a",Aa,[Ea,s(i)])])])}var Na=r(h,[["render",ka],["__file","purista_amqpbridge.AmqpBridge.html.vue"]]);export{Na as default};
