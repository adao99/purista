import{_ as s}from"./_plugin-vue_export-helper.cdc0426e.js";import{o,c,b as e,e as n,w as d,d as t,a as l,r}from"./app.520110ff.js";const h={},u=l('<h1 id="module-purista-amqpbridge" tabindex="-1"><a class="header-anchor" href="#module-purista-amqpbridge" aria-hidden="true">#</a> Module: @purista/amqpbridge</h1><h2 id="table-of-contents" tabindex="-1"><a class="header-anchor" href="#table-of-contents" aria-hidden="true">#</a> Table of contents</h2><h3 id="namespaces" tabindex="-1"><a class="header-anchor" href="#namespaces" aria-hidden="true">#</a> Namespaces</h3>',3),p=e("h3",{id:"classes",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#classes","aria-hidden":"true"},"#"),t(" Classes")],-1),f=e("h3",{id:"type-aliases",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-aliases","aria-hidden":"true"},"#"),t(" Type Aliases")],-1),_=e("h3",{id:"functions",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#functions","aria-hidden":"true"},"#"),t(" Functions")],-1),g=l('<h2 id="type-aliases-1" tabindex="-1"><a class="header-anchor" href="#type-aliases-1" aria-hidden="true">#</a> Type Aliases</h2><h3 id="amqpbridgeconfig" tabindex="-1"><a class="header-anchor" href="#amqpbridgeconfig" aria-hidden="true">#</a> AmqpBridgeConfig</h3><p>\u01AC <strong>AmqpBridgeConfig</strong>: <code>Object</code></p><p>AmqpBridge bridge config</p><h4 id="type-declaration" tabindex="-1"><a class="header-anchor" href="#type-declaration" aria-hidden="true">#</a> Type declaration</h4>',5),m=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),b=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"defaultCommandTimeout")]),e("td",{style:{"text-align":"left"}},[e("code",null,"number")])],-1),y=e("td",{style:{"text-align":"left"}},[e("code",null,"encoder?")],-1),x={style:{"text-align":"left"}},q=e("code",null,"Encoder",-1),E=e("td",{style:{"text-align":"left"}},[e("code",null,"encrypter?")],-1),k={style:{"text-align":"left"}},B=e("code",null,"Encrypter",-1),C=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"exchangeName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),A=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"exchangeOptions?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Options.AssertExchange")])],-1),D=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"instanceId")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),T=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"namePrefix?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),F=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"socketOptions?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"any")])],-1),L=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"url")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string"),t(" | "),e("code",null,"Options.Connect")])],-1),N=e("h4",{id:"defined-in",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in","aria-hidden":"true"},"#"),t(" Defined in")],-1),w={href:"https://github.com/sebastianwessel/purista/blob/dc1cd23/packages/amqpbridge/src/types/AmqpBridgeConfig.ts#L9",target:"_blank",rel:"noopener noreferrer"},O=e("hr",null,null,-1),R=e("h3",{id:"encoder",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#encoder","aria-hidden":"true"},"#"),t(" Encoder")],-1),I=e("strong",null,"Encoder",-1),P=e("code",null,"Record",-1),v=e("code",null,"string",-1),V=e("code",null,"EncoderFunctions",-1),j=e("h4",{id:"defined-in-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-1","aria-hidden":"true"},"#"),t(" Defined in")],-1),S={href:"https://github.com/sebastianwessel/purista/blob/dc1cd23/packages/amqpbridge/src/types/Encoder.ts#L3",target:"_blank",rel:"noopener noreferrer"},M=l('<hr><h3 id="encryptfunctions" tabindex="-1"><a class="header-anchor" href="#encryptfunctions" aria-hidden="true">#</a> EncryptFunctions</h3><p>\u01AC <strong>EncryptFunctions</strong>: <code>Object</code></p><h4 id="type-declaration-1" tabindex="-1"><a class="header-anchor" href="#type-declaration-1" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>decrypt</code></td><td style="text-align:left;">(<code>input</code>: <code>Buffer</code>) =&gt; <code>Promise</code>&lt;<code>Buffer</code>&gt;</td></tr><tr><td style="text-align:left;"><code>encrypt</code></td><td style="text-align:left;">(<code>input</code>: <code>Buffer</code>) =&gt; <code>Promise</code>&lt;<code>Buffer</code>&gt;</td></tr></tbody></table><h4 id="defined-in-2" tabindex="-1"><a class="header-anchor" href="#defined-in-2" aria-hidden="true">#</a> Defined in</h4>',6),U={href:"https://github.com/sebastianwessel/purista/blob/dc1cd23/packages/amqpbridge/src/types/EncryptFunctions.ts#L1",target:"_blank",rel:"noopener noreferrer"},z=e("hr",null,null,-1),G=e("h3",{id:"encrypter",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#encrypter","aria-hidden":"true"},"#"),t(" Encrypter")],-1),H=e("strong",null,"Encrypter",-1),J=e("code",null,"Record",-1),K=e("code",null,"string",-1),Q=e("code",null,"EncryptFunctions",-1),W=e("h4",{id:"defined-in-3",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-3","aria-hidden":"true"},"#"),t(" Defined in")],-1),X={href:"https://github.com/sebastianwessel/purista/blob/dc1cd23/packages/amqpbridge/src/types/Encrypter.ts#L3",target:"_blank",rel:"noopener noreferrer"},Y=e("h2",{id:"functions-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#functions-1","aria-hidden":"true"},"#"),t(" Functions")],-1),Z=e("h3",{id:"getdefaultconfig",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#getdefaultconfig","aria-hidden":"true"},"#"),t(" getDefaultConfig")],-1),$=e("strong",null,"getDefaultConfig",-1),ee=e("code",null,"AmqpBridgeConfig",-1),te=e("h4",{id:"returns",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns","aria-hidden":"true"},"#"),t(" Returns")],-1),ne=e("code",null,"AmqpBridgeConfig",-1),ae=e("h4",{id:"defined-in-4",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-4","aria-hidden":"true"},"#"),t(" Defined in")],-1),de={href:"https://github.com/sebastianwessel/purista/blob/dc1cd23/packages/amqpbridge/src/getDefaultConfig.impl.ts#L5",target:"_blank",rel:"noopener noreferrer"};function ie(le,re){const a=r("RouterLink"),i=r("ExternalLinkIcon");return o(),c("div",null,[e("p",null,[n(a,{to:"/api/"},{default:d(()=>[t("PURISTA API - v1.4.3")]),_:1}),t(" / @purista/amqpbridge")]),u,e("ul",null,[e("li",null,[n(a,{to:"/api/modules/purista_amqpbridge.internal.html"},{default:d(()=>[t("internal")]),_:1})])]),p,e("ul",null,[e("li",null,[n(a,{to:"/api/classes/purista_amqpbridge.AmqpBridge.html"},{default:d(()=>[t("AmqpBridge")]),_:1})])]),f,e("ul",null,[e("li",null,[n(a,{to:"/api/modules/purista_amqpbridge.html#amqpbridgeconfig"},{default:d(()=>[t("AmqpBridgeConfig")]),_:1})]),e("li",null,[n(a,{to:"/api/modules/purista_amqpbridge.html#encoder"},{default:d(()=>[t("Encoder")]),_:1})]),e("li",null,[n(a,{to:"/api/modules/purista_amqpbridge.html#encryptfunctions"},{default:d(()=>[t("EncryptFunctions")]),_:1})]),e("li",null,[n(a,{to:"/api/modules/purista_amqpbridge.html#encrypter"},{default:d(()=>[t("Encrypter")]),_:1})])]),_,e("ul",null,[e("li",null,[n(a,{to:"/api/modules/purista_amqpbridge.html#getdefaultconfig"},{default:d(()=>[t("getDefaultConfig")]),_:1})])]),g,e("table",null,[m,e("tbody",null,[b,e("tr",null,[y,e("td",x,[n(a,{to:"/api/modules/purista_amqpbridge.html#encoder"},{default:d(()=>[q]),_:1})])]),e("tr",null,[E,e("td",k,[n(a,{to:"/api/modules/purista_amqpbridge.html#encrypter"},{default:d(()=>[B]),_:1})])]),C,A,D,T,F,L])]),N,e("p",null,[e("a",w,[t("amqpbridge/src/types/AmqpBridgeConfig.ts:9"),n(i)])]),O,R,e("p",null,[t("\u01AC "),I,t(": "),P,t("<"),v,t(", "),n(a,{to:"/api/modules/purista_amqpbridge.internal.html#encoderfunctions"},{default:d(()=>[V]),_:1}),t(">")]),j,e("p",null,[e("a",S,[t("amqpbridge/src/types/Encoder.ts:3"),n(i)])]),M,e("p",null,[e("a",U,[t("amqpbridge/src/types/EncryptFunctions.ts:1"),n(i)])]),z,G,e("p",null,[t("\u01AC "),H,t(": "),J,t("<"),K,t(", "),n(a,{to:"/api/modules/purista_amqpbridge.html#encryptfunctions"},{default:d(()=>[Q]),_:1}),t(">")]),W,e("p",null,[e("a",X,[t("amqpbridge/src/types/Encrypter.ts:3"),n(i)])]),Y,Z,e("p",null,[t("\u25B8 "),$,t("(): "),n(a,{to:"/api/modules/purista_amqpbridge.html#amqpbridgeconfig"},{default:d(()=>[ee]),_:1})]),te,e("p",null,[n(a,{to:"/api/modules/purista_amqpbridge.html#amqpbridgeconfig"},{default:d(()=>[ne]),_:1})]),ae,e("p",null,[e("a",de,[t("amqpbridge/src/getDefaultConfig.impl.ts:5"),n(i)])])])}const ce=s(h,[["render",ie],["__file","purista_amqpbridge.html.vue"]]);export{ce as default};
